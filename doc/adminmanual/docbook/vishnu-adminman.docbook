<?xml version="1.0" encoding="UTF-8"?>
<book
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" label="UMS.apim#MAN(admin);UMS.apim#CPP(admin);UMS.apim#PYTHON(admin);IMS.apim#MAN(admin);IMS.apim#CPP(admin);IMS.apim#PYTHON(admin)">
  <info>
    <author>
      <personname>
        <firstname>Benjamin</firstname>
        <surname>Isnard</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Daouda</firstname>
        <surname>Traoré</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Eugène</firstname>
        <surname>Pamba Capo-Chichi</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Kevin</firstname>
        <surname>Coulomb</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Ibrahima</firstname>
        <surname>Cissé</surname>
      </personname>
    </author>
    <title>VISHNU - Le guide de l'administrateur</title>
    <revhistory>
      <revision>
        <revnumber>1</revnumber>
        <date>08/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          
        <para>Version initiale pour le module UMS uniquement</para></revdescription>
      </revision>
      <revision>
        <revnumber>2</revnumber>
        <date>18/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          
        <para>Ajout du lancement manuel avec forwarder et d'image de fichiers de configuration exemple</para></revdescription>
      </revision>
      <revision>
        <revnumber>3</revnumber>
        <date>22/03/2011</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          
        <para>Ajout des web services</para></revdescription>
      </revision>
      <revision>
        <revnumber>4</revnumber>
        <date>11/05/2011</date>
        <authorinitials>K. COULOMB, B.ISNARD</authorinitials>
        <revdescription>
          
          
          
        <para>Réécriture du lancement avec fichier de configuration.</para><para>Ajout d'un paragraphe pour le sendmail.</para><para>Ajout de l'administration de TMS.</para></revdescription>
      </revision>
      <revision>
        <revnumber>5</revnumber>
        <date>18/05/2011</date>
        <authorinitials>B.ISNARD</authorinitials>
        <revdescription>
          
        <para>Ajout du parametre de configuration dbConnectionsNb.</para></revdescription>
      </revision>
      <revision>
        <revnumber>6</revnumber>
        <date>10/06/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
          
        <para>Documentation pour IMS.</para></revdescription>
      </revision>
      <revision>
        <revnumber>7</revnumber>
        <date>15/06/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>
          
        <para>Documentation pour FMS.</para></revdescription>
      </revision>
      <revision>
        <revnumber>8</revnumber>
        <date>22/06/2011</date>
        <authorinitials>B.ISNARD</authorinitials>
        <revdescription>
          
        <para>Ajout de l'option ENABLE_SWIG.</para></revdescription>
      </revision>
      <revision>
        <revnumber>9</revnumber>
        <date>24/06/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>
          
        <para>Ajout de l'option vishnuMachineId dans les fichiers de
            configuration de UMS, IMS et FMS .</para></revdescription>
      </revision>
      <revision>
        <revnumber>10</revnumber>
        <date>13/07/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
          
        <para>Mise à jour du document suites aux premiers retours .</para></revdescription>
      </revision>
      <revision>
        <revnumber>11</revnumber>
        <date>11/08/2011</date>
        <authorinitials>D.TRAORE</authorinitials>
        <revdescription>
        <para>Prise en compte du gestionnaire de resources SLURM</para></revdescription>
      </revision>
      <revision>
        <revnumber>12</revnumber>
        <date>23/08/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
        <para>Ajout d'un lien sur des sites expliquant comment installer une base de données postgresql/mysql. Suppression des informations de mise à jour de la base (maintenant le script de création contient tout). Ajout d'une référence vers 'VISHNU_API'</para></revdescription>
      </revision>
      <revision>
        <revnumber>13</revnumber>
        <date>14/12/2011</date>
        <authorinitials>K.COULOMB</authorinitials>
        <revdescription>
        <para>
          Mise à jour pour les nouveaux forwarder de DIET.
      </para></revdescription>
      </revision>
      <revision>
        <revnumber>14</revnumber>
        <date>15/12/2011</date>
        <authorinitials>I.CISSE</authorinitials>
        <revdescription>
          <para>
            Mise à jour de la section configuration des clés ssh requises pour FMS.
        </para></revdescription>
      </revision>
      <revision>
        <revnumber>15</revnumber>
        <date>16/12/2011</date>
        <authorinitials>D.TRAORE</authorinitials>
        <revdescription>
          <para>
            Ajout de la section configuration des clés ssh requises pour TMS.
        </para></revdescription>
      </revision>
      <revision>
        <revnumber>16</revnumber>
        <date>30/01/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          <para>
            Modifie les requirements en fonction de la version de DIET
        </para></revdescription>
      </revision>
      <revision>
        <revnumber>17</revnumber>
        <date>27/02/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
          <para>
            Liste les libs de boost nécessaire
        </para></revdescription>
      </revision>
      <revision>
        <revnumber>18</revnumber>
        <date>02/03/2012</date>
        <authorinitials>D.TRAORE</authorinitials>
        <revdescription>
        <para>Prise en compte du gestionnaire de resources LSF</para></revdescription>
      </revision>
      <revision>
        <revnumber>19</revnumber>
        <date>22/03/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
        <para>Ajout pour le support de LDAP</para></revdescription>
      </revision>
      <revision>
        <revnumber>20</revnumber>
        <date>11/04/2012</date>
        <authorinitials>E. PAMBA CAPO-CHICHI</authorinitials>
        <revdescription>
        <para>Prise en compte du gestionnaire de resources Grid Engine</para></revdescription>
      </revision>
      <revision>
        <revnumber>21</revnumber>
        <date>30/05/2012</date>
        <authorinitials>E. PAMBA CAPO-CHICHI</authorinitials>
        <revdescription>
        <para> Ajout des versions de LoadLeveler, GLIBC pour libcrypt et ssh</para></revdescription>
      </revision>
      <revision>
        <revnumber>22</revnumber>
        <date>27/08/2012</date>
        <authorinitials>K. COULOMB</authorinitials>
        <revdescription>
        <para> Nouvelle compilation avec les batchs</para></revdescription>
      </revision>
      <revision>
        <revnumber>23</revnumber>
        <date>01/10/2012</date>
        <authorinitials>R. Chakode</authorinitials>
        <revdescription>
        <para>Ajout des prérequis en termes de connaissances systèmes et raffinement de la procédure d'installation</para></revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter>
    <title>Présentation du document</title>
    <section>
      <title>Objectifs du document</title>
      <para>
	Ce document décrit l'installation, la configuration et l'administration des différents composants de la suite logicielle VISHNU. 
      </para>
    </section>
    <section>
      <title>Prérequis</title>
      <para>
	Pour assurer un bon confort lors de la lecture de ce document, le lecteur doit au moins avoir des connaissances basiques en administration système 
	en environnement GNU/Linux. En particulier et selon votre système d'exploitation, la maitrise d'un outil de gestion de paquets tels que apt-get, 
	dpkg, rpm ou yum est vivement recommandée pour faciliter la recherche et l'installation des dépendances logicielles de VISHNU.
      </para>
    </section>
    <section>
      <title>Structure du document</title>
      <para>Ce document contient les parties suivantes:
      </para>
      <para>
	<itemizedlist>
          <listitem>
            <para>Définitions</para>
          </listitem>
          <listitem>
            <para>Installation</para>
          </listitem>
          <listitem>
            <para>Installation des web services</para>
          </listitem>
          <listitem>
            <para>Déploiement</para>
          </listitem>
          <listitem>
            <para>Administration</para>
          </listitem>
          <listitem>
            <para>Référence des commandes (en anglais)</para>
          </listitem>
          <listitem>
            <para>Référence de l'API C++ (en anglais)</para>
          </listitem>
          <listitem>
            <para>Référence de l'API Python (en anglais)</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>
  <chapter>
    <title>Définitions</title>
    <section>
      <title>Acronymes</title>
      <itemizedlist>
        <listitem>
          <para>DB : Database ou base de données, est un point central fournissant des mécanismes pour stocker et récupérer les données de manière efficace par les applicatons</para>
        </listitem>
        <listitem>
          <para>FMS : File Management Servic ou système de gestion de fichiers</para>
        </listitem>
        <listitem>
          <para>IMS : Information Management Service ou système de gestion d'information</para>
        </listitem>
        <listitem>
          <para>LDAP : Lightweight Directory Access Protocol, est un protocole de gestion d'annuaires</para>
        </listitem>
        <listitem>
          <para> MA : &quot;Master Agent&quot;: élément de Sysfera-DS distribuant les requêtes entre les clients et les services désirés.</para>
        </listitem>
        <listitem>
          <para>SQL : Structured Query Language, est un langage avancée de requêtes sur les bases de données</para>
        </listitem>
        <listitem>
          <para>TMS : Task Management Service ou système de gestion de tâches</para>
        </listitem>
        <listitem>
          <para>UMS : User Management Service ou système de gestion des utilisateurs</para>
        </listitem>
        <listitem>
          <para>WS : Web Service ou service web</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Références</title>
      <itemizedlist>
        <listitem>
          <para>[ARCH] D1.1g-VISHNU Technical Architecture : description de l'architecture de l'application VISHNU</para>
        </listitem>
        <listitem>
          <para>[DIET_USERGUIDE] DIET User Guide : guide de l'utilisateur DIET (nom du projet OpenSource de l'application SysFera-DS)</para>
        </listitem>
        <listitem>
          <para>[VISHNU_USERMANUAL] VISHNU User Manual : guide de l'utilisateur VISHNU.</para>
        </listitem>
        <listitem>
          <para>[VISHNU_API] VISHNU API : API VISHNU contenant les signatures et la définition des objets.</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Glossaire</title>
      <para>
	<itemizedlist>
          <listitem>
            <para>Client FMS : Cela désigne les programmes permettant un accès à distance aux services du SeD FMS. </para>
          </listitem>
          <listitem>
            <para>Client IMS : Cela désigne les programmes permettant un accès à distance aux services du SeD IMS. </para>
          </listitem>
          <listitem>
            <para>Client TMS : Cela désigne les programmes permettant un accès à distance aux services du SeD TMS. </para>
          </listitem>
          <listitem>
            <para>Client UMS : Cela désigne les programmes permettant un accès à distance aux services du SeD UMS. </para>
          </listitem>
          <listitem>
            <para>Préfrontale : Cela désigne une machine mise avant la(les) frontale(s) des calculateurs. </para>
          </listitem>
          <listitem>
            <para>SeD fMS : Cela désigne le programme contenant et exécutant les services du module IMS. </para>
          </listitem>
          <listitem>
            <para>SeD IMS : Cela désigne le programme contenant et exécutant les services du module IMS. </para>
          </listitem>
          <listitem>
            <para>SeD TMS : Cela désigne le programme contenant et exécutant les services du module TMS. </para>
          </listitem>
          <listitem>
            <para>SeD UMS : Cela désigne le programme contenant et exécutant les services du module UMS. </para>
          </listitem>
          <listitem>
            <para>Sysfera-DS : Intergiciel open source développé par SysFera. </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>
  <chapter>
    <title>Installation à partir des sources</title>
    <section>
      <title>Objectifs</title>
      <para> Ce chapitre présentera comment installer VISHNU à partir des sources.</para>
      <para>Nous décrirons comment installer et configurer la partie serveur et la partie client. 
      L'installation de la partie client est indépendante de la partie serveur. Mais, à l'inverse, 
      l'installation de la partie serveur nécessite l'installation de la partie client. 
      Par ailleurs, il faut noter que le module UMS est requis pour faire fonctionner les modules FMS, IMS et TMS. 
      Même si ces derniers peuvent être installés sur des machines indépendantes. Toutefois, pour qu'IMS puisse gérer 
      le délestage, les différents modules doivent être installés sur la même machine.
      </para>
    </section>
    <section>
      <title>Prérequis</title>
      <para>La compilation des sources de Vishnu dépend d'un ensemble de bibliothèques présentées ci-dessous.
      Sur la plupart des distributions GNU/Linux tels que Debian, Ubuntu, Redhat, Fedora ou SuSE Linux, ces bibliothèques peuvent 
      être facilement installées à partir du gestionnaire de paquets (apt-get, yum ou zypper). Vous pouvez également les installer
      à partir des sources téléchargeables sur leur site respectif. 
      </para>
      <itemizedlist>
        <listitem>
          <para>Dépendances requises:</para>
          <itemizedlist>
            <listitem>
              <para>GCC : Version 4.4.3 ou ultérieure.</para>
            </listitem>
            <listitem>
              <para>CMAKE : Version 2.8 ou ultérieure.</para>
            </listitem>
            <listitem>
              <para>BOOST : Version 1.46.1 ou ultérieure. Au 
              moins les modules <emphasis>program_options</emphasis>, <emphasis>date_time, thread, filesystem, 
              system, unit_test_framework, serialization, random</emphasis> et <emphasis>regex</emphasis> doivent 
              être installés
              </para>
            </listitem>
            <listitem>
              <para>OMNIORB : Version 4.1.4 ou ultérieure.</para>
            </listitem>
            <listitem>
              <para> GLIBC : Version 2.7 ou ultérieure.</para>
            </listitem>
            <listitem>
              <para>openSSH : Version 4.2 ou ultérieure.</para>
            </listitem>
            <listitem>
              <para>DIET : version 2.8 ou ultérieure. Le module 
              <emphasis>LOG SERVICE</emphasis> doit être activé.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Dépendances optionelles pour le module UMS:</para>
          <itemizedlist>
            <listitem>
              <para>OpenLDAP : Version 2.4</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>En fonction du Batch Scheduler sous-jacent à TMS, vous devez installer les APIs correspondantes :</para>
          <itemizedlist>
            <listitem>
              <para>Torque API : Version 2.3.6.</para>
            </listitem>
            <listitem>
              <para>IBM LoadLeveler API : Version 3.5.1.14</para>
            </listitem>
            <listitem>
              <para>SLURM API : Versions 2.2.x, 2.3.x ou 2.4.x. Non testé avec les versions inférieures ou supérieures.</para>
            </listitem>
            <listitem>
              <para>LSF API : Version 7.0.6.134609</para>
            </listitem>
            <listitem>
              <para>Grid Engine API : Version 2011.11</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Dépendances optionnelles:</para>
          <itemizedlist>
            <listitem>
              <para>SWIG : Version 1.3.40 (ATTENTION : la version 2 de SWIG n'est pas supporté).</para>
            </listitem>
            <listitem>
              <para>JAVA SDK : Version 1.6.</para>
            </listitem>
            <listitem>
              <para>Python : Version 2.x, x>=5.</para>
            </listitem>
            <listitem>
              <para>Base de données, à mettre sur les machines avec des serveurs, au choix : </para>
              <itemizedlist>
                <listitem>
                  <para>PGSQL-API (api PostGreSQL) : Version 8.0 minimum.</para>
                </listitem>
                <listitem>
                  <para>MYSQL-API (api MySQL) : Version 5.1 minimum.</para>
                </listitem>
              </itemizedlist>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title> Compilation des sources </title>
      <para>VISHNU utilise CMake comme système de construction et se conforme aux
	pratiques communément admises.
	Les options principales utilisables sont les suivantes:
	<itemizedlist>
          <listitem>
            <para>
	      BUILD_TESTING, compile les tests si le flag est activé (OFF par défaut).
	    </para>
          </listitem>
          <listitem>
            <para>
	      CLIENT_ONLY, qui permet de ne compiler que les clients si le flag est activé (OFF par défaut). Sinon les clients et les serveurs sont compilés.
	    </para>
          </listitem>
          <listitem>
            <para>
	      CMAKE_INSTALL_PREFIX, répertoire d'installation (/usr/local par défaut sur les plateformes *nix)
	    </para>
          </listitem>
          <listitem>
            <para>
	      COMPILE_TMS, compile le module TMS si le flag est activé (OFF par défaut). Si ON, COMPILE_UMS doit aussi être à ON et
              les options VISHNU_BATCH et VISHNU_BATCH_VERSION doivent être remplies.
	    </para>
          </listitem>
          <listitem>
            <para>
	      COMPILE_IMS, compile le module IMS si le flag est activé (OFF par défaut). Si ON, COMPILE_UMS, COMPILE_TMS et
	      COMPILE_FMS doivent aussi être à ON.
	    </para>
          </listitem>
          <listitem>
            <para>
	      COMPILE_FMS, compile le module FMS si le flag est activé (OFF par défaut). Si ON, COMPILE_UMS doit aussi être à ON.
	    </para>
          </listitem>
          <listitem>
            <para>
	      COMPILE_UMS, compile le module UMS si le flag est activé (ON par défaut).
	    </para>
          </listitem>
          <listitem>
            <para>
	      ENABLE_PYTHON, qui permet d'activer la compilation du code PYTHON (OFF par défaut).
	    </para>
          </listitem>
          <listitem>
            <para>
	      ENABLE_JAVA, qui permet d'activer la compilation des sources JAVA pour les web services (OFF par défaut).
	    </para>
          </listitem>
          <listitem>
            <para>
	      VISHNU_USE_LDAP, qui permet d'activer le support LDAP pour l'authentification (OFF par défaut).
	    </para>
          </listitem>
          <listitem>
            <para>
        ENABLE_SWIG, qui permet d'activer la generation du code des adapteurs Python et Java (OFF par défaut). Cette option doit obligatoirement être activée si on choisit de ne pas compiler tous les modules VISHNU c'est-à-dire si au moins l'une des options COMPILE_UMS, COMPILE_TMS, COMPILE_FMS ou COMPILE_IMS est à OFF. Si l'option ENABLE_SWIG est activée, le package SWIG (voir paragraphe 'Prérequis') est nécessaire pour compiler.
      </para>
          </listitem>
          <listitem>
            <para>
	VISHNU_BATCH, compile le SeD TMS avec le batch correspondant (TORQUE par défaut). Les variables (BATCHNAME)_INCLUDE_DIR et (BATCHNAME)_LIB doivent être renseignées.</para>
            <itemizedlist>
              <listitem>
                <para>
            LOADLEVELER_INCLUDE_DIR indique le chemin absolu vers le fichier llapi.h
          </para>
              </listitem>
              <listitem>
                <para>
            LOADLEVELER_LIB indique le chemin absolu jusqu'à la librairie llapi.so
          </para>
              </listitem>
              <listitem>
                <para>
            TORQUE_INCLUDE_DIR indique le chemin absolu vers le fichier pbs_ifl.h
          </para>
              </listitem>
              <listitem>
                <para>
            TORQUE_LIB indique le chemin absolu jusqu'à la librairie libtorque.so
          </para>
              </listitem>
              <listitem>
                <para>
            SLURM_INCLUDE_DIR indique le chemin absolu vers le fichier slurm/slurm.h
          </para>
              </listitem>
              <listitem>
                <para>
            SLURM_LIB indique le chemin absolu jusqu'à la librairie libslurm.so
          </para>
              </listitem>
              <listitem>
                <para>
            LSF_INCLUDE_DIR indique le chemin absolu vers le fichier lsf/lsbatch.h
          </para>
              </listitem>
              <listitem>
                <para>
            LSBATCH_LIB indique le chemin absolu jusqu'à la librairie libbat.so
          </para>
              </listitem>
              <listitem>
                <para>
            LSF_LIB indique le chemin absolu jusqu'à la librairie liblsf.so
          </para>
              </listitem>
              <listitem>
                <para>
            SGE_ROOT indique le chemin absolu jusqu'au répertoire d'installation de Grid Engine
          </para>
              </listitem>
              <listitem>
                <para>
            SGE_INCLUDE_DIR indique le chemin absolu vers le fichier drmaa.h
          </para>
              </listitem>
              <listitem>
                <para>
            SGE_BIN_DIR indique le chemin absolu jusqu'aux binaires de Grid Engine
          </para>
              </listitem>
              <listitem>
                <para>
            SGE_LIB indique le chemin absolu jusqu'à la librairie libdrmaa.so
          </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para>
        VISHNU_BATCH_VERSION indique la version du batch scheduler utilisée
      </para>
          </listitem>
        </itemizedlist>
</para>
      <para>
  Par exemple, pour compiler VISHNU (clients et serveurs) avec UMS et TMS (torque) avec l'API
  Python puis l'installer dans le répertoire /opt/vishnu sous *nix:
</para>
      <itemizedlist>
        <listitem>
          <para>1. créer un répertoire build à la racine du projet et se placer dedans</para>
          <itemizedlist>
            <listitem>
              <para>$ <emphasis role="bold">mkdir build</emphasis></para>
            </listitem>
            <listitem>
              <para>$ <emphasis role="bold">cd build</emphasis></para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>2. générer le Makefile</para>
          <itemizedlist>
            <listitem>
              <para>$ <emphasis role="bold">cmake -DENABLE_PYTHON=ON -DENABLE_SWIG=ON -DCMAKE_INSTALL_PREFIX=/opt/vishnu/ </emphasis></para>
              <para> <emphasis role="bold">-DCOMPILE_UMS=ON -DCOMPILE_TMS=ON -DVISHNU_BATCH=TORQUE -DVISHNU_BATCH_VERSION=2.3 -DTORQUE_DIR=/opt/torque ..</emphasis></para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>3. lancer la compilation avec 2 jobs</para>
          <itemizedlist>
            <listitem>
              <para>$ <emphasis role="bold">make -j 2</emphasis></para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>4. installation (en mode super-utilisateur)</para>
          <itemizedlist>
            <listitem>
              <para># <emphasis role="bold">make install</emphasis></para>
            </listitem>
          </itemizedlist>
        </listitem>
      </itemizedlist>
      <para><emphasis role="bold">Note</emphasis>: pensez à ajouter le répertoire d'installation dans le $PATH
  utilisateur pour avoir accès à la commande.</para>
    </section>
  </chapter>
  <chapter>
    <title>Configuration de la base de données</title>
    <para>Les fichiers de configuration de la DB sont disponibles dans le répertoire core/database du package d'installation VISHNU. Les seules bases de données actuellement supportées sont PostgreSQL et MySQL. Les bases de type Oracle ne sont pas supportées. Lors de l'installation toutes les machines doivent avoir soit PostgreSQL, soit MySQL, mais pas certaines machines une base et d'autres une autre, cela ne fonctionnerait pas.</para>
    <section>
      <title>Utilisation d'une base de données PostGreSQL</title>
      <para>Un guide pour installer une base PostGreSLQ peut être trouvé à cette addresse : <emphasis
            role="bold">http://beuss.developpez.com/tutoriels/postgres/install/</emphasis></para>
      <para>Pour une installation d'une nouvelle base de données, les scripts 'postgre_create.sql' et 'database_init.sql' doivent être utilisés par l'administrateur de la DB.</para>
      <para>Pour la mise à jour de la base de données lors d'un passage de la release VISHNU précédente à la nouvelle release VISHNU, les scripts 'postgre_update.sql' et 'database_update.sql' doivent être utilisés par l'administrateur de la DB. Le détail des numéros de release est indiqué dans les commentaires au début du script.</para>
    </section>
    <section>
      <title>Utilisation d'une base de données MySQL</title>
      <para>Un guide pour installer une base MySQL peut être trouvé à cette adresse : <emphasis
            role="bold"> http://dev.mysql.com/doc/refman/5.0/fr/unix-post-installation.html</emphasis></para>
      <para>Pour une installation d'une nouvelle base de données, les scripts 'mysql_create.sql' et 'database_init.sql' doivent être utilisés par l'administrateur de la DB.</para>
    </section>
    <section>
      <title>Utilisation de LDAP</title>
      <para>Un guide pour installer un serveur LDAP est disponible à cette adresse : <emphasis
            role="bold"> http://ferry.eof.eu.org/lesjournaux/jar/public_html/x5073.html</emphasis></para>
      <para>Pour pouvoir utiliser l'authentification avec LDAP, le flag de compilation VISHNU_USE_LDAP doit avoir été activé. Sous debian, les paquets suivants sont
nécessaires : slapd libldap-2.4-2 libldap2-dev ldap-utils. Une fois VISHNU compilé, une option de configuration du serveur UMS doit être mise dans le fichier de configuration. Cette option est nommée 'authenticationType' et peut actuellement supporter 4 valeurs : 
        <itemizedlist>
          <listitem>
            <para>
              UMS : Authentifie uniquement en utilisant la base de données
            </para>
          </listitem>
          <listitem>
            <para>
              LDAPUMS : Pour chaque couple (nom d'utilisateur, mot de passe), essaye d'authentifier avec LDAP en premier puis avec UMS
            </para>
          </listitem>
          <listitem>
            <para>
              UMSLDAP : Pour chaque couple (nom d'utilisateur, mot de passe), essaye d'authentifier avec UMS en premier puis avec LDAP
            </para>
          </listitem>
          <listitem>
            <para>
              LDAP : Authentifie uniquement en utilisant LDAP
            </para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>
  <chapter>
    <title>Installation des web services</title>
    <section>
      <title>Pré-requis</title>
      <itemizedlist>
        <listitem>
          <para>Installer <emphasis role="bold">Java 1.6</emphasis> (commande 'sudo apt-get install openjdk-6-jdk' ou bien 'sudo apt-get install sun-java6-jdk' sur Linux Debian)
            et vérifier que la variable JAVA_HOME est bien définie et contient le répertoire racine de l'installation de java.</para>
        </listitem>
        <listitem>
          <para>Installer les modules désirés avec les options -DENABLE_JAVA=ON et -DENABLE_SWIG (<emphasis
                role="bold">Note</emphasis> :
            Ce pré-requis est optionnel car les jars sont déjà fournis dans la distribution des web services).</para>
        </listitem>
        <listitem>
          <para>Installer <emphasis role="bold">Maven 2</emphasis> pour compiler les jars (<emphasis
                role="bold">Note</emphasis> :
            Ce pré-requis est optionnel car les jars sont déjà fournis dans la distribution des web services.
            Par ailleurs la compilation avec maven nécessite une connexion internet).</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Installation de JBoss</title>
      <itemizedlist>
        <listitem>
          <para>Télécharger le package JBOSSAS : (la version binaire est disponible) sur http://www.jboss.org/jbossas/downloads => version 5.1.0.GA</para>
        </listitem>
        <listitem>
          <para>Télécharger le package JBOSSWS : (la version binaire est disponible) sur http://www.jboss.org/jbossws/downloads/ => version 3.3.1.GA</para>
        </listitem>
        <listitem>
          <para>Décompresser l'archive du package JBOSSAS 5.1.0</para>
        </listitem>
        <listitem>
          <para> Définir la variable d'environement JBOSS_HOME sur le répertoire décompressé. Par exemple dans le .bashrc :
	    'export JBOSS_HOME=/home/toto/jboss-5.1.0.GA'</para>
        </listitem>
        <listitem>
          <para>Décompresser l'archive du package JBOSSWS 3.3.1 et aller dans le répertoire créé</para>
        </listitem>
        <listitem>
          <para> Copier le fichier 'ant.properties.example' en 'ant.properties'</para>
        </listitem>
        <listitem>
          <para> Editer le fichier nouvellement créé 'ant.properties'. Mettre la valeur de la variable jboss510.home à la valeur du répertoire de JBOSSAS (même valeur que dans la variable JBOSS_HOME). Il faut noter que si une autre version que la 5.1.0 de jboss a été prise, il faut modifier la variable correspondant à cette version</para>
        </listitem>
        <listitem>
          <para> Lancer la commande 'ant deploy-jboss510'. Si une autre version de jboss a été prise, il faut faire la commande de la version correspondante</para>
        </listitem>
        <listitem>
          <para>Le lancement du serveur se fait en lançant le script JBOSS_HOME/bin/run.sh. Pour que le serveur jboss soit accessible depuis une autre machine, utiliser l'option '-b adresseIP' où
            adresseIP représente l'adresse IP du serveur, et vérifier que le firewall du serveur autorise l'accès au port 8080.</para>
        </listitem>
        <listitem>
          <para><emphasis role="bold">Vérification de l'installation:</emphasis> Pour vérifier que le serveur JBoss est bien démarré et que le module web services est activé, lancer un navigateur internet sur le serveur et se connecter
            sur l'adresse 'http://localhost:8080/jbossws' (ou 'http://adresseIP:8080/jbossws') et vérifier que la page affiche bien la version
            du module web services (jbossws-cxf-3.3.1.GA).</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Installation des modules WS dans JBoss</title>
      <section>
        <title>Fichiers à installer</title>
        <itemizedlist>
          <listitem>
            <para>VISHNULib-1.0-SNAPSHOT.jar
              <itemizedlist>
                <listitem>
                  <para>Contient les classes internes faisant le lien JAVA(JNI)/C++.</para>
                </listitem>
                <listitem>
                  <para>A copier dans <emphasis role="bold">JBOSS_HOME/server/default/lib</emphasis>.</para>
                </listitem>
                <listitem>
                  <para>Le changer implique un redémarrage du serveur JBOSS.</para>
                </listitem>
                <listitem>
                  <para>Compilation (si nécessaire)
                    <itemizedlist>
                      <listitem>
                        <para>Aller dans le répertoire VISHNULib</para>
                      </listitem>
                      <listitem>
                        <para>Faire 'mvn install' (peut être long la première fois)</para>
                      </listitem>
                      <listitem>
                        <para>Le fichier .jar produit se trouve dans le répertoire target/</para>
                      </listitem>
                    </itemizedlist>
                </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>WSAPI.jar
              <itemizedlist>
                <listitem>
                  <para>Contient les classes issues du WSDL et l'implémentation des WS.</para>
                </listitem>
                <listitem>
                  <para>A mettre dans <emphasis role="bold">JBOSS_HOME/server/default/deploy</emphasis>.</para>
                </listitem>
                <listitem>
                  <para>Peut être mis à jour sans redémarrer le serveur JBOSS.</para>
                </listitem>
                <listitem>
                  <para>Compilation (si nécessaire)
                    <itemizedlist>
                      <listitem>
                        <para>Aller dans le répertoire WSAPI, avoir le jar VISHNULib-1.0-SNAPSHOT.jar de déjà fait</para>
                      </listitem>
                      <listitem>
                        <para>Faire 'mvn install' (peut être long la première fois)</para>
                      </listitem>
                      <listitem>
                        <para>Le fichier .jar produit se trouve dans le répertoire target</para>
                      </listitem>
                      <listitem>
                        <para>Renommer le jar en WSAPI.jar avant de le mettre dans jboss, ceci est nécessaire</para>
                      </listitem>
                    </itemizedlist>
                </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
          <listitem>
            <para>libVISHNU.so
              <itemizedlist>
                <listitem>
                  <para>Nécessaire pour le fonctionnement des WS, cette librairie dynamique est obtenue en compilant les modules VISHNU désirés avec l'option ENABLE_JAVA.</para>
                </listitem>
                <listitem>
                  <para>Le fichier est installé par défaut par le package VISHNU UMS dans '/usr/local/lib' et il n'est pas nécessaire de le copier.</para>
                </listitem>
                <listitem>
                  <para>S'il y a un problème de déploiement dans le serveur jboss, vérifier qu'elle est bien accessible et dans le LD_LIBRARY_PATH.</para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>Variables d'environnement à définir</title>
        <itemizedlist>
          <listitem>
            <para>VISHNU_CONFIG_FILE : contient le chemin complet du fichier de configuration client de VISHNU. Se référer
              au guide d'installation du client [VISHNU_USER_GUIDE] pour connaître le contenu de ce fichier.
              Si l'exécution échoue avec un message d'erreur lié à initialisation de la librairie lors du connect, vérifier le contenu de cette variable.
            </para>
          </listitem>
          <listitem>
            <para>LD_LIBRARY_PATH : contient les chemins des répertoires contenant les librairies VISHNU, notamment libVISHNU.so.</para>
          </listitem>
        </itemizedlist>
      </section>
      <section>
        <title>Lancement du serveur JBoss avec le module WS</title>
        <itemizedlist>
          <listitem>
            <para>Après installation des fichiers définis au paragraphe précédent, le serveur JBoss doit être redémarré en lançant le script JBOSS_HOME/bin/run.sh
              (avec les options indiquées au paragraphe sur le serveur JBoss).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Vérification de l'installation:</emphasis> Pour vérifier que le serveur JBoss est bien démarré et que le module UMS WS est activé, lancer un navigateur internet sur le serveur et se connecter
              sur l'adresse 'http://localhost:8080/jbossws/services' (ou 'http://adresseIP:8080/jbossws/services') et vérifier que le
              &quot;service endPoint&quot; : <emphasis role="bold">VISHNUUMSPortImpl</emphasis> est actif.</para>
          </listitem>
        </itemizedlist>
      </section>
    </section>
  </chapter>
  <chapter>
    <title>Déploiement de VISHNU </title>
    <section>
      <title>Lancement sur un même réseau</title>
      <para>Les modules peuvent être lancés manuellement. Le déploiement se fera en suivant la configuration montrée sur la figure 4.1 du document [ARCH]. Pour simplier les choses, on supposera que les divers éléments dans le carré &quot;dedicated to VISHNU&quot; vont être déployés sur la même machine que l'on va nommer <emphasis
            role="bold">préfrontale</emphasis>.</para>
      <para><emphasis role="bold">NOTE: Il est préférable d'éviter de lancer le même SeD sur la même machine.</emphasis></para>
      <para><emphasis role="bold">NOTE: Il existe un bug connu sur debian (entre autre) avec boost file system, utilisé par VISHNU. Le rapport de bug est ici et le bug est actuellement ouvert: https://svn.boost.org/trac/boost/ticket/4688. Si lors du lancement d'un SeD, le message d'erreur suivant apparait : std::runtime_error: locale::facet::_S_create_c_locale name not valid, faire un &quot;export LANG=C&quot; et cela devrait régler le problème.</emphasis></para>
      <para><emphasis role="bold">NOTE: L'utilisateur VISHNU 'root' doit avoir un compte local sur chaque machine ou il y a un serveur IMS. Le compte UNIX correspondant sera utilisé pour le redémarrage automatique des SeD.</emphasis></para>
      <para>Pour mieux comprendre l'architecture de déploiement, se référer au document [ARCH], le chapitre 4, 'Technical Architecture'.</para>
      <orderedlist>
        <listitem>
          <para> Avoir une base de données PostGreSQL accessible et initialisée (tables créées et premières données créées). Des scripts SQL sont fournis pour cela. Avoir la base PostGreSQL configurée pour qu'elle soit accessible par VISHNU (voir le fichier de configuration pg_hba.conf qui se situe dans un répertoire de la forme '/etc/postgresql/8.3/main' pour configurer la base).</para>
        </listitem>
        <listitem>
          <para> Lancer le service de nommage CORBA sur la machine préfrontale. La commande est <emphasis
                role="bold">omniNames -start</emphasis> pour la première fois, sinon <emphasis
                role="bold">omniNames</emphasis> suffit. Attention, dans la configuration de l'omninames, bien utiliser l'adresse de l'hôte et non pas 'localhost' ou '127.0.0.1'. </para>
        </listitem>
        <listitem>
          <para> Lancer le log service de DIET sur la machine préfrontale. La commande est <emphasis
                role="bold">LogCentral --config config.cfg</emphasis> avec config.cfg un fichier de configuration pour le log central. </para>
        </listitem>
        <listitem>
          <para> Lancer le MA avec son fichier de configuration sur la machine préfrontale : <emphasis
                role="bold">dietAgent config.cfg</emphasis>. Voir le paragraphe 6.3 pour avoir un exemple de configuration. Ce fichier de configuration peut contenir les 3 lignes suivantes :
            <itemizedlist>
              <listitem>
                <para> 'traceLevel = 0' : Le niveau de verbosité du master agent, cette valeur peut être entre 0 et 10 compris. </para>
              </listitem>
              <listitem>
                <para> 'agentType = DIET_MASTER_AGENT' : Le type de l'agent, l'autre type disponible est DIET_LOCAL_AGENT mais dans notre cas il faut DIET_MASTER_AGENT.</para>
              </listitem>
              <listitem>
                <para> 'name = MA0' : Le nom que l'on veut donner à l'agent, par exemple on le nomme MA0 ici.</para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>Lancer le SeD UMS sur la préfrontale avec la commande <emphasis role="bold">umssed ~/ums_sed.cfg</emphasis>. Le paramètre est un fichier de configuration VISHNU. Voir le paragraphe 6.6 pour un exemple de fichier de configuration. Les paramètres à fournir correspondent à :
            <itemizedlist>
              <listitem>
                <para>
                  'dietConfigFile=/usr/local/etc/SeD.cfg' : le chemin jusqu'au fichier de configuration DIET du SeD. Voir le paragraphe 6.4 pour un exemple de configuration. Ce fichier peut par exemple contenir les 2 lignes suivantes :
                  <itemizedlist>
                    <listitem>
                      <para>'traceLevel = 0' : Le niveau de verbosité du SeD UMS, ce niveau peut être entre 0 (minimum) et 10 compris.</para>
                    </listitem>
                    <listitem>
                      <para> 'parentName = MA0' : Le nom du MA auquel le SeD UMS doit se lier. Ce doit être exactement le même nom que celui donné au même dans le champs 'name' du MA en question, sur cet exemple c'est MA0.</para>
                    </listitem>
                    <listitem>
                      <para> 'useLogService = 1' : Pour utiliser le service de log dans DIET (sinon les SeD n'émettent aucun message).</para>
                    </listitem>
                  </itemizedlist>
		</para>
              </listitem>
              <listitem>
                <para> 'vishnuId=1' : L'id de VISHNU à utiliser dans la DB (valeur '1' par défaut) .</para>
              </listitem>
              <listitem>
                <para> 'databaseType=postgresql' : Pour utiliser une base postgreSQL. Pour utiliser une base MySQL, il faut mettre 'mysql' comme type.</para>
              </listitem>
              <listitem>
                <para>
                  'databaseHost=localhost' : Le nom DNS du serveur de bases de données, ou 'localhost' si la base est locale.
		</para>
              </listitem>
              <listitem>
                <para>'databaseName=vishnu' : Le nom de la base de données</para>
              </listitem>
              <listitem>
                <para> 'databaseUserName=vishnu_user' : Le nom d'utilisateur pour se connecter à la DB.</para>
              </listitem>
              <listitem>
                <para> 'databaseUserPassword=vishnu_user' : Le mot de passe pour se connecter à la DB.</para>
              </listitem>
              <listitem>
                <para> 'databaseConnectionsNb=5' : Le nombre de connexions ouvertes sur la base de données par le SeD afin de traiter des requêtes en parallèle.
                  (le nombre par défaut est 10). Si le nombre d'utilisateurs simultané du SeD est grand, cette valeur doit être augmentée dans
                  la limite du nombre de connections simultanées autorisées par le serveur de base de données.</para>
              </listitem>
              <listitem>
                <para> 'sendmailScriptPath=/usr/local/vishnu/sbin/sendmail.py' : Le script à utiliser pour envoyer les mails. Il est installé avec le module UMS
                  dans le sous-répertoire sbin/ du répertoire d'installation.</para>
              </listitem>
              <listitem>
                <para>'authenticationType=LDAP' : Utilise uniquement LDAP pour authentifier un utilisateur.</para>
              </listitem>
              <listitem>
                <para>'vishnuMachineId=machine_1' : Optionnel, ce paramètre indique l'identifiant de la machine associée au SeD.</para>
                <para><emphasis role="bold">IMPORTANT : </emphasis>Lors de la première initialialisation, c'est-à-dire lorsqu'il n'y a pas 
                encore de machine créée dans le système, vous devez laisser ce paramètre vide. 
                En effet, lorsque définie, sa valeur doit correspondre à une machine VISHNU, sinon le démarrage du SeD échoue.</para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
        <listitem>
          <para>
	    Sur la machine hôte de Torque, lancer le serveur (pbs_serv), le scheduler (pbs_sched) et l'ordonnanceur (pbs_mom) de Torque.
	  </para>
        </listitem>
        <listitem>
          <para>Lancer le SeD TMS sur la machine hôte de Torque. La commande de lancement est : <emphasis
                role="bold">tmssed ~/tms_sed.cfg</emphasis>. Le paramètre est un fichier de configuration VISHNU. Voir le paragraphe 6.6 pour un exemple de fichier de configuration. Les paramètres à fournir correspondent à ceux de UMS avec de plus :
	    <itemizedlist>
              <listitem>
                <para>'intervalMonitor = 1' : La fréquence (en secondes) de mise à jour des données dans la base concernant les états des jobs.</para>
              </listitem>
              <listitem>
                <para>'batchSchedulerType=TORQUE' : Le type du batch scheduler utilisé.</para>
              </listitem>
              <listitem>
                <para>'vishnuMachineId=machine_1' : L'identifiant VISHNU de la machine ou le SeD TMS est lancé (obtenu en utilisant la commande vishnu_list_machines).</para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para>
      Sur la machine hôte de SLURM, lancer les serveurs <emphasis>slurmd, slurmctld</emphasis> et <emphasis>slurmdbd</emphasis>.
    </para>
        </listitem>
        <listitem>
          <para>Lancer le SeD TMS sur la machine hôte de SLURM. La commande de lancement est : <emphasis
                role="bold">tmssed ~/tms_sed.cfg</emphasis>. Le paramètre est un fichier de configuration VISHNU. Voir le paragraphe 6.6 pour un exemple de fichier de configuration. Les paramètres à fournir correspondent à ceux de UMS avec de plus :
      <itemizedlist>
              <listitem>
                <para>'intervalMonitor = 1' : La fréquence (en secondes) de mise à jour des données dans la base concernant les états des jobs.</para>
              </listitem>
              <listitem>
                <para>'batchSchedulerType=SLURM' : Le type du batch scheduler utilisé.</para>
              </listitem>
              <listitem>
                <para>'vishnuMachineId=machine_2' : L'identifiant VISHNU de la machine ou le SeD TMS est lancé (obtenu en utilisant la commande vishnu_list_machines).</para>
              </listitem>
            </itemizedlist>
    </para>
        </listitem>
        <listitem>
          <para>
      Sur la machine hôte de LSF, lancer les exécutables <emphasis/>hostsetup <emphasis>lsfstartup</emphasis>.
    </para>
        </listitem>
        <listitem>
          <para>Lancer le SeD TMS sur la machine hôte de LSF. La commande de lancement est : <emphasis
                role="bold">tmssed ~/tms_sed.cfg</emphasis>. Le paramètre est un fichier de configuration VISHNU. Voir le paragraphe 6.6 pour un exemple de fichier de configuration. Les paramètres à fournir correspondent à ceux de UMS avec de plus :
      <itemizedlist>
              <listitem>
                <para>'intervalMonitor = 1' : La fréquence (en secondes) de mise à jour des données dans la base concernant les états des jobs.</para>
              </listitem>
              <listitem>
                <para>'batchSchedulerType=LSF' : Le type du batch scheduler utilisé.</para>
              </listitem>
              <listitem>
                <para>'vishnuMachineId=machine_2' : L'identifiant VISHNU de la machine ou le SeD TMS est lancé (obtenu en utilisant la commande vishnu_list_machines).</para>
              </listitem>
            </itemizedlist>
    </para>
        </listitem>
        <listitem>
          <para>
      Sur la machine hôte de Grid Engine, lancer les exécutables <emphasis> sge_qmaster </emphasis> et <emphasis>sge_execd</emphasis>.
    </para>
        </listitem>
        <listitem>
          <para>Lancer le SeD TMS sur la machine hôte de Grid Engine. La commande de lancement est : <emphasis
                role="bold">tmssed ~/tms_sed.cfg</emphasis>. Le paramètre est un fichier de configuration VISHNU. Voir le paragraphe 6.6 pour un exemple de fichier de configuration. Les paramètres à fournir correspondent à ceux de UMS avec de plus :
      <itemizedlist>
              <listitem>
                <para>'intervalMonitor = 1' : La fréquence (en secondes) de mise à jour des données dans la base concernant les états des jobs.</para>
              </listitem>
              <listitem>
                <para>'batchSchedulerType=SGE' : Le type du batch scheduler utilisé.</para>
              </listitem>
              <listitem>
                <para>'vishnuMachineId=machine_2' : L'identifiant VISHNU de la machine ou le SeD TMS est lancé (obtenu en utilisant la commande vishnu_list_machines).</para>
              </listitem>
            </itemizedlist>
    </para>
        </listitem>
        <listitem>
          <para>Lancer le SeD IMS sur toutes la machine préfrontale. La commande de lancement est : <emphasis
                role="bold">imssed ~/ims_sed.cfg</emphasis>. Le paramètre est un fichier de configuration VISHNU. Voir le paragraphe 6.5 pour un exemple de fichier de configuration. Les paramètres à fournir correspondent à ceux de UMS. Il faut noter que IMS doit être lancé sur toutes les machines à monitorer.
    </para>
        </listitem>
        <listitem>
          <para>Lancer le SeD FMS sur une machine (sur la figure exemple 4.1 elle est différente de la préfrontale et de la machine avec le batch, mais cela peut être n'importe laquelle). La commande de lancement est : <emphasis
                role="bold">fmssed ~/fms_sed.cfg</emphasis>. Le paramètre est un fichier de configuration VISHNU. Voir le paragraphe 6.7 pour un exemple de fichier de configuration. Les paramètres à fournir correspondent à ceux de UMS avec de plus :
	    <itemizedlist>
              <listitem>
                <para>'intervalMonitor = 1' : La fréquence (en secondes) de mise à jour des données dans la base concernant les états des transferts de fichiers.</para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para>
	    Les modules de VISHNU sont prêts à être utilisés. Pour ce faire, un client doit se connecter et soumettre des requêtes à VISHNU au moyen des commandes UMS, TMS, FMS et IMS (voir le manuel de l'utilisateur VISHNU pour plus d'informations sur les commandes utilisateurs disponibles).
	  </para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Lancement sur plusieurs réseaux <emphasis role="bold">avec une version de DIET supérieure ou égale à 2.8</emphasis></title>
      <para>Un module VISHNU peut être lancé manuellement.
	Pour le déploiement on se base sur le modèle de la figure 4.2 du document [ARCH] en supposant pour simplifier que sur un réseau tout est lancé sur la même machine et que les réseaux &quot;Network C&quot; et &quot;Network D&quot; sont confondus (pas de forwarder à mettre entre eux).</para>
      <orderedlist>
        <listitem>
          <para> Avoir une base de données PostgreSQL accessible et initialisée (tables créées et premières données créées). Des scripts SQL sont fournis pour cela. Avoir la base PostGreSQL configurée pour qu'elle soit accessible par VISHNU (voir le fichier de configuration pg_hba.conf qui se situe dans un répertoire de la forme '/etc/postgresql/8.3/main' pour configurer la base).</para>
        </listitem>
        <listitem>
          <para> Lancer le service de nommage CORBA sur les différents réseaux. La commande est <emphasis
                role="bold">omniNames -start</emphasis> pour la première fois, sinon <emphasis
                role="bold">omniNames</emphasis> suffit. Attention, dans la configuration de l'omninames, bien utiliser l'adresse de l'hôte et non pas 'localhost' ou '127.0.0.1'. </para>
        </listitem>
        <listitem>
          <para> Lancer un démon forwarder sur le reseau 2 (Network B) :  </para>
          <para><emphasis role="bold">dietForwarder --name forwarder2</emphasis>
	    <itemizedlist>
              <listitem>
                <para>
		  forwarder2 : nom qui identifie le démon forwarder sur ce réseau
	      </para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para> Lancer un démon forwarder sur le reseau 1 (network C) : </para>
          <para><emphasis role="bold">dietForwarder --peer-name forwarder2 --ssh-host nom_DNS_machine_distante --remote-port 50005 --name forwarder
	    --remote-host localhost
	    --ssh-login login</emphasis>
	  </para>
          <para>
	    <itemizedlist>
              <listitem>
                <para>
		  --peer-name : le nom donné au forwarder de l'autre coté, ici forwarder2.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --ssh-host : la nom DNS de la machine distante pour connecter le tunnel SSH.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --remote-port : le port à utiliser pour le tunnel ssh, ici 50005.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --name : le nom identifiant ce démon forwarder, c'est-à-dire 'forwarder1'.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --remote-host : le nom de l'adresse loopback, c'est-à-dire 'localhost'.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --ssh-login : le login de connection sur la machine distante.
	      </para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para>Si la clé ssh est accessible (le chemin par défaut est le répertoire $HOME/.ssh/) et que la clé est protégée par une passphrase,
	    la passphrase est demandée et la connexion ssh s'établit.</para>
        </listitem>
        <listitem>
          <para> Lancer un démon forwarder pour le log service sur le reseau 2 (network B) :  </para>
          <para><emphasis role="bold">logForwarder --name logforwarder2</emphasis>
	    <itemizedlist>
              <listitem>
                <para>
		  logforwarder2 : nom qui identifie le démon forwarder sur ce réseau
	      </para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para> Lancer un démon log forwarder sur le reseau 1 (network C) : </para>
          <para><emphasis role="bold">logForwarder --peer-name logforwarder2 --ssh-host nom_DNS_machine_distante --remote-port 50005 --name logforwarder
	    --remote-host localhost
	    --ssh-login login</emphasis>
	  </para>
          <para>
	    <itemizedlist>
              <listitem>
                <para>
		  --peer-name : le nom donné au forwarder de l'autre coté, ici forwarder2.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --ssh-host : la nom DNS de la machine distante pour connecter le tunnel SSH.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --remote-port : le port à utiliser pour le tunnel ssh, ici 50005.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --name : le nom identifiant ce démon forwarder, c'est-à-dire 'forwarder1'.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --remote-host : le nom de l'adresse loopback, c'est-à-dire 'localhost'.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --ssh-login : le login de connection sur la machine distante.
	      </para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para>Si la clé ssh est accessible (le chemin par défaut est le répertoire $HOME/.ssh/) et que la clé est protégée par une passphrase,
	    la passphrase est demandée et la connexion ssh s'établit.</para>
        </listitem>
        <listitem>
          <para> Lancer le log service de DIET sur la machine du network B. La commande est <emphasis
                role="bold">LogCentral --config config.cfg</emphasis> avec config.cfg un fichier de configuration pour le log central. </para>
        </listitem>
        <listitem>
          <para> Lancer le MA avec son fichier de configuration sur le réseau network B : <emphasis
                role="bold">dietAgent config.cf</emphasis>. Voir le paragraphe 6.3 pour un exemple de configuration. Ce fichier de configuration peut contenir les 3 lignes suivantes :
	    <itemizedlist>
              <listitem>
                <para> 'traceLevel = 0' : Le niveau de verbosité du master agent, cette valeur peut être entre 0 et 10 compris. </para>
              </listitem>
              <listitem>
                <para> 'agentType = DIET_MASTER_AGENT' : Le type de l'agent, l'autre type disponible est DIET_LOCAL_AGENT mais dans notre cas il faut DIET_MASTER_AGENT.</para>
              </listitem>
              <listitem>
                <para> 'name = MA0' : Le nom que l'on veut donner à l'agent, dans notre exemple on va l'appeller MA0.</para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para>Lancer le SeD, par exemple un UMS sur le réseau network C. Un exemple de commande de lancement est : <emphasis
                role="bold">umssed ~/ums_sed.cfg</emphasis>. Se référer au chapitre de déploiement pour le contenu du fichier, c'est le même à utiliser que dans un déploiement sur un seul réseau.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Le module, ici UMS, de VISHNU est prêt à être utilisé. Pour ce faire, un client doit se connecter et soumettre des requêtes à VISHNU au moyen de clients UMS. Si le client est encore sur un autre réseau il faudra mettre la paire de dietForwarder entre le réseau client et l'un des réseaux connecté à la hierarchie déployée.
	  </para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Lancement sur plusieurs réseaux <emphasis role="bold">avec une version de DIET inférieure à 2.8</emphasis></title>
      <para>Un module VISHNU peut être lancé manuellement.
	Pour le déploiement on se base sur le modèle de la figure 4.2 du document [ARCH] en supposant pour simplifier que sur un réseau tout est lancé sur la même machine et que les réseaux &quot;Network C&quot; et &quot;Network D&quot; sont confondus (pas de forwarder à mettre entre eux).</para>
      <orderedlist>
        <listitem>
          <para> Avoir une base de données PostgreSQL accessible et initialisée (tables créées et premières données créées). Des scripts SQL sont fournis pour cela. Avoir la base PostGreSQL configurée pour qu'elle soit accessible par VISHNU (voir le fichier de configuration pg_hba.conf qui se situe dans un répertoire de la forme '/etc/postgresql/8.3/main' pour configurer la base).</para>
        </listitem>
        <listitem>
          <para> Lancer le service de nommage CORBA sur les différents réseaux. La commande est <emphasis
                role="bold">omniNames -start</emphasis> pour la première fois, sinon <emphasis
                role="bold">omniNames</emphasis> suffit. Attention, dans la configuration de l'omninames, bien utiliser l'adresse de l'hôte et non pas 'localhost' ou '127.0.0.1'. </para>
        </listitem>
        <listitem>
          <para> Lancer un démon forwarder sur le reseau 2 (Network B) :  </para>
          <para><emphasis role="bold">dietForwarder --name forwarder2 --net-config forwarder2.cfg</emphasis>
	    <itemizedlist>
              <listitem>
                <para>
		  forwarder2 : nom qui identifie le démon forwarder sur ce réseau
	      </para>
              </listitem>
              <listitem>
                <para>
                  forwarder2.cfg : fichier de configuration (voir le paragraphe 6.8 pour un exemple de configuration) contenant des règles appliquées aux
                  connections entre agents de l'intergiciel. Les règles sont de deux sortes : 'accept:' ou 'reject:'. Dans l'exemple de le paragraphe 6.8, les
                  règles utilisées sont :
                  <itemizedlist>
                    <listitem>
                      <para> une règle 'accept' correspondant au filtre sur la source des connections acceptées. '.*' signifie les connections provenant
                        de n'importe quelle adresse IP.</para>
                    </listitem>
                    <listitem>
                      <para> deux règles 'reject' contenant les adresses destination à rejeter. Il est nécessaire que l'adresse IP du serveur sur lequel
                        tourne le démon forwarder soit indiquée dans une règle de ce type. Dans l'exemple le serveur ayant deux adresses IP on a
                        indiqué une règle pour chaque adresse.</para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para> Lancer un démon forwarder sur le reseau 1 (network C) : </para>
          <para><emphasis role="bold">dietForwarder -C --peer-name forwarder2 --ssh-host nom_DNS_machine_distante --remote-port 50005 --name forwarder
	    --remote-host localhost --net-config forwarder1.cfg
	    --ssh-login login</emphasis>
	  </para>
          <para>
	    <itemizedlist>
              <listitem>
                <para>
                  -C : indique que c'est ce démon forwarder qui crée le tunnel SSH.
              </para>
              </listitem>
              <listitem>
                <para>
	          --net-config : le fichier de configuration, ici forwarder1.cfg. Ce fichier doit contenir des règles 'reject' et 'accept' également,
                  sur le même modèle que forwarder2.cfg.
              </para>
              </listitem>
              <listitem>
                <para>
	          --peer-name : le nom donné au forwarder de l'autre coté, ici forwarder2.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --ssh-host : la nom DNS de la machine distante pour connecter le tunnel SSH.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --remote-port : le port à utiliser pour le tunnel ssh, ici 50005.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --name : le nom identifiant ce démon forwarder, c'est-à-dire 'forwarder1'.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --remote-host : le nom de l'adresse loopback, c'est-à-dire 'localhost'.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --ssh-login : le login de connection sur la machine distante.
	      </para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para>Si la clé ssh est accessible (le chemin par défaut est le répertoire $HOME/.ssh/) et que la clé est protégée par une passphrase,
	    la passphrase est demandée et la connexion ssh s'établit.</para>
        </listitem>
        <listitem>
          <para> Lancer un démon forwarder pour le log service sur le reseau 2 (network B) :  </para>
          <para><emphasis role="bold">logForwarder --name logforwarder2 --net-config logforwarder2</emphasis>
	    <itemizedlist>
              <listitem>
                <para>
		  logforwarder2 : nom qui identifie le démon forwarder sur ce réseau
	      </para>
              </listitem>
              <listitem>
                <para>
                  logforwarder2.cfg : fichier de configuration (voir le paragraphe 6.8 pour un exemple de fichier de configuration) contenant des règles appliquées aux
                  connections entre agents de l'intergiciel. Les règles sont de deux sortes : 'accept:' ou 'reject:'. Dans l'exemple de le paragraphe 6.8, les
                  règles utilisées sont :
                  <itemizedlist>
                    <listitem>
                      <para> une règle 'accept' correspondant au filtre sur la source des connections acceptées. '.*' signifie les connections provenant
                        de n'importe quelle adresse IP.</para>
                    </listitem>
                    <listitem>
                      <para> deux règles 'reject' contenant les adresses destination à rejeter. Il est nécessaire que l'adresse IP du serveur sur lequel
                        tourne le démon forwarder soit indiquée dans une règle de ce type. Dans l'exemple le serveur ayant deux adresses IP on a
                        indiqué une règle pour chaque adresse.</para>
                    </listitem>
                  </itemizedlist>
                </para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para> Lancer un démon log forwarder sur le reseau 1 (network C) : </para>
          <para><emphasis role="bold">logForwarder -C --peer-name logforwarder2 --ssh-host nom_DNS_machine_distante --remote-port 50005 --name logforwarder
	    --remote-host localhost --net-config logforwarder1.cfg
	    --ssh-login login</emphasis>
	  </para>
          <para>
	    <itemizedlist>
              <listitem>
                <para>
                  -C : indique que c'est ce démon forwarder qui crée le tunnel SSH.
              </para>
              </listitem>
              <listitem>
                <para>
		  --peer-name : le nom donné au forwarder de l'autre coté, ici forwarder2.
	      </para>
              </listitem>
              <listitem>
                <para>
                  --net-config : le fichier de configuration, ici forwarder1.cfg. Ce fichier doit contenir des règles 'reject' et 'accept' également,
                  sur le même modèle que forwarder2.cfg.
              </para>
              </listitem>
              <listitem>
                <para>
		  --ssh-host : la nom DNS de la machine distante pour connecter le tunnel SSH.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --remote-port : le port à utiliser pour le tunnel ssh, ici 50005.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --name : le nom identifiant ce démon forwarder, c'est-à-dire 'forwarder1'.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --remote-host : le nom de l'adresse loopback, c'est-à-dire 'localhost'.
	      </para>
              </listitem>
              <listitem>
                <para>
		  --ssh-login : le login de connection sur la machine distante.
	      </para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para>Si la clé ssh est accessible (le chemin par défaut est le répertoire $HOME/.ssh/) et que la clé est protégée par une passphrase,
	    la passphrase est demandée et la connexion ssh s'établit.</para>
        </listitem>
        <listitem>
          <para> Lancer le log service de DIET sur la machine du network B. La commande est <emphasis
                role="bold">LogCentral --config config.cfg</emphasis> avec config.cfg un fichier de configuration pour le log central. </para>
        </listitem>
        <listitem>
          <para> Lancer le MA avec son fichier de configuration sur le réseau network B : <emphasis
                role="bold">dietAgent config.cf</emphasis>. Voir le paragraphe 6.3 pour un exemple de configuration. Ce fichier de configuration peut contenir les 3 lignes suivantes :
	    <itemizedlist>
              <listitem>
                <para> 'traceLevel = 0' : Le niveau de verbosité du master agent, cette valeur peut être entre 0 et 10 compris. </para>
              </listitem>
              <listitem>
                <para> 'agentType = DIET_MASTER_AGENT' : Le type de l'agent, l'autre type disponible est DIET_LOCAL_AGENT mais dans notre cas il faut DIET_MASTER_AGENT.</para>
              </listitem>
              <listitem>
                <para> 'name = MA0' : Le nom que l'on veut donner à l'agent, dans notre exemple on va l'appeller MA0.</para>
              </listitem>
            </itemizedlist>
	  </para>
        </listitem>
        <listitem>
          <para>Lancer le SeD, par exemple un UMS sur le réseau network C. Un exemple de commande de lancement est : <emphasis
                role="bold">umssed ~/ums_sed.cfg</emphasis>. Se référer au chapitre de déploiement pour le contenu du fichier, c'est le même à utiliser que dans un déploiement sur un seul réseau.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Le module, ici UMS, de VISHNU est prêt à être utilisé. Pour ce faire, un client doit se connecter et soumettre des requêtes à VISHNU au moyen de clients UMS. Si le client est encore sur un autre réseau il faudra mettre la paire de dietForwarder entre le réseau client et l'un des réseaux connecté à la hierarchie déployée.
	  </para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Exemple de fichier de configuration d'un MA</title>
      <programlisting>
	traceLevel = 0
	name = MA0
	agentType = DIET_MASTER_AGENT
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier de configuration pour un SeD DIET</title>
      <programlisting>
	traceLevel = 0
	parentName = MA0
	useLogService = 1
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier de configuration d'un SeD UMS</title>
      <programlisting>
	# Configuration of the VISHNU UMS SeD
	dietConfigFile=/usr/local/etc/SeD.cfg
	vishnuId=1
	databaseType=postgresql
	databaseHost=localhost
	databaseName=vishnu
	databaseUserName=vishnu_user
	databaseUserPassword=vishnu_user
	databaseConnectionsNb=5
	sendmailScriptPath=/usr/local/sbin/sendmail.py
	vishnuMachineId=machine_1
        authenticationType=LDAP
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier de configuration d'un SeD TMS </title>
      <programlisting>
	# Configuration of the VISHNU TMS SeD
	dietConfigFile=/usr/local/etc/SeD.cfg
	vishnuId=1
	databaseType=postgresql
	databaseHost=localhost
	databaseName=vishnu
	databaseUserName=vishnu_user
	databaseUserPassword=vishnu_user
	databaseConnectionsNb=5
	sendmailScriptPath=/usr/local/sbin/sendmail.py
	vishnuMachineId=machine_1
	# Configuration propres à TMS
	# batchSchedulerType=SLURM si le batchScheduler est de type SLURM
	# batchSchedulerType=LSF si le batchScheduler est de type LSF
	# batchSchedulerType=SGE si le batchScheduler est de type Grid Engine
	batchSchedulerType=TORQUE
	intervalMonitor = 1
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier de configuration d'un SeD FMS </title>
      <programlisting>
	# Configuration of the VISHNU FMS SeD
	dietConfigFile=/usr/local/etc/SeD.cfg
	vishnuId=1
	databaseType=postgresql
	databaseHost=localhost
	databaseName=vishnu
	databaseUserName=vishnu_user
	databaseUserPassword=vishnu_user
	databaseConnectionsNb=5
	vishnuMachineId=machine_1
	# Configuration propres à FMS
	intervalMonitor = 1
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier d'un forwarder </title>
      <programlisting>
        # accept everything from everyone
        accept:.*
        
        # reject its own ip
        reject:192\.168\.1\.6
      </programlisting>
    </section>
    <section>
      <title>Exemple de fichier du LogCentral </title>
      <programlisting>
	# an empty configuration file for LogService
	[General]
	
	[DynamicTagList]
	[StaticTagList]
	[UniqueTagList]
	[VolatileTagList]
      </programlisting>
    </section>
    <section>
      <title>Configuration de l'envoi des emails par VISHNU</title>
      <para>Le processus UMS SeD utilise le fichier 'sendmail.py' (fourni dans l'installation VISHNU, dans le sous-répertoire sbin/)
	pour envoyer des emails aux utilisateurs lors de certaines opérations. Ce fichier peut être modifié par l'administrateur afin
	de s'adapter à la méthode d'envoi d'email propre au serveur sur lequel est installé le SeD. Par défaut, la configuration
	fournie se connecte sur le serveur SMTP de 'localhost' sur le port 25, sans authentification.</para>
      <para>Les paramètres suivants peuvent être configurés dans le script sendmail.py :</para>
      <informaltable>
        <tgroup cols="2">
          <colspec colwidth="2cm"/>
          <colspec colwidth="15cm"/>
          <thead>
            <row>
              <entry>Option</entry>
              <entry>Ligne du script sendmail.py à modifier</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry><para>login</para></entry>
              <entry><programlisting>parser.add_option(&quot;--login&quot;, dest=&quot;login&quot;, help=&quot;&quot;, default=&quot;[login_utilisateur]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>password</para></entry>
              <entry><programlisting>parser.add_option(&quot;--password&quot;, dest=&quot;password&quot;, help=&quot;smtp password&quot;, default=&quot;[password_utilisateur]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>hostname</para></entry>
              <entry><programlisting>parser.add_option(&quot;--hostname&quot;, dest=&quot;host&quot;, help=&quot;smtp host&quot;, default=&quot;[nom_serveur_SMTP]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>port</para></entry>
              <entry><programlisting>parser.add_option(&quot;--port&quot;, dest=&quot;port&quot;, help=&quot;smtp port [default: 25]&quot;, type=int, default=&quot;[no_port]&quot;)</programlisting></entry>
            </row>
            <row>
              <entry><para>SSL</para></entry>
              <entry><programlisting>parser.add_option(&quot;--ssl&quot;, action=&quot;store_true&quot;, dest=&quot;use_ssl&quot;, help=&quot;enable ssl support [default: %default - default port: 587
		  ]&quot;, default=True)</programlisting></entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
    <section>
      <title>Configuration des clés privées/publiques ssh requises pour FMS</title>
      <para>
        Toutes les commandes éxécutées par le SeD FMS sont lancées via ssh
        sous le nom de l'utilisateur ayant émis la requête. Les services FMS
        sont de deux types : il y a ceux qui n'impliquent qu'une machine
        distante : Exemple getFilesInfo,listDir,etc.. et ceux qui impliquent au
        moins deux machines distantes : machine source et destination pour les transferts de fichiers. 
        <itemizedlist>
          <listitem>
            <para> Dans le premier cas le SeD se connecte sur la machine distante et
              effectue la commande. Par conséquent la clé publique du SeD doit
              être ajoutée au fichier authorized_keys ($HOME/.ssh/authorized_keys) de l'utilisateur de la machine distante 
              concernée.</para>
          </listitem>
          <listitem>
            <para> Dans le second cas, deux connexions ssh sont nécessaires. Le SeD se connecte sur la machine source et
              lance le transfert (seconde connexion) vers la machine destination. Par conséquent:
              <itemizedlist>
                <listitem>
                  <para> la clé publique du SeD doit être ajoutée au fichier authorized_key de la machine source pour
                    permettre la première connexion.
                  </para>
                </listitem>
                <listitem>
                  <para> La machine source doit pouvoir se connecter sur la machine destination par ssh, avec la clé privée enregistrée dans la base de VISHNU lors de l'ajout du compte (local account) liant la machine source à VISHNU. Par ailleurs si le mécanisme d'agent forwarding (de ssh) est activée entre ces différentes machines, il n'est alors plus nécessaire qu'il y ait un autre couple de clés entre la machine source et destination. </para>
                </listitem>
              </itemizedlist>
            </para>
          </listitem>
        </itemizedlist>
        En somme, il est alors obligatoire que la clé publique du SeD soit ajoutée à tous les comptes utilisateurs des machines impliquées
        par les requêtes FMS. Toutes les clés protégées par des passphrases
        devront être stockées par un agent ssh pour permettre les
        authentifications automatiques.
      </para>
    </section>
    <section>
      <title>Configuration des clés privées/publiques ssh requises pour TMS</title>
      <para>
        Les commandes de soumission, d'annulation et de récupération des résultats de jobs  éxécutées par le SeD TMS sont lancées via ssh
        sous le nom de l'utilisateur ayant émis la requête. Pour pouvoir exécuter ces commandes correctement, la clé publique du compte dédié au SeD TMS doit
        être ajoutée au fichier authorized_keys ($HOME/.ssh/authorized_keys) de l'utilisateur.  Toutes les clés protégées par des passphrases
        devront être stockées par un agent ssh pour permettre les
        authentifications automatiques.
      </para>
    </section>
    <section>
      <title>Test d'exécution d'un service depuis une machine client par shell</title>
      <orderedlist>
        <listitem>
          <para>
	    Une fois que la plateforme a été installée, se mettre sur un poste client avec VISHNU d'installé. Se référer au document [VISHNU_USERMANUAL]
	    pour l'installation de la partie client.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Exporter la variable d'environnement VISHNU_CONFIG_FILE dans un script de configuration client. Se référer
	    au guide d'installation du client [VISHNU_USER_GUIDE] pour connaître le contenu d'un fichier client.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Lancer la commande dans le shell 'vishnu_connect user', ou user représente un nom d'utilisateur dans la base de données vishnu
	  </para>
        </listitem>
        <listitem>
          <para>
	    Taper le mot de passe associé correspondant à l'utilisateur 'user'
	  </para>
        </listitem>
        <listitem>
          <para>
	    Sur le client, un affichage doit signaler que le service a réussi. Dans le terminal ou le SeD UMS a été lancé et dans le terminal ou le MA tourne, selon le niveau de verbosité, plus ou moins d'informations, concernant le service effectué, doivent apparaitre. Le message affiché contient au moins une ligne similaire :
	    <emphasis role="bold">sessionId: root-2011-Jul-11-14:22:14.403491:86690</emphasis>, qui indique l'identifiant de la session ouverte.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Fermer la session avec 'vishnu_close'. Aucune erreur ne doit être remontée lors de ces tests.
	  </para>
        </listitem>
      </orderedlist>
    </section>
  </chapter>
  <chapter>
    <title>Administration</title>
    <section>
      <title>Présentation</title>
      <para>
	Le module UMS correspond à la gestion des utilisateurs et des machines de VISHNU. Il permet aussi de sauvegarder la configuration de VISHNU à chaud et de la restaurer si besoin est.
	Dans toute la suite du chapitre, on supposera que l'utilisateur est déjà connecté avec un compte administrateur de VISHNU pour pouvoir réaliser ces manipulations. De plus, on présentera l'utilisation des commandes depuis le shell, mais cela reste valable depuis les API Python ou C++.
      </para>
      <para>L'API est disponible dans le document [VISHNU_API]</para>
    </section>
    <section>
      <title>Gestion des utilisateurs (UMS)</title>
      <orderedlist>
        <listitem>
          <para>
	    L'ajout d'un utilisateur se fait à l'aide de la commande 'vishnu_add_user'. Elle prend en paramètre le prénom de l'utilisateur, son nom de famille, les droits qui lui sont associés dans VISHNU (administrateur ou simple utilisateur) et son adresse de couriel. Tout ces paramètres sont obligatoires. Un privilège à 1 signifie administrateur, un privilège à 0 signifie un utilisateur. L'identifiant de l'utilisateur est généré et renvoyé.
	  </para>
        </listitem>
        <listitem>
          <para>
	    La mise à jour d'un utilisateur ne peut être faite que par un administrateur. Cette mise à jour se fait avec un appel à la commande 'vishnu_update_user' et permet de modifier les paramètres de l'ajout (nom, prénom, statut, couriel).
	    Il faut avoir l'identifiant de l'utilisateur (généré lors de la création de l'utilisateur) pour le désigner lors de la mise à jour.
	  </para>
          <para>Note : le changement du statut d'un utilisateur à l'état &quot;INACTIVE&quot; correspond à un blocage de son compte.</para>
        </listitem>
        <listitem>
          <para>
	    La suppression d'un utilisateur efface toutes les informations liées à l'utilisateur de la base de donnée. Cette suppression se fait à l'aide de la commande 'vishnu_delete_user'.
	  </para>
        </listitem>
        <listitem>
          <para>
	    La liste des utilisateurs ne peut être faite que par un administrateur. Cela se fait avec la commande 'vishnu_list_user'. Cette commande peut prendre en paramètre l'identifiant d'un utilisateur pour n'avoir les informations que concernant cet utilisateur.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Seul un administrateur peut réinitialiser le mot de passe d'un utilisateur de VISHNU. Pour ce faire, il doit appeller la commande 'vishnu_reset_password'  en fournissant l'identifiant de l'utilisateur dont l'administrateur veut réinitialiser le mot de passe. Le nouveau mot de passe est temporaire et renvoyé par la commande. Lors de la prochaine connexion, l'utilisateur devra changer son mot de passe avec 'vishnu_change_password'.
	  </para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Gestion des machines (UMS+IMS)</title>
      <orderedlist>
        <listitem>
          <para>L'ajout d'une machine se fait à l'aide de la commande 'vishnu_add_machine'. Cette commande prend en paramètre le nom de la machine, le site ou elle se trouve, le language de la description qui sera donnée pour la machine, le fichier contenant la clé publique et la description. Ces paramètres sont obligatoires, en passant par le shell, la description n'a pas besoin d'être fournie en paramètre mais elle est alors demandée à l'administrateur avant d'ajouter la machine. A la fin de l'ajout, l'identifiant généré pour la machine est renvoyé.</para>
        </listitem>
        <listitem>
          <para>
	    La mise à jour d'une machine se fait à l'aide de la commande 'vishnu_update_machine' et permet de modifier les paramètres mis lors de l'ajout de la machine. Il faut utiliser l'identifiant de la machine pour l'identifier lors de la mise à jour.
	  </para>
          <para>Note : le changement du statut d'une machine à l'état &quot;INACTIVE&quot; correspond à un blocage de la machine. Cela rend la machine inaccessible aux utilisateurs de VISHNU mais toujours visible pour les administrateurs.</para>
        </listitem>
        <listitem>
          <para>
	    La suppression d'une machine se fait à l'aide de la commande 'vishnu_delete_machine' avec l'identifiant de la machine à supprimer. Cela supprime la machine de la base de données, ainsi que toutes les informations qui y sont attachées (Attention : cette commande est irréversible).
	  </para>
        </listitem>
        <listitem>
          <para>
	    Les utilisateurs peuvent lister les machines, mais un administrateur a en plus une option qui est l'identifiant d'un utilisateur. Ceci lui permet de lister les machines sur lesquelles l'utilisateur a un compte VISHNU.
	  </para>
        </listitem>
        <listitem>
          <para>
	    La mise à jour d'informations système d'une machine se fait à l'aide de la commande 'vishnu_set_system_info' et permet d'ajouter ou modifier des informations système d'une machine. Il faut utiliser l'identifiant de la machine pour l'identifier lors de la mise à jour.
	  </para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Gestion de la plateforme (UMS)</title>
      <orderedlist>
        <listitem>
          <para>
	    L'administrateur peut faire une sauvegarde à chaud à un moment donné de VISHNU. Ceci sauvegarde les utilisateurs, les machines et les comptes des utilisateurs. Le fichier, dans lequel la configuration est, est retourné par la fonction. La fonction est 'vishnu_save_configuration', pas besoin de paramètres.
	  </para>
        </listitem>
        <listitem>
          <para>
	    L'administrateur peut recharger une configuration précédente de VISHNU à l'aide de la commande 'vishnu_restore_configuration' qui a besoin du fichier de sauvegarde pour recharger la base.
	    Avant de pouvoir lancer cette restauration, tous les utilisateurs de VISHNU doivent être déconnectés.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Un administrateur peut également définir les valeurs par défaut des options de VISHNU pour tout les utilisateurs (ces options sont le temps de déconnexion par défaut et le type de fermeture d'une session par défaut). Cela se fait en appellant 'vishnu_configure_default_option' en donnant le nom de l'option et sa nouvelle valeur.
	  </para>
        </listitem>
        <listitem>
          <para>
            Un administrateur peut ajouter ou modifier un système d'authentification. Par exemple il peut ajouter différents LDAP pour authentifier ses utilisateurs. Actuellement, pour un même LDAP, si les utilisateurs sont dans des branches différentes il faut ajouter un système d'authentification par branche. Ceci afin de faciliter la connexion de l'utilisateur, pour qu'il ne donne aucune information concernant son arbre LDAP, juste son login. C'est l'administrateur lorsqu'il crée son système d'authentification qui doit remplir le champs ldapbase avec le chemin complet dans l'arbre LDAP à utiliser pour authentifier un utilisateur. Lorsqu'un administrateur rempli le chemin menant aux utilisateurs, il doit remplacer le nom de l'utilisateur par la chaîne de caractère \$USERNAME, cette chaîne sera remplacée par vishnu par le login de l'utilisateur que l'on cherche à authentifier.
            Fonctions associées : vishnu_add_auth_system, vishnu_update_auth_system, vishnu_delete_auth_system
	  </para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Options propres à l'administrateur dans les commandes utilisateurs(UMS+FMS)</title>
      <orderedlist>
        <listitem>
          <para>Dans la fonction 'vishnu_connect', un administrateur peut donner l'identifiant d'un utilisateur pour se connecter sous le nom de cet utilisateur dans VISHNU.</para>
        </listitem>
        <listitem>
          <para>
	    Dans la fonction 'vishnu_list_history_cmd', l'administrateur peut lister toutes les commandes de tout les utilisateurs ou les commandes d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Dans la fonction 'vishnu_list_local_accounts', l'administrateur peut lister toutes les comptes de tout les utilisateurs ou les comptes d'un utilisateur particulier en fournissant l'identifiant de l'utilisateur.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Dans la fonction 'vishnu_list_options', l'administrateur peut lister les toutes les options de tout les utilisateurs ou les options d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Dans la fonction 'vishnu_list_sessions', l'administrateur peut lister les toutes les sessions de tous les utilisateurs ou les sessions d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur, ou les sessions sur une machine particulière en fournissant l'identifiant de la machine.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Dans la fonction 'vishnu_list_file_transfers', l'administrateur peut lister tous les transferts de fichiers de tous les utilisateurs ou ceux  d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur, ou lister les transferts impliquant une machine particulière (qui peut être source ou destination du transfert) en fournissant l'identifiant de la machine.
	  </para>
        </listitem>
        <listitem>
          <para>
	    Dans la fonction 'vishnu_stop_file_transfers', l'administrateur peut annuler tous les transferts de fichiers de tous les utilisateurs ou ceux  d'un utilisateur en particulier en fournissant l'identifiant de l'utilisateur, ou annuler les transferts impliquant une machine particulière (qui peut être source ou destination du transfert) en fournissant l'identifiant de la machine.
	  </para>
        </listitem>
      </orderedlist>
    </section>
    <section>
      <title>Gestion des processus VISHNU et délestage (IMS)</title>
      <itemizedlist>
        <listitem>
          <para>L'administrateur peut lister les processus VISHNU, sur toute la plateforme ou sur une machine particulière.
	    Fonction associée : vishnu_get_processes.</para>
        </listitem>
        <listitem>
          <para>L'administrateur peut arrêter un processus VISHNU, ce processus ne sera pas redémarrer automatiquement.
	    Attention : l'administrateur doit avoir un compte sur la machine
	    Fonction associée : vishnu_stop </para>
        </listitem>
        <listitem>
          <para>L'administrateur peut redémarrer un processus VISHNU sur une machine, ce processus doit avoir déjà tourné
	    pour VISHNU sur cette machine et l'administrateur doit avoir un compte sur la machine.
	    Fonction associée : vishnu_restart </para>
        </listitem>
        <listitem>
          <para>L'administrateur peut délester une machine selon deux modes. Dans le mode HARD, tout les processus VISHNU
	    de la machine sont arretés. Dans le mode SOFT, seul FMS et TMS sont touchés, on arrête tout leurs transferts
	    et jobs en cours.
	    Fonction associée : vishnu_load_shed </para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Surveillance de l'état des machines (IMS)</title>
      <itemizedlist>
        <listitem>
          <para> Un administrateur peut fixer la fréquence de mise à jour de l'enregistrement de l'état des machines.
	    Fonction associée : vishnu_set_update_frequency</para>
        </listitem>
        <listitem>
          <para> Un administrateur peut obtenir la fréquence de mise à jour de l'enregistrement de l'état des machines.
	    Fonction associée : vishnu_get_update_frequency</para>
        </listitem>
        <listitem>
          <para> Un administrateur peut fixer un seuil sur une machine. Ce seuil peut être l'utilisation du CPU, la
	    mémoire libre restante ou l'espace disque restant. Lors de l'enregistrement de l'état d'une machine,
	    si un seuil est atteint sur cette machine, l'administrateur est notifié par mail de ce dépassement.
	    Fonction associée : vishnu_set_threshold</para>
        </listitem>
        <listitem>
          <para> Un administrateur peut obtenir les seuils fixés sur une machine. Pour plus d'informations sur les seuils
	    voir la partie pour fixer les seuils ci-dessus.
	    Fonction associée : vishnu_get_threshold</para>
        </listitem>
      </itemizedlist>
    </section>
    <section>
      <title>Définition des formats des identifiants (IMS)</title>
      <itemizedlist>
        <listitem>
          <para>
	    Un administrateur peut fixer le format des identifiants VISHNU automatiquement générés pour les utilisateurs,
	    les machines, les jobs soumis aux batchs scheduler et les transferts de fichiers. Ces identifiants peuvent contenir
	    plusieurs variables :
	    <itemizedlist>
              <listitem>
                <para>
		  '$DAY' : Variable qui sera remplacée par le jour de création (1-31)
		</para>
              </listitem>
              <listitem>
                <para>
		  '$MONTH' : Variable qui sera remplacée par le mois de création (1-12)
		</para>
              </listitem>
              <listitem>
                <para>
		  '$YEAR' :  Variable qui sera remplacé par l'année de création (0-99)
		</para>
              </listitem>
              <listitem>
                <para>
		  '$CPT' : Variable compteur qui est automatiquement incrémentée
		</para>
              </listitem>
              <listitem>
                <para>
		  '$SITE' : Pour les utilisateurs ou machine, une information sur le lieu
		</para>
              </listitem>
              <listitem>
                <para>
		  '$UNAME' : Pour les utilisateurs, variable remplacée par le nom de l'utilisateur
		</para>
              </listitem>
              <listitem>
                <para>
		  '$MANAME' : Pour les machines, variable remplacée par le nom de la machine
		</para>
              </listitem>
            </itemizedlist>
	    Attention la variable conteur est obligatoire pour éviter la génération d'un identifiant déjà existant.
	    Fonctions associées : define_file_format, define_machine_format, define_task_format, define_user_format, define_auth_format.
	  </para>
        </listitem>
      </itemizedlist>
    </section>
  </chapter>
  <reference>
    <title>UMS Command reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_add_user</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_add_user</refname>
        <refpurpose>adds a new VISHNU user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_add_user</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>firstname</replaceable></arg><arg choice="plain"><replaceable>lastname</replaceable></arg><arg
              choice="plain"><replaceable>privilege</replaceable></arg><arg choice="plain"><replaceable>email</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user in VISHNU. 
Several user information are necessary such as: lastname, firtsname and email address. 
The admin also gives a VISHNU privilege to the new user and a new userId 
and password are sent to the user by email.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId already exists in the database&quot; [22]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine is locked&quot; [34]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To add the user Jean DUPONT as a simple user and with the mail dupont@gmail.com:</para>
        <para>vishnu_add_user Jean DUPONT 0 dupont@gmail.com</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_update_user</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_update_user</refname>
        <refpurpose>updates the user information except the userId and the password</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_update_user</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-f <replaceable>firstname</replaceable></option></arg><arg
              choice="opt"><option>-l <replaceable>lastname</replaceable></option></arg><arg
              choice="opt"><option>-p <replaceable>privilege</replaceable></option></arg><arg
              choice="opt"><option>-m <replaceable>email</replaceable></option></arg><arg
              choice="opt"><option>-s <replaceable>status</replaceable></option></arg><arg
              choice="plain"><replaceable>userId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a VISHNU user information or to lock a user.  When a user is locked, she/he can not uses VISHNU. However, it is not possible to change the privilege of another admin.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-f <replaceable>firstname</replaceable></option></term>
            <listitem>
              <para>represents the updated firstname of the user.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-l <replaceable>lastname</replaceable></option></term>
            <listitem>
              <para>represents the updated lastname of the user.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-p <replaceable>privilege</replaceable></option></term>
            <listitem>
              <para>represents the updated privilege of the user.
The value must be an integer. Predefined values are: 0 (USER), 1 (ADMIN).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>email</replaceable></option></term>
            <listitem>
              <para>represents the updated email address of the user.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>status</replaceable></option></term>
            <listitem>
              <para>represents the status of the user (LOCKED or ACTIVE).
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (INACTIVE), 1 (ACTIVE).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Trying to lock a user account that is already locked&quot; [24]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To update the mail address of a user user_1 to jdupont@gmail.com:</para>
        <para>vishnu_update_user -m jdupont@gmail.com user_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_delete_user</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_delete_user</refname>
        <refpurpose>removes a user from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_delete_user</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>userId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a user from VISHNU. When a user is deleted from VISHNU all of her/his information are deleted from VISHNU. However, it is not possible to delete the VISHNU root user.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>Tu delete the user user_1:</para>
        <para>vishnu_delete_user user_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_reset_password</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_reset_password</refname>
        <refpurpose>resets the password of a user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_reset_password</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>userId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to reset the password of the user. The password generated is temporary and must be changed for using VISHNU.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To reset the password of the user user_1:</para>
        <para>vishnu_reset_password user_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_save_configuration</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_save_configuration</refname>
        <refpurpose>saves the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_save_configuration</command><arg choice="opt"><option>-h</option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This commands allows an admin to save the VISHNU configuration. This configuration contains the list of users, the lists of machines and the list of local user configurations. It is saved on a xml format on a file registered on the directory $HOME/.vishnu/configurationSaved/.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration saving &quot; [39]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To save the current configuration:</para>
        <para>vishnu_save_configuration</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_restore_configuration</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_restore_configuration</refname>
        <refpurpose>restores the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_restore_configuration</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>filePath</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function must be used carefully as it replaces all the content of the VISHNU central database
with the information stored in the provided file. This file contains the list of users, the lists of machines 
and the list of local user configurations. It can be created using the 
vishnu_save_configuration command.
The &quot;root&quot; VISHNU user is the only user authorized to call this function, and this action must be done
without any other user connected to VISHNU.
After restoring, the vishnu database is re-initialized.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration restoring&quot; [40]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To restore the configuration in /tmp/toto.cfg:</para>
        <para>vishnu_restore_configuration /tmp/toto.cfg</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_add_machine</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_add_machine</refname>
        <refpurpose>adds a new machine in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_add_machine</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>name</replaceable></arg><arg choice="plain"><replaceable>site</replaceable></arg><arg
              choice="plain"><replaceable>language</replaceable></arg><arg choice="plain"><replaceable>sshPublicKeyFile</replaceable></arg><arg
              choice="plain"><replaceable>machineDescription</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new machine in VISHNU.
Several machine information are mandatory such as: name, site, language
and the public ssh key of the VISHNU system account on the machine. This
public key will be provided automatically to all new VISHNU users who will
have to add it to the authorized keys of their own account on the machine.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machineId already exists in the database&quot; [33]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To add the machine perceval in paris with the description in french &quot;ceci est une description&quot;  with the public key in /tmp/key.pub:</para>
        <para>vishnu_add_machine perceval paris fr /tmp/key.pub &quot;ceci est une description&quot;</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_update_machine</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_update_machine</refname>
        <refpurpose>updates machine description</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_update_machine</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="opt"><option>-s <replaceable>site</replaceable></option></arg><arg
              choice="opt"><option>-d <replaceable>machineDescription</replaceable></option></arg><arg
              choice="opt"><option>-l <replaceable>language</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>status</replaceable></option></arg><arg
              choice="opt"><option>-k <replaceable>sshPublicKeyFile</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a  VISHNU machine or to locked it. A machine locked is not usable.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>represents the name of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>site</replaceable></option></term>
            <listitem>
              <para>represents the location of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-d <replaceable>machineDescription</replaceable></option></term>
            <listitem>
              <para>represents the description of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-l <replaceable>language</replaceable></option></term>
            <listitem>
              <para>represents the language used for the description of the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>status</replaceable></option></term>
            <listitem>
              <para>represents the status of the machine.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (INACTIVE), 1 (ACTIVE).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-k <replaceable>sshPublicKeyFile</replaceable></option></term>
            <listitem>
              <para>contains the path to the SSH public key used by VISHNU to access local user accounts.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To change the name of the machine whose id is machine_1 to provencal:</para>
        <para>vishnu_update_machine machine_1 -n provencal</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_delete_machine</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_delete_machine</refname>
        <refpurpose>removes a machine from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_delete_machine</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a machine from VISHNU. When a machine is deleted all of its information are deleted from VISHNU.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To delete the machine machine_1:</para>
        <para>vishnu_delete_machine machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_list_users</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_list_users</refname>
        <refpurpose>lists VISHNU users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_list_users</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-u <replaceable>userId</replaceable></option></arg><arg
              choice="opt"><option>-i <replaceable>authSystemId</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to display all users information except the passwords.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-u <replaceable>userId</replaceable></option></term>
            <listitem>
              <para>allows an admin to get information about a specific user identified by his/her userId.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-i <replaceable>authSystemId</replaceable></option></term>
            <listitem>
              <para>is an option to list users who have local user-authentication configurations on a specific user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To list all the users:</para>
        <para>vishnu_list_users</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_configure_default_option</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_configure_default_option</refname>
        <refpurpose>configures a default option value</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_configure_default_option</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>optionName</replaceable></arg><arg choice="plain"><replaceable>value</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Options in VISHNU corresponds to parameters of some VISHNU commands 
(e.g. the close policy for vishnu_connect)
that can be preset in the user configuration stored by the VISHNU system.
This command allows an administrator to configure the default value of an option;
this is the value that will be applied when the user has no configuration defined for
that option using the vishnu_configure_option command.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The name of the user option is unknown&quot; [41]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the timeout is incorrect&quot; [43]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the transfer command is incorrect&quot; [44]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To configure the option VISHNU_TIMEOUT with the value 42:</para>
        <para>vishnu_configure_default_option VISHNU_TIMEOUT 42</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_add_auth_system</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_add_auth_system</refname>
        <refpurpose>adds a new user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_add_auth_system</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-b <replaceable>ldapBase</replaceable></option></arg><arg
              choice="plain"><replaceable>name</replaceable></arg><arg choice="plain"><replaceable>URI</replaceable></arg><arg
              choice="plain"><replaceable>authLogin</replaceable></arg><arg choice="plain"><replaceable>authPassword</replaceable></arg><arg
              choice="plain"><replaceable>userPasswordEncryption</replaceable></arg><arg
              choice="plain"><replaceable>type</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user-authentication system in VISHNU.
Several user-authentication system's information are mandatory such as: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-b <replaceable>ldapBase</replaceable></option></term>
            <listitem>
              <para>is an option for user-authentication system based on LDAP which specifies the DN of the root entry .</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The identifier (name or generated identifier) of the user-authentication system already exists&quot; [50]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To add an LDAP's user-authentication system on VISHNU named CLAMART with the parameters which follows: URI ldap://127.0.0.1:389/ , login cn=ldapadmin,dc=sysfera,dc=fr, password secret and DN root entry dc=sysfera,dc=fr: </para>
        <para>vishnu_add_auth_system CLAMART ldap://127.0.0.1:389/ cn=ldapadmin,dc=sysfera,dc=fr secret -b uid=\$USERNAME,ou=users,dc=sysfera,dc=fr </para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_update_auth_system</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_update_auth_system</refname>
        <refpurpose>updates a user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_update_auth_system</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-n <replaceable>name</replaceable></option></arg><arg
              choice="opt"><option>-i <replaceable>URI</replaceable></option></arg><arg
              choice="opt"><option>-u <replaceable>authLogin</replaceable></option></arg><arg
              choice="opt"><option>-w <replaceable>authPassword</replaceable></option></arg><arg
              choice="opt"><option>-e <replaceable>userPasswordEncryption</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>type</replaceable></option></arg><arg
              choice="opt"><option>-s <replaceable>status</replaceable></option></arg><arg
              choice="opt"><option>-b <replaceable>ldapBase</replaceable></option></arg><arg
              choice="plain"><replaceable>authSystemId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a user-authentication system in VISHNU.
It is possible to change the parameters which follow: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-n <replaceable>name</replaceable></option></term>
            <listitem>
              <para>corresponds to the user-authentication system's name.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-i <replaceable>URI</replaceable></option></term>
            <listitem>
              <para>is the URI of the user-authentication systems (by the form host:port for LDAP).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-u <replaceable>authLogin</replaceable></option></term>
            <listitem>
              <para>is the login used to connect to the user-authentication system.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-w <replaceable>authPassword</replaceable></option></term>
            <listitem>
              <para>is the password used to connect to the user-authentication system.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-e <replaceable>userPasswordEncryption</replaceable></option></term>
            <listitem>
              <para>represents the encryption method used to encrypt user's password.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (SSHA).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>type</replaceable></option></term>
            <listitem>
              <para>represents the type of the user-authentication system.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (LDAP).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-s <replaceable>status</replaceable></option></term>
            <listitem>
              <para>represents the status of the user-authentication system.
The value must be an integer. Predefined values are: -1 (UNDEFINED), 0 (INACTIVE), 1 (ACTIVE).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-b <replaceable>ldapBase</replaceable></option></term>
            <listitem>
              <para>is an option for user-authentication system based on LDAP which specifies the DN of the root entry .</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is already locked&quot; [49]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To change the address of a user-authentication system whose identifier is AUTHENLDAP_1:</para>
        <para>vishnu_update_auth_system -i ldap://192.128.1.1:389/ AUTHENLDAP_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_delete_auth_system</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_delete_auth_system</refname>
        <refpurpose>removes a user-authentication system from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_delete_auth_system</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>authSystemId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to remove a user-authentication system from VISHNU.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To remove a user-authentication system whose identifier is AUTHENLDAP_1:</para>
        <para>vishnu_delete_auth_system AUTHENLDAP_1</para>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>UMS C++ API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>addUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>addUser</refname>
        <refpurpose>adds a new VISHNU user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::addUser</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>User&amp; <parameter>newUser</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user in VISHNU. 
Several user information are necessary such as: lastname, firtsname and email address. 
The admin also gives a VISHNU privilege to the new user and a new userId 
and password are sent to the user by email.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newUser</emphasis></term>
            <listitem>
              <para>Input/Output argument. Object containing the new user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId already exists in the database&quot; [22]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine is locked&quot; [34]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>updateUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>updateUser</refname>
        <refpurpose>updates the user information except the userId and the password</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::updateUser</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const User&amp; <parameter>user</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a VISHNU user information or to lock a user.  When a user is locked, she/he can not uses VISHNU. However, it is not possible to change the privilege of another admin.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>user</emphasis></term>
            <listitem>
              <para>Input argument. Object containing user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Trying to lock a user account that is already locked&quot; [24]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The mail adress is invalid&quot; [27]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>deleteUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>deleteUser</refname>
        <refpurpose>removes a user from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::deleteUser</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>userId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a user from VISHNU. When a user is deleted from VISHNU all of her/his information are deleted from VISHNU. However, it is not possible to delete the VISHNU root user.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user who will be deleted from VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>resetPassword</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>resetPassword</refname>
        <refpurpose>resets the password of a user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::resetPassword</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>userId</parameter></paramdef><paramdef>string&amp; <parameter>tmpPassword</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to reset the password of the user. The password generated is temporary and must be changed for using VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user whose password will be reset.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>tmpPassword</emphasis></term>
            <listitem>
              <para>Output argument. The temporary password generated by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is locked&quot; [23]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>saveConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>saveConfiguration</refname>
        <refpurpose>saves the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::saveConfiguration</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>Configuration&amp; <parameter>configuration</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This commands allows an admin to save the VISHNU configuration. This configuration contains the list of users, the lists of machines and the list of local user configurations. It is saved on a xml format on a file registered on the directory $HOME/.vishnu/configurationSaved/.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>configuration</emphasis></term>
            <listitem>
              <para>Output argument. The configuration is an object which encapsulates the configuration description.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration saving &quot; [39]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>restoreConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>restoreConfiguration</refname>
        <refpurpose>restores the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::restoreConfiguration</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>filePath</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function must be used carefully as it replaces all the content of the VISHNU central database
with the information stored in the provided file. This file contains the list of users, the lists of machines 
and the list of local user configurations. It can be created using the 
vishnu_save_configuration command.
The &quot;root&quot; VISHNU user is the only user authorized to call this function, and this action must be done
without any other user connected to VISHNU.
After restoring, the vishnu database is re-initialized.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>filePath</emphasis></term>
            <listitem>
              <para>Input argument. The filePath is the path of the file used to restore VISHNU configuration.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;A problem occurs during the configuration restoring&quot; [40]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>addMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>addMachine</refname>
        <refpurpose>adds a new machine in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::addMachine</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>Machine&amp; <parameter>newMachine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new machine in VISHNU.
Several machine information are mandatory such as: name, site, language
and the public ssh key of the VISHNU system account on the machine. This
public key will be provided automatically to all new VISHNU users who will
have to add it to the authorized keys of their own account on the machine.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newMachine</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the machine which will be added in VISHNU except the machine id which will be created automatically by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machineId already exists in the database&quot; [33]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>updateMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>updateMachine</refname>
        <refpurpose>updates machine description</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::updateMachine</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const Machine&amp; <parameter>machine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a  VISHNU machine or to locked it. A machine locked is not usable.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machine</emphasis></term>
            <listitem>
              <para>Input argument. Existing machine information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The closure policy is unknown&quot; [42]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>deleteMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>deleteMachine</refname>
        <refpurpose>removes a machine from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::deleteMachine</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a machine from VISHNU. When a machine is deleted all of its information are deleted from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. MachineId represents the identifier of the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The machine id is unknown&quot; [32]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>listUsers</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>listUsers</refname>
        <refpurpose>lists VISHNU users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::listUsers</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListUsers&amp; <parameter>listuser</parameter></paramdef><paramdef>const ListUsersOptions&amp; <parameter>options = ListUsersOptions()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to display all users information except the passwords.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>listuser</emphasis></term>
            <listitem>
              <para>Output argument. Listuser is the list of users .</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. Allows an admin to get information about a specific user identified by his/her userId or to get information about users authenticated by a specific user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The userId is unknown&quot; [21]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>configureDefaultOption</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>configureDefaultOption</refname>
        <refpurpose>configures a default option value</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::configureDefaultOption</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const OptionValue&amp; <parameter>optionValue</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Options in VISHNU corresponds to parameters of some VISHNU commands 
(e.g. the close policy for vishnu_connect)
that can be preset in the user configuration stored by the VISHNU system.
This command allows an administrator to configure the default value of an option;
this is the value that will be applied when the user has no configuration defined for
that option using the vishnu_configure_option command.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>optionValue</emphasis></term>
            <listitem>
              <para>Input argument. The optionValue is an object which encapsulates the option information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The name of the user option is unknown&quot; [41]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the timeout is incorrect&quot; [43]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The value of the transfer command is incorrect&quot; [44]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>addAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>addAuthSystem</refname>
        <refpurpose>adds a new user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::addAuthSystem</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>AuthSystem&amp; <parameter>newAuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user-authentication system in VISHNU.
Several user-authentication system's information are mandatory such as: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newAuthSys</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The identifier (name or generated identifier) of the user-authentication system already exists&quot; [50]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>updateAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>updateAuthSystem</refname>
        <refpurpose>updates a user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::updateAuthSystem</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const AuthSystem&amp; <parameter>AuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a user-authentication system in VISHNU.
It is possible to change the parameters which follow: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>AuthSys</emphasis></term>
            <listitem>
              <para>Input argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is already locked&quot; [49]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The encryption method is unknown&quot; [53]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>deleteAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>deleteAuthSystem</refname>
        <refpurpose>removes a user-authentication system from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::deleteAuthSystem</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>authSystemId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to remove a user-authentication system from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>authSystemId</emphasis></term>
            <listitem>
              <para>Input argument. AuthSystemId is the identifier of the user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;Vishnu not available (Service bus failure)&quot; [1]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database error)&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (Database connection)&quot; [3]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu not available (System)&quot; [4]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Internal Error: Undefined exception&quot; [9]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user is not an administrator&quot; [25]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The session key is unrecognized&quot; [28]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The sessionKey is expired. The session is closed.&quot; [29]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;The user-authentication system is unknown or locked&quot; [48]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>UMS Python API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.addUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.addUser</refname>
        <refpurpose>adds a new VISHNU user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.addUser</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>User <parameter>newUser</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user in VISHNU. 
Several user information are necessary such as: lastname, firtsname and email address. 
The admin also gives a VISHNU privilege to the new user and a new userId 
and password are sent to the user by email.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newUser</emphasis></term>
            <listitem>
              <para>Input/Output argument. Object containing the new user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId already exists in the database&quot; [22])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The mail adress is invalid&quot; [27])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machine is locked&quot; [34])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.updateUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.updateUser</refname>
        <refpurpose>updates the user information except the userId and the password</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.updateUser</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>User <parameter>user</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a VISHNU user information or to lock a user.  When a user is locked, she/he can not uses VISHNU. However, it is not possible to change the privilege of another admin.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>user</emphasis></term>
            <listitem>
              <para>Input argument. Object containing user information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;Trying to lock a user account that is already locked&quot; [24])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The mail adress is invalid&quot; [27])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.deleteUser</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.deleteUser</refname>
        <refpurpose>removes a user from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.deleteUser</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>userId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a user from VISHNU. When a user is deleted from VISHNU all of her/his information are deleted from VISHNU. However, it is not possible to delete the VISHNU root user.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user who will be deleted from VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.resetPassword</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.resetPassword</refname>
        <refpurpose>resets the password of a user</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, tmpPassword=VISHNU.resetPassword</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>userId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to reset the password of the user. The password generated is temporary and must be changed for using VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>userId</emphasis></term>
            <listitem>
              <para>Input argument. UserId represents the VISHNU user identifier of the user whose password will be reset.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>tmpPassword</emphasis></term>
            <listitem>
              <para>Output argument. The temporary password generated by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>tmpPassword(string)</emphasis></term>
            <listitem>
              <para>The temporary password generated by VISHNU</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is locked&quot; [23])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.saveConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.saveConfiguration</refname>
        <refpurpose>saves the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.saveConfiguration</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Configuration <parameter>configuration</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This commands allows an admin to save the VISHNU configuration. This configuration contains the list of users, the lists of machines and the list of local user configurations. It is saved on a xml format on a file registered on the directory $HOME/.vishnu/configurationSaved/.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>configuration</emphasis></term>
            <listitem>
              <para>Output argument. The configuration is an object which encapsulates the configuration description.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;A problem occurs during the configuration saving &quot; [39])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.restoreConfiguration</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.restoreConfiguration</refname>
        <refpurpose>restores the configuration of VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.restoreConfiguration</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>filePath</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function must be used carefully as it replaces all the content of the VISHNU central database
with the information stored in the provided file. This file contains the list of users, the lists of machines 
and the list of local user configurations. It can be created using the 
vishnu_save_configuration command.
The &quot;root&quot; VISHNU user is the only user authorized to call this function, and this action must be done
without any other user connected to VISHNU.
After restoring, the vishnu database is re-initialized.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>filePath</emphasis></term>
            <listitem>
              <para>Input argument. The filePath is the path of the file used to restore VISHNU configuration.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;A problem occurs during the configuration restoring&quot; [40])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.addMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.addMachine</refname>
        <refpurpose>adds a new machine in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.addMachine</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Machine <parameter>newMachine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new machine in VISHNU.
Several machine information are mandatory such as: name, site, language
and the public ssh key of the VISHNU system account on the machine. This
public key will be provided automatically to all new VISHNU users who will
have to add it to the authorized keys of their own account on the machine.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newMachine</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the machine which will be added in VISHNU except the machine id which will be created automatically by VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machineId already exists in the database&quot; [33])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The closure policy is unknown&quot; [42])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.updateMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.updateMachine</refname>
        <refpurpose>updates machine description</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.updateMachine</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Machine <parameter>machine</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a  VISHNU machine or to locked it. A machine locked is not usable.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machine</emphasis></term>
            <listitem>
              <para>Input argument. Existing machine information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machine id is unknown&quot; [32])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The closure policy is unknown&quot; [42])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.deleteMachine</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.deleteMachine</refname>
        <refpurpose>removes a machine from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.deleteMachine</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to delete a machine from VISHNU. When a machine is deleted all of its information are deleted from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. MachineId represents the identifier of the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The machine id is unknown&quot; [32])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.listUsers</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.listUsers</refname>
        <refpurpose>lists VISHNU users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, listuser=VISHNU.listUsers</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ListUsersOptions <parameter>options = ListUsersOptions()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to display all users information except the passwords.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>listuser</emphasis></term>
            <listitem>
              <para>Output argument. Listuser is the list of users .</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. Allows an admin to get information about a specific user identified by his/her userId or to get information about users authenticated by a specific user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The userId is unknown&quot; [21])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.configureDefaultOption</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.configureDefaultOption</refname>
        <refpurpose>configures a default option value</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.configureDefaultOption</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>OptionValue <parameter>optionValue</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>Options in VISHNU corresponds to parameters of some VISHNU commands 
(e.g. the close policy for vishnu_connect)
that can be preset in the user configuration stored by the VISHNU system.
This command allows an administrator to configure the default value of an option;
this is the value that will be applied when the user has no configuration defined for
that option using the vishnu_configure_option command.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>optionValue</emphasis></term>
            <listitem>
              <para>Input argument. The optionValue is an object which encapsulates the option information.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The name of the user option is unknown&quot; [41])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The value of the timeout is incorrect&quot; [43])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The value of the transfer command is incorrect&quot; [44])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.addAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.addAuthSystem</refname>
        <refpurpose>adds a new user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.addAuthSystem</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>AuthSystem <parameter>newAuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to add a new user-authentication system in VISHNU.
Several user-authentication system's information are mandatory such as: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>newAuthSys</emphasis></term>
            <listitem>
              <para>Input/Output argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The identifier (name or generated identifier) of the user-authentication system already exists&quot; [50])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The encryption method is unknown&quot; [53])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.updateAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.updateAuthSystem</refname>
        <refpurpose>updates a user-authentication system in VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.updateAuthSystem</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>AuthSystem <parameter>AuthSys</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to update a user-authentication system in VISHNU.
It is possible to change the parameters which follow: URI,  login, password, 
type and optionally for LDAP the DN of the root entry. By default, the type of the user-authentication system is LDAP. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>AuthSys</emphasis></term>
            <listitem>
              <para>Input argument. Is an object which encapsulates the information of the user-authentication system which will be added in VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user-authentication system is unknown or locked&quot; [48])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user-authentication system is already locked&quot; [49])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The encryption method is unknown&quot; [53])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.deleteAuthSystem</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.deleteAuthSystem</refname>
        <refpurpose>removes a user-authentication system from VISHNU</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.deleteAuthSystem</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>authSystemId</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command allows an admin to remove a user-authentication system from VISHNU.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The sessionKey is the encrypted identifier of the session generated by VISHNU.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>authSystemId</emphasis></term>
            <listitem>
              <para>Input argument. AuthSystemId is the identifier of the user-authentication system.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Service bus failure)&quot; [1])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database error)&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (Database connection)&quot; [3])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Vishnu not available (System)&quot; [4])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>SystemException(&quot;Internal Error: Undefined exception&quot; [9])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user is not an administrator&quot; [25])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The session key is unrecognized&quot; [28])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The sessionKey is expired. The session is closed.&quot; [29])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UMSVishnuException(&quot;The user-authentication system is unknown or locked&quot; [48])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS Command reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_processes</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_processes</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_processes</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-p <replaceable>machineId</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-p <replaceable>machineId</replaceable></option></term>
            <listitem>
              <para>The id of the machine.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get the list of the vishnu processes that are running and monitored on machine_1:</para>
        <para>vishnu_get_processes -p machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_system_info</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_system_info</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_system_info</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-m <replaceable>memory</replaceable></option></arg><arg
              choice="opt"><option>-d <replaceable>diskSpace</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>memory</replaceable></option></term>
            <listitem>
              <para>Amount of RAM memory available on the machine (in Bytes).</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-d <replaceable>diskSpace</replaceable></option></term>
            <listitem>
              <para>Amount of disk space available on the machine (in Bytes).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set the diskspace size to 300 on machine_1:</para>
        <para>vishnu_set_system_info -d 300 machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_system_threshold</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_system_threshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_system_threshold</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>value</replaceable></arg><arg choice="plain"><replaceable>machineId</replaceable></arg><arg
              choice="plain"><replaceable>type</replaceable></arg><arg choice="plain"><replaceable>handler</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set a threshold of type use of the CPU(value=1) of value 99% on machine_1 and handled by the user admin_1:</para>
        <para>vishnu_set_system_threshold 99 machine_1 1 admin_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_get_system_threshold</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_get_system_threshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_get_system_threshold</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-m <replaceable>machineId</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>metricType</replaceable></option></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-m <replaceable>machineId</replaceable></option></term>
            <listitem>
              <para>The id of the machine where the metric is defined.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>metricType</replaceable></option></term>
            <listitem>
              <para>The type of the metric.
The value must be an integer. Predefined values are: 0 (UNDEFINED), 1 (CPUUSE), 2 (FREEDISKSPACE), 3 (FREEMEMORY).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To get all the thresholds:</para>
        <para>vishnu_get_system_threshold</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_user_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_user_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_user_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to user_$CPT:</para>
        <para>vishnu_define_user_identifier user_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_machine_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_machine_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_machine_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to machine_$CPT:</para>
        <para>vishnu_define_machine_identifier machine_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_job_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_job_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_job_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to job_$CPT:</para>
        <para>vishnu_define_job_identifier job_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_transfer_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_transfer_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_transfer_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to transfer_$CPT:</para>
        <para>vishnu_define_transfer_identifier transfer_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_auth_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_auth_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_auth_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to transfer_$CPT:</para>
        <para>vishnu_define_auth_identifier LDAP_\$CPT</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_load_shed</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_load_shed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_load_shed</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg><arg choice="plain"><replaceable>loadShedType</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a component is unavailable&quot; [301]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To make a hard load shedding on machine_1:</para>
        <para>vishnu_load_shed machine_1 1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_set_update_frequency</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_set_update_frequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_set_update_frequency</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>freq</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To set the frequency to 100:</para>
        <para>vishnu_set_update_frequency 100</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_stop</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_stop</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>processName</replaceable></arg><arg choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To stop the UMS process on machine_1:</para>
        <para>vishnu_stop UMS machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_restart</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_restart</command><arg choice="opt"><option>-h</option></arg><arg
              choice="opt"><option>-v <replaceable>vishnuConf</replaceable></option></arg><arg
              choice="opt"><option>-t <replaceable>sedType</replaceable></option></arg><arg
              choice="plain"><replaceable>machineId</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-v <replaceable>vishnuConf</replaceable></option></term>
            <listitem>
              <para>The path to the vishnu configuration file.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><option>-t <replaceable>sedType</replaceable></option></term>
            <listitem>
              <para>The type of the vishnu sed.
The value must be an integer. Predefined values are: 0 (UNDEFINED), 1 (UMS), 2 (TMS), 3 (FMS), 4 (IMS).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To restart using the configuration file ums.cfg an UMS sed on machine_1:</para>
        <para>vishnu_restart -v /tmp/ums.cfg -t 1 machine_1</para>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>vishnu_define_work_identifier</refentrytitle>
        <manvolnum>1</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>vishnu_define_work_identifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <cmdsynopsis><command>vishnu_define_work_identifier</command><arg choice="opt"><option>-h</option></arg><arg
              choice="plain"><replaceable>format</replaceable></arg></cmdsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="options">
        <title>OPTIONS</title>
        <variablelist>
          <varlistentry>
            <term><option>-h <replaceable>help</replaceable></option></term>
            <listitem>
              <para>help about the command.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="environment">
        <title>ENVIRONMENT</title>
        <variablelist>
          <varlistentry>
            <term><envar>VISHNU_CONFIG_FILE</envar></term>
            <listitem>
              <para>Contains the path to the local configuration file for VISHNU.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="diagnostics">
        <title>DIAGNOSTICS</title>
        <para>The following diagnostics may be issued on stderr and the command will return the code provided within brackets: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;There is no open session in this terminal&quot; [13]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Missing parameters&quot; [14]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Vishnu initialization failed&quot; [15]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;Undefined error&quot; [16]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="example">
        <title>EXAMPLE</title>
        <para>To define the format to W_$CPT:</para>
        <para>vishnu_define_work_identifier W_\$CPT</para>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS C++ API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>getProcesses</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getProcesses</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getProcesses</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListProcesses&amp; <parameter>process</parameter></paramdef><paramdef>const ProcessOp&amp; <parameter>options = ProcessOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Output argument. The list of the Vishnu processes on the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options to search for the processes.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setSystemInfo</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setSystemInfo</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setSystemInfo</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const SystemInfo&amp; <parameter>systemInfo</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>systemInfo</emphasis></term>
            <listitem>
              <para>Input argument. Contains system information to store in Vishnu database.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setSystemThreshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setSystemThreshold</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const Threshold&amp; <parameter>threshold</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>threshold</emphasis></term>
            <listitem>
              <para>Input argument. The threshold to set.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>getSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>getSystemThreshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::getSystemThreshold</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>ListThreshold&amp; <parameter>value</parameter></paramdef><paramdef>const ThresholdOp&amp; <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>value</emphasis></term>
            <listitem>
              <para>Output argument. The thresholds value.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options for the threshold.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineUserIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineUserIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineUserIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineMachineIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineMachineIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineMachineIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineJobIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineJobIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineJobIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineTransferIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineTransferIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineTransferIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineAuthIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineAuthIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineAuthIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>loadShed</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>loadShed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::loadShed</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>const LoadShedType&amp; <parameter>loadShedType</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine to stop.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>loadShedType</emphasis></term>
            <listitem>
              <para>Input argument. Selects a load shedding mode (SOFT: stops all services and they can be restarted, HARD: stops all services, they cannot be restarted).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a component is unavailable&quot; [301]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>setUpdateFrequency</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>setUpdateFrequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::setUpdateFrequency</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const int&amp; <parameter>freq</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq</emphasis></term>
            <listitem>
              <para>Input argument. Frequency the data are updated, in second.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>stop</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::stop</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const Process&amp; <parameter>process</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Input argument. The process to stop and do not try to restart anymore.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>restart</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::restart</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>machineId</parameter></paramdef><paramdef>const RestartOp&amp; <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The option for the restart.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>defineWorkIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>defineWorkIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef>int <function>vishnu::defineWorkIdentifier</function></funcdef><paramdef>const string&amp; <parameter>sessionKey</parameter></paramdef><paramdef>const string&amp; <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>&quot;The database generated an error&quot; [2]</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>&quot;If a parameter is invalid&quot; [10]</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
  <reference>
    <title>IMS Python API Reference</title>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getProcesses</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getProcesses</refname>
        <refpurpose>displays the list of the VISHNU processes running on machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, process=VISHNU.getProcesses</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ProcessOp <parameter>options = ProcessOp()</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to get the list of VISHNU server processes that are running on the infrastructure or on a single machine. The results contain both the VISHNU identifier of the process and the DIET underlying middleware identifier. </para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Output argument. The list of the Vishnu processes on the machine.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options to search for the processes.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setSystemInfo</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setSystemInfo</refname>
        <refpurpose>updates the system information of a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setSystemInfo</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>SystemInfo <parameter>systemInfo</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This command with restricted access is used to set system information on a machine in the VISHNU database. The machine must first be registered using the UMS &quot;addMachine&quot; call. Using the machine identifier, information such as the total memory and available diskspace on the machine can be added.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>systemInfo</emphasis></term>
            <listitem>
              <para>Input argument. Contains system information to store in Vishnu database.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setSystemThreshold</refname>
        <refpurpose>sets a threshold on a machine of a system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setSystemThreshold</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Threshold <parameter>threshold</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to set a threshold. Each time an IMS server records the state of a machine, it checks the values defined, if a threshold is reached (over a use of the cpu or under the free memory or diskspace available), the administrator responsible for the threshold will receive an mail. These threshold will help the administrator to be aware of critical situations on a machine. Warning, a mail is sent for each time the threshold is reached, if a value swings around a threshold, the administrator may receive lots of emails depending on the update frequency.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>threshold</emphasis></term>
            <listitem>
              <para>Input argument. The threshold to set.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.getSystemThreshold</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.getSystemThreshold</refname>
        <refpurpose>gets a system threshold on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret, value=VISHNU.getSystemThreshold</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>ThresholdOp <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to get the thresholds that may be defined on a machine. This may be used to check the parameters defined to monitor the machine.
Each time a threshold is reached, a mail is sent. So checking the values of the threshold is important for the administrator to make sure they will not get tons of emails.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>value</emphasis></term>
            <listitem>
              <para>Output argument. The thresholds value.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The options for the threshold.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineUserIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineUserIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the users</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineUserIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the users. Once the format is defined, each time a user is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$NAME: The name of the user
$UNAME: The name of the user
$DAY: The day the user is added
$MONTH: The month the user is added
$YEAR: The year the user is added
$SITE: The site the user is
$TYPE: The 'U' symb to remind it is a user id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineMachineIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineMachineIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the machines</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineMachineIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the machines. Once the format is defined, each time a machine is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$MANAME: The hostname of the machine
$NAME: The hostname of the machine
$DAY: The day the machine is added
$MONTH: The month the machine is added
$YEAR: The year the machine is added
$SITE: The site the machine is
$TYPE: The 'M' symb to remind it is a machine id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineJobIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineJobIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the jobs</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineJobIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the jobs submited through TMS. Once the format is defined, each time a job is submitted, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the job is submitted
$MONTH: The month the job is submitted
$YEAR: The year the job is submitted
$TYPE: The 'J' symb to remind it is a job id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineTransferIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineTransferIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the file transfers</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineTransferIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the file transfers. Once the format is defined, each time a file transfer is done, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineAuthIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineAuthIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the authentication system</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineAuthIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the authentication. Once the format is defined, each time an authentication system is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'F' symb to remind it is a file transfer id</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.loadShed</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.loadShed</refname>
        <refpurpose>sheds load on a machine</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.loadShed</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>LoadShedType <parameter>loadShedType</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to shed load on a machine. Two modes are available: SOFT mode will cancel all the submitted jobs and file transfers for all VISHNU users (Note that jobs and file transfers not initiated through VISHNU will not be impacted). HARD mode will additionally stop all the VISHNU processes on the machine. If a user without administrator rights uses this function, all the user's jobs and file transfers will be cancelled on the machine. In the HARD mode, the stopped processes will not be automatically restarted.
Type values:
HARD = 1
SOFT   = 2</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine to stop.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>loadShedType</emphasis></term>
            <listitem>
              <para>Input argument. Selects a load shedding mode (SOFT: stops all services and they can be restarted, HARD: stops all services, they cannot be restarted).</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>IMSVishnuException(&quot;If a component is unavailable&quot; [301])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.setUpdateFrequency</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.setUpdateFrequency</refname>
        <refpurpose>sets the update frequency of the IMS tables</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.setUpdateFrequency</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>int <parameter>freq</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to set the update frequency. This frequency corresponds to how often the state of the machines is automatically polled by the IMS server. The value must be in seconds.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>freq</emphasis></term>
            <listitem>
              <para>Input argument. Frequency the data are updated, in second.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.stop</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.stop</refname>
        <refpurpose>To stop (and do not try to relaunch) a SeD</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.stop</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>Process <parameter>process</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to stop a VISHNU server on a machine. The stopped process will not be restarted automatically.
The important parameters in the process are the names and the machine.
The processName must be UMS, TMS, IMS or FMS , in upper case.
</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>process</emphasis></term>
            <listitem>
              <para>Input argument. The process to stop and do not try to restart anymore.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.restart</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.restart</refname>
        <refpurpose>To restart a SeD or a MA</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.restart</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>machineId</parameter></paramdef><paramdef>RestartOp <parameter>options</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an admin to restart a VISHNU server on a machine. Warning when restarting a server, first it is tried to stop it, so if one is running it is stopped and then another is restarted.</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>machineId</emphasis></term>
            <listitem>
              <para>Input argument. The id of the machine where to restart.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>options</emphasis></term>
            <listitem>
              <para>Input argument. The option for the restart.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
    <refentry>
      <refmeta>
        <refentrytitle>VISHNU.defineWorkIdentifier</refentrytitle>
        <manvolnum>3</manvolnum>
      </refmeta>
      <refnamediv>
        <refname>VISHNU.defineWorkIdentifier</refname>
        <refpurpose>defines the shape of the identifiers automatically generated for the work</refpurpose>
      </refnamediv>
      <refsynopsisdiv>
        <funcsynopsis><funcprototype><funcdef><function>ret=VISHNU.defineWorkIdentifier</function></funcdef><paramdef>string <parameter>sessionKey</parameter></paramdef><paramdef>string <parameter>format</parameter></paramdef></funcprototype></funcsynopsis>
      </refsynopsisdiv>
      <refsect1 id="description">
        <title>DESCRIPTION</title>
        <para>This function allows an administrator to define the format of the identifier that will be automatically generated for the work. Once the format is defined, each time a work is added, the format will be used to define its identifier.
The format can contain various variables, a variable is preceded by the '$' symbol. Moreover, the counter variable '$CPT' MUST be present in the format, otherwise it will be rejected.
The available variables are: 
$CPT: a counter
$DAY: The day the file transfer is done
$MONTH: The month the file transfer is done
$YEAR: The year the file transfer is done
$TYPE: The 'W' symb to remind it is a file transfer id
$NAME: The name of the work</para>
      </refsect1>
      <refsect1 id="arguments">
        <title>ARGUMENTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>sessionKey</emphasis></term>
            <listitem>
              <para>Input argument. The session key.</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term><emphasis>format</emphasis></term>
            <listitem>
              <para>Input argument. The new format to use.</para>
            </listitem>
          </varlistentry>
        </variablelist>
      </refsect1>
      <refsect1 id="returned objects">
        <title>RETURNED OBJECTS</title>
        <variablelist>
          <varlistentry>
            <term><emphasis>errorCode (integer)</emphasis></term>
            <listitem>
              <para>Output parameter. Contains 0 on success and the error code on failure.</para>
            </listitem>
          </varlistentry>
          <varlistentry/>
        </variablelist>
      </refsect1>
      <refsect1 id="exceptions">
        <title>EXCEPTIONS</title>
        <para>The following exceptions may be thrown: </para>
        <variablelist>
          <varlistentry>
            <term>SystemException(&quot;The database generated an error&quot; [2])</term>
            <listitem/>
          </varlistentry>
          <varlistentry>
            <term>UserException(&quot;If a parameter is invalid&quot; [10])</term>
            <listitem/>
          </varlistentry>
        </variablelist>
      </refsect1>
    </refentry>
  </reference>
</book>