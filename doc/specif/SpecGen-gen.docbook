<?xml version="1.0" encoding="UTF-8"?>
<book
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <info>
    <author>
      <personname>
        <firstname>Benjamin</firstname>
        <surname>Isnard</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Daouda</firstname>
        <surname>Traoré</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Eugène</firstname>
        <surname>Pamba Capo-Chichi</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Kevin</firstname>
        <surname>Coulomb</surname>
      </personname>
    </author>
    <author>
      <personname>
        <firstname>Ibrahima</firstname>
        <surname>Cissé</surname>
      </personname>
    </author>
    <title>D1.1a - VISHNU General specifications</title>
    <revhistory>
      <revision>
        <revnumber>01</revnumber>
        <date>07/12/2010</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
          
        <para>Formatting example</para></revdescription>
      </revision>
      <revision>
        <revnumber>02</revnumber>
        <date>13/12/2010</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
            
          <para>Pre-deliverable</para></revdescription>
      </revision>
      <revision>
        <revnumber>03</revnumber>
        <date>13/01/2011</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
            
          <para>First Release</para></revdescription>
      </revision>
      <revision>
        <revnumber>04</revnumber>
        <date>10/02/2011</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
            
          <para>Modified 1.2, 1.4, U1, U1.1, U1.3.3, U1.3.4, U1.3.5, U1.4, U1.5, U2, U3, U4, U4.1, U4.2, UA1, UA1.1, UA6.2, UA7, T1.2, T2.6.
              Added UA1.3 and modified 2.3.</para></revdescription>
      </revision>
      <revision>
        <revnumber>05</revnumber>
        <date>31/03/2011</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
            
          <para>Modified 4.2.6, UC IA2. Fix set threshold available in branch c, the threshold is the cpuload and not the number of processes</para></revdescription>
      </revision>
      <revision>
        <revnumber>06</revnumber>
        <date>21/04/2011</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
          
        <para>
            Removed TA1. Added T1.7. Replaced T1.2 by T1.7.
          </para></revdescription>
      </revision>
      <revision>
        <revnumber>07</revnumber>
        <date>16/12/2011</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
          
        <para>
            Added use of .netrc file in use case U1.1
          </para></revdescription>
      </revision>
      <revision>
        <revnumber>08</revnumber>
        <date>18/01/2012</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
          
        <para>
            Added UC T1.2 and UC T2.8
          </para></revdescription>
      </revision>
      <revision>
        <revnumber>09</revnumber>
        <date>26/01/2012</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
          
        <para>
            Modified U1.1, U1.5 and UA5.2. Added U5, U6, U6.1, U6.2, U6.3, UA8, UA8.1, UA8.2.
          </para></revdescription>
      </revision>
      <revision>
        <revnumber>10</revnumber>
        <date>23/02/2012</date>
        <authorinitials>SysFera</authorinitials>
        <revdescription>
          
        <para>
            Modified UA3 - Save configuration : added the list of user-authentication systems and the list of local user-authentication configs on file saved.
          </para></revdescription>
      </revision>
    </revhistory>
  </info>
  <chapter>
    <title>Document presentation</title>
    <section>
      <title>Document objectives</title>
      <para>This document presents the external specifications of the Vishnu system at a general
        level. At this level, we describe the interaction of a user with the system without
        providing implementation details. The different steps that constitute one scenario are
        detailed as well as the content of the messages exchanged. The main objective is to describe
        the system from the user point of view.</para>
      <para>These general specifications are a prerequisite for the detailed specifications step in
        the software development process.</para>
    </section>
    <section>
      <title>Document structure</title>
      <para>The document is divided into 4 parts corresponding to the 4 modules that compose the
        Vishnu system:</para>
      <para><itemizedlist>
          <listitem>
            <para>UMS: Users Management Service</para>
          </listitem>
          <listitem>
            <para>TMS: Tasks Management Service</para>
          </listitem>
          <listitem>
            <para>FMS: Files Management Service</para>
          </listitem>
          <listitem>
            <para>IMS: Information Management Service</para>
          </listitem>
        </itemizedlist></para>
      <para>Each module  corresponds to a chapter in the document, and each chapter contains three sections:<itemizedlist>
          <listitem>
            <para>A first section containing &quot;Use case descriptions&quot; that follow the standard UML
              description of a use case. Each use case is identified by a code beginning with a letter corresponding to the
              VISHNU Module that realizes the use case (U for UMS, T for TMS, F for FMS, I for IMS).</para>
          </listitem>
          <listitem>
            <para>A second section containing the &quot;Use case diagrams&quot; that describe the organization
              of the different use cases (see §1.3 for a more precise definition of use cases).</para>
          </listitem>
          <listitem>
            <para>A third section containing the &quot;Data dictionary&quot; that contains the definitions of the words or expressions
              used in the use cases of the module.</para>
          </listitem>
        </itemizedlist></para>
    </section>
    <section>
      <title>Use cases format description</title>
      <para>The specifications of VISHNU functionalities are formatted as &quot;use case descriptions&quot; and &quot;use case diagrams&quot;
      following the UML standard. Each use
      case is the description of a scenario that a VISHNU user will follow when using the system, and it details each step of the
      user/system interaction. The use cases do not describe the internal steps that the user should not be aware of, and that may be
      specific to the implementation of the use case.</para>
      <para>Each <emphasis role="bold">use case description</emphasis> can contain the following elements:</para>
      <para><itemizedlist>
          <listitem>
            <para><emphasis role="bold">Title</emphasis>: Contains the use case code and name.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Summary</emphasis>: Describes the main objective of the use case.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Actors</emphasis>: Contains respectively &quot;User&quot;, &quot;Admin&quot; or both when
                 the use case applies respectively to a standard user, an administrator or both classes of users.
            </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Precondition</emphasis>: Contains the conditions that should be realized before the use case runs.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Postcondition</emphasis>: Contains the conditions that should be realized when the basic sequences or
             the branch sequences are finished.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Base sequence</emphasis>: Contains the basic sequence in chronological order between the Actor and the System. Each step 
            of the sequence is identified by a number.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Branch sequence</emphasis>: Contains the branch(es) of the base sequence. The branch step is identified by a
            number, a letter and eventually a number: the first number identies the branching point in the base sequence, the letter identifies
            the branch itself and the last number is used for the different steps within the branch. The postconditions should be realized after
            the branch is finished.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Exception sequence</emphasis>: Contains the errors that may happen during the base sequence or the branch
            sequence, as considered by users. The exceptions are identified by a base or branch step identifier (see above) followed by a letter that
            identifies the exception. The postconditions cannot be realized after the exception is thrown.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Extension of</emphasis>: Contains list of use cases that the current use case &quot;extends&quot; (see
             below for a definition of this relationship).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Extensions</emphasis>: Contains list of use cases that &quot;extend&quot; the current use case (see
             below for a definition of this relationship).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Notes</emphasis>: All things for understanding the use case can be recorded here.</para>
          </listitem>
        </itemizedlist>
      </para>
      <para>Each <emphasis role="bold">use case diagram</emphasis> show the relationships between Actors and use cases, and between use cases. All
      these relationships are defined in the UML standard and have the following meaning:</para>
      <para><itemizedlist>
          <listitem>
            <para><emphasis role="bold">Generalization</emphasis> (shown as solid arrow with a large triangle head): the source use case inherits
            properties and behavior of the parent (target of the arrow) use case and may override the behavior of the parent. The preconditions, 
            postconditions and exceptions of the parent apply to the child use case. A use case that has child (specializations) of itself is
            shown in the use case diagram in <emphasis role="bold">orange</emphasis> color.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Extension</emphasis> (shown as dashed arrow with &quot;extend&quot; stereotype): this is a directed relationship
            that specifies how and when the behavior defined in usually supplementary (optional) extending use case can be inserted into the behavior
            defined in the extended use case. Extending use case typically defines optional behavior that is not necessarily meaningful by itself.
            The extension takes place at one or more extension points defined in the extended use case by the &quot;Include&quot; keyword. </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Inclusion</emphasis> (shown as dashed arrow with &quot;include&quot; stereotype): this is a directed relationship
            between two use cases when required, not optional behavior of the included use case is inserted into the behavior of the 
            including (base) use case. Including use case depends on the addition of the included use case. Including use cases are
            usually not complete by themselves and require the included use cases. A use case that has inclusions is shown in the use case
            diagram in <emphasis role="bold">blue</emphasis> color.</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
    <section>
      <title>References</title>
      <para>None</para>
    </section>
    <section>
      <title>Glossary</title>
      <para>
         <itemizedlist>
          <listitem>
            <para><emphasis role="bold">Batch scheduler</emphasis>: system used to manage batch jobs on multi-processor systems or
            clusters.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Client system</emphasis>: computer system used to send requests to the VISHNU system either using the
               command-line interface or any API.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Exception</emphasis>: event happening during the execution of a use case scenario and that triggers a
               specific action from the System. This action can either be returning an error message to the user (if the used interface is interactive)
               or triggering a programing language exception if the used interface is programmatic.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Sysfera-DS</emphasis>: is the software
              suite developed by SysFera to simplify the usage of large scale
              distributed computational resources. This software suite is
              composed of VISHNU and the WebBoard.
            </para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">UML</emphasis>: Unified Modeling Language (current version: v2.3)</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">VISHNU system</emphasis>: set of all elements (software, hardware, data) that compose a single instance of the
            VISHNU application and that work together to provide VISHNU services to the users.</para>
          </listitem>
        </itemizedlist>
      </para>
    </section>
  </chapter>
  <chapter annotations="UMS/specs/UMS.asta#UCDIAG+UCDESC+DICT(UMS Analyse/DATA_DICTIONARY)">
    <title>Use cases for User Management Service (UMS)</title>
    <section>
      <title>Use case diagrams
</title>
      <section>
        <title>UC UMS User Manual</title>
        <para>This UseCase Diagram describes all cases that can occur when the user  opens a session with manual closure</para>
        <figure>
          <title>UC UMS User Manual</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS User Manual.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC UMS User Auto</title>
        <para>This UseCase Diagram describes all cases that can occur when a user  opens a session with automatic closure (on disconnect and on timeout)</para>
        <figure>
          <title>UC UMS User Auto</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS User Auto.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC UMS User account</title>
        <para>This UseCase Diagram describes all cases that can occur when a user  executes synchronous requests</para>
        <figure>
          <title>UC UMS User account</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS User account.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC UMS Admin</title>
        <para>This UseCase Diagram describes all administrator's functions</para>
        <figure>
          <title>UC UMS Admin</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS Admin.png" align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC UMS Admin Machines</title>
        <para>This UseCase Diagram describes all cases that can occur when an administrator wants to administrate a machine</para>
        <figure>
          <title>UC UMS Admin Machines</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS Admin Machines.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC UMS Admin Authentication Systems</title>
        <para>This UseCase Diagram describes all cases that can occur when an administrator wants to administrate a user authentification system</para>
        <figure>
          <title>UC UMS Admin Authentication Systems</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS Admin Authentication Systems.png"
                  align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC UMS User Authentication Systems</title>
        <para>This UseCase Diagram describes all cases that can occur when a user wants to manage an account associated to an authentification system</para>
        <figure>
          <title>UC UMS User Authentication Systems</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC UMS User Authentication Systems.png"
                  align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
    </section>
    <section>
      <title>Use case descriptions
</title>
      <section>
        <title>IA3. Define the Identifiers</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA3. Define the Identifiers</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1 - Session with manual closure</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1 - Session with manual closure</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user opens a new session and closes it manually by using the  command for closure</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is authenticated</para><para>- VISHNU is installed and running on the client System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The session is closed</para><para>- A session log has been created</para><para>- All user requests submitted within the session are completed</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. Include::U1.1 Open session</para><para>2. System is ready to process user commands</para><para>3. Include::U1.2 Close session (before the maximum inactivity delay if option &quot;Session closure policy&quot; value is &quot;Close on timeout&quot;)</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>2a. U1.3 Execute synchronous user request</para><para>2b. U1.4 Execute asynchronous user request</para><para>2c. U1.5 Reconnect to session</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Include::U1.1 exceptions</para><para>3a. If session cannot be closed due to running commands, user must wait until all commands are completed before trying step 3 again</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>U1.3 - Execute synchronous user request</para><para>U1.5 - Reconnect to session</para><para>U1.4 - Execute asynchronous user request</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.1 - Open session</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.1 - Open session</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user opens a new session</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para> - The user is connected on a client System in which VISHNU is installed and which can be connected to the VISHNU infrastructure</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- A session is active</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User provides login, password, and optionally the way for closing the session automatically (Session closure policy).</para><para>2. System validates login, password</para><para>3. System creates the session and activates it</para><para>4. System provides the session key to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. An administrator can provide the login of another user so that the session is opened exactly as if she was that user, except the provided password must be the one of the administrator. The only difference with a session opened by the real user will be visible in the value of the session id, that will contain the administrator's login.</para><para>1b. When the login and the password provided are empty, the System will automatically read a vishnu user connection 's parameters (login and  password) on the .netrc file located in the home of the user. A VISHNU account is defined on the .netrc with the value vishnu for key machine. </para><para>1.c If several couples (userId, password) have been defined for the connection, each will be used in the order they appear until one is allowed to connect. </para><para>2a. If the password is a temporary password (after reset by the administrator) the System asks the user to enter a new password, then asks for a confirmation, and registers the new password if both steps are ok. If the User request is done through the API (non-interactive) then this is an exception (a change password request is required).</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The .netrc is not found. </para><para>1b. The permission of the .netrc file should be 600</para><para>1c. The machine vishnu is not found</para><para>1d. The login is undefined for the machine vishnu (the password must follow the login).</para><para>1e.  The password is undefined.</para><para>2a. The user login is unknown</para><para>2b. The user password is invalid</para><para>2c. The value for the &quot;Session closure policy&quot; option is invalid</para><para>2d. VISHNU infrastructure is unreachable or unavailable</para><para>2e. The user password is temporary and the request is non-interactive</para><para>2f. If the user is using the command-line interface and is already connected to a session in the same terminal then this session will remain active but will not be used for the user requests until the new session is closed.</para><para>2f. The substitute login provides by the administrator is unknown</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>This use case defines behaviour(s) that is/are not defined in the project initial requirements.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.2 - Close session</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.2 - Close session</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user closes the session manually</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is connected on the client System</para><para>- The user has an open session on the client System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The session is closed</para><para>-  A session log has been created</para><para>- All user requests submitted during the session are completed</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to close a session (the session key registered in the user's environment is sent to the System)</para><para>2. The System checks that the session key is valid and the corresponding session is open</para><para>3. The System checks that there are no running commands within the session</para><para>4. The System closes the session</para><para>5. The System informs the user that the session has been closed</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. VISHNU infrastructure is unreachable or unavailable</para><para>2a. The session key is invalid</para><para>2b. The session is already closed</para><para>2c. The session key is incompatible with the authenticated user (that means that the session identifier is not for the user who sends the requests).</para><para>3a. If there are running commands within the session, the System informs the user that the session cannot be closed</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>This use case defines behaviour(s) that is/are not defined in the project initial requirements.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3 - Execute synchronous user request</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3 - Execute synchronous user request</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user submits a synchronous request to the System</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is connected on the client System</para><para>- The user has an open session on the client System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The request is completed</para><para>- A request log is created</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends the request to the System</para><para>2. The System returns the results to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1.a Invalid session (bad session key or unavailable session)</para><para>1.b Invalid request</para><para>1.c Permission denied (admin request issued by normal user)</para><para>1.d Ressource not available</para><para>1.e VISHNU System crashed</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>U1 - Session with manual closure</para><para>U3 - Session with automatic closure on disconnect</para><para>U2 - Session with automatic closure on timeout</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3.1 - Configure Option</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3.1 - Configure Option</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user wants to modify the value of an option attached to his/her VISHNU account</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The option's value is modified</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request for modifying the value of an option to the System</para><para>2. The System checks the option name and registers the new value for the option</para><para>3. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Invalid option name</para><para>2b. Invalid option value</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3.2 - Display options</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3.2 - Display options</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user displays options concerning his/her VISHNU account</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to list all of his/her options</para><para>2. The System returns all options of the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The users sends a request to list a specific option identified by its name or all default options values defined by VISHNU administrator</para><para>2a. The System checks the name of the option specified</para><para>2b. The System returns the value of the option specified or all default options values defined by VISHNU administrator</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a1. The option name is unknown</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3.3 - Change password</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3.3 - Change password</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user changes her password</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The password is changed</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request containing her old password and the new password</para><para>2. The System checks the old user password and registers the new user password</para><para>3. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. The provided old password does not match the current password</para><para>2b. The provided new password is too short or too long</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3.4 - Display session command history</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3.4 - Display session command history</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user displays all the commands sent during one session</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to list all commands sent during the session identified by the session key registered in the user's environment</para><para>2. The System returns the list of all commands issued by the user during the session which key corresponds to the session key registered in the user's environment. Each command has exactly the same format and parameters as the original submission and can be resubmitted as-is to the System</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The user sends a request containing a session identifier to list all commands sent during the session identified by the session id</para><para>2a. The System returns the list of all commands issued by the user during the session which id corresponds to the provided id</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1b. Invalid session key (unknown / belonging to another user, if the current user is not an administrator)</para><para>1a1. Invalid session id (unknown / belonging to another user, if the current user is not an administrator)</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3.5 - Display sessions log</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3.5 - Display sessions log</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user displays her sessions (active or closed)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to list all her active sessions that have an open timestamp within an interval provided by the user (start and finish date)</para><para>2. The System returns all active sessions of the user matching the search criteria with the following information for each session: id, opening date, client host name, closure policy (timeout or disconnect), time before automatic closure (if applicable) and period using start and finish date </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The user sends a request to list all closed sessions with some optional search criteria</para><para>2a. The System returns all closed sessions of the user matching the search criteria</para><para>1b. The user sents a request to list all sessions with some optional search criteria</para><para>2b. The System returns all sessions of the user matching the search criteria</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.4 - Execute asynchronous user request</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.4 - Execute asynchronous user request</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user submits an asynchronous request to the system</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is connected on the client System</para><para>- The user has an open session on the client System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The request is completed</para><para>-  A request log is created</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends the request to the system</para><para>2. The System returns an acknowledgment to the user</para><para>3. The System runs the request in background</para><para>4. When the request is completed, the system updates the status of the request</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid session (bad session certificate or session unavailable)</para><para>1b. Invalid request</para><para>1c. Permission denied</para><para>1d. Ressource not available</para><para>1e. VISHNU System crashed</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>U1 - Session with manual closure</para><para>U2 - Session with automatic closure on timeout</para><para>U3 - Session with automatic closure on disconnect</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.5 - Reconnect to session</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.5 - Reconnect to session</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user connects to a session in which she was disconnected previously without closing it</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is connected on a client host in which VISHNU is installed and that can be connected to the VISHNU infrastructure</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The user is connected to an active session</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User provides its login, password and the identifier of the session to the System</para><para>2. The System validates the user's login, password and the identifier of the session </para><para>3. The System provides the chosen session key to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. When the login and the password provided are empty, the System will automatically read a vishnu user connection 's parameters (login and  password) on the .netrc file located in the home of the user. A vishnu account is defined on the .netrc with the value vishnu for key machine. If several VISHNU accounts have been defined in the .netrc file, each will be used in the order they appear in the file until one is allowed to reconnect with the corresponding session identifier. </para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>cf U1.1 (Open session)</para><para>1a. The .netrc is not found. </para><para>1b. The permission of the .netrc file should be 600</para><para>1c. The machine vishnu os not found</para><para>1d. The login is undefined for the machine vishnu (the password must follow the login).</para><para>1e.  The password is undefined.</para><para>2a. The identifier of the session does not exist</para><para>2b. The identifier relates to a session belonging to another user</para><para>2c. The identifier is for a session closed</para><para>2d. If the user is using the command-line interface and is already connected to a session in the same terminal then this session will remain active but will not be used for the user requests until the new session is closed.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>U1 - Session with manual closure</para><para>U2 - Session with automatic closure on timeout</para><para>U3 - Session with automatic closure on disconnect</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U2 - Session with automatic closure on timeout</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U2 - Session with automatic closure on timeout</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user opens a new session that will be closed by the System after the expiration of the inactivity delay </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- VISHNU is installed and running on the client system</para><para>- The client system can be connected to VISHNU</para><para>- The option &quot;Session closure policy&quot; value is &quot;Close on Timeout&quot;</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- A session log has been created</para><para>- The session is closed</para><para>- All user requests submitted during the session are completed</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. U1.1 Open session</para><para>2. The System is ready to process user commands</para><para>3. After inactivity delay has expired: U2.1 Close session auto</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>2a. U1.3 Execute synchronous user request</para><para>2b. U1.4 Execute asynchronous user request</para><para>2c. U1.5 Reconnect to session</para><para>2d. If the user disconnects from the client terminal or the client system crashes or is shutdown, the session remains open and all asynchronous commands that were not completed are kept running</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>see U1  </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>U1.5 - Reconnect to session</para><para>U1.4 - Execute asynchronous user request</para><para>U1.3 - Execute synchronous user request</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U2.1 - Close session auto</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U2.1 - Close session auto</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The session is closed by the system</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user is connected on the client system</para><para>- The user has an open session on the client system</para><para>either the inactivity timeout for the session has expired or the user disconnected from its shell session </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The session is closed</para><para>- The session close event is stored in the system's log</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The system checks if the user has got no running commands (file transfers or tasks)</para><para>2. The system registers session closure</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. If the user has got some running commands, the system does not close the session and reset the inactivity timeout. After this delay is expired, back to step 1.</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>This use case defines behaviour(s) that is/are not defined in the project initial requirements.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U3 - Session with automatic closure on disconnect</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U3 - Session with automatic closure on disconnect</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user opens a new session that will be closed by the system after the user disconnects from the client terminal</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- VISHNU is installed and running on the client system</para><para>- The client system can be connected to VISHNU</para><para>- The option &quot;Session Closure Policy&quot; value is &quot;Close on Disconnect&quot; </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>-  A session log has been created</para><para>- The session state is closed</para><para>- All user requests submitted during the session are complete</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. U1.1 Open session</para><para>2. System is ready to process user commands</para><para>3. The user disconnects from the terminal (either by typing an exit command, by closing the window, or by remote disconnection)</para><para>4. U2.1 Close session auto</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>2a. U1.4 Execute synchronous user request</para><para>2b. U1.5 Execute asynchronous user request</para><para>3a. if the client system crashes or is shutdown, go to step 4</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>see U1 </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>U1.3 - Execute synchronous user request</para><para>U1.5 - Reconnect to session</para><para>U1.4 - Execute asynchronous user request</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U4 - Create new local user config</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U4 - Create new local user config</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user creates a new local user configuration for a given user on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has an account on VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- Local user config is registered</para><para>- An email is sent to the user with a message containing an SSH public key</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user provides local user configuration information for a given machine (login of the local unix account on this machine, path to home directory of that unix account on this machine) </para><para>2. The System checks the user login and the machine Id</para><para>3. The System generates an ssh private/public key pair</para><para>4. The System sends an email to the user containing the public key and asking the user to add this key to the authorized_keys on the machine</para><para>5. The user updates his/her authorized_keys file on the machine by adding the public key</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Unknown login</para><para>2b. Unknown machine</para><para>2c. The user already has a local user configuration defined for the machine</para><para>4a. Invalid email address</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>This use case defines behaviour(s) that is/are not defined in the project initial requirements.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U4.1 - Update local user config</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U4.1 - Update local user config</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user updates her local user configuration for a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has an account on VISHNU</para><para>- The user has a local user configuration defined for the machine</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The local user configuration is updated</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user provides the identifier of the machine and information to be updated (login of the local unix account on this machine, path to home directory of that unix account on this machine) </para><para>2. The System checks the local user configuration</para><para>3. The System updates the local user configuration information</para><para>4. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Unknown login for the given machine</para><para>2b. Unknown machine for the given login</para><para>2c. No existing local configuration</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U4.2 - Delete local user config</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U4.2 - Delete local user config</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user deletes his/her local user configuration on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The local user configuration exists for the given machine</para><para>- There is no job or file transfer running on the given machine</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The local user configuration for the given machine is deleted</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user provides the identifier machine of the local user configuration and his/her login</para><para>2. The System checks the identifier of the machine for the given user</para><para>3. The System deletes the local user configuration identified</para><para>4. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Unknown login for the given machine</para><para>2b. Unknown machine for the given login</para><para>2c. No existing local configuration</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U4.3 - Display local user configs</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U4.3 - Display local user configs</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user displays all of his/her local configurations</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to list all his/her local configurations </para><para>2. The System returns all local configurations</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The user sends a request containing the identifier of a machine for listing a specific local user configurations on a specific machine</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a1. Unknown machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U5 - Display user authentication systems</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U5 - Display user authentication systems</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user displays all user-authentication systems defined in VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to list all user-authentication system in which she/he has a local user-authentification configuration</para><para>2. The System returns all corresponding user-authentication systems </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The user sends a request to list all user-authentication systems defined in VISHNU</para><para>1b. The administrator sends a request to list all user-authentication system in which a specific user has a local user-authentification config</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U6 - Create a new local user authentication config</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U6 - Create a new local user authentication config</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user creates a new local user-authentication configuration for a given user on a given user-authentification system</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>The user has an account on VISHNU</para><para>The user has not a local user-authentication config on the given user-authentification system</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- Local user-authentication config is registered</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user provides the local user-authentication configuration information for a given user-authentication system (login on the local account on this user-authentication system) and the user-authentication system identifier</para><para>2. The System checks the user login (associated to the session key) and the user-authentication system identifier</para><para>3. The System creates the corresponding local user-authentication user configuration</para><para>4. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. An administrator provides the local user-authentication configuration information for a given user on a given authentication system</para><para>2a. The System checks the user login provided by the administrator and the authentication system identifier </para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Unknown user</para><para>2b. Invalid authentification system identifier</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U6.1 - Update a local user authentication config</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U6.1 - Update a local user authentication config</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user updates a local user-authentication configuration in  VISHNU (database)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has a VISHNU account</para><para>- The local user-authentication configuration is defined on VISHNU for the given user</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The local user-authentication configuration is updated</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user provides the identifier of the authentication system and information to be updated (login of the local account on this authentication system) </para><para>2. The System checks the local user-authentication configuration</para><para>3. The System updates the local user-authentication configuration information</para><para>4. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. An administrator provides the identifier of the authentication system and information to be updated (login of the local account on this authentication system)  for a given user</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Unknown user</para><para>2b. Invalid authentication system identifier</para><para>2c. Unknown local user-authentication config </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U6.2 - Delete a local user authentication config</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U6.2 - Delete a local user authentication config</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user deletes a local user-authentication configuration</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has a VISHNU account</para><para>- The local user-authentication configuration is defined on VISHNU for the given user </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The local user-authentication configuration is no longer in the system</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user provides the identifier of the authentication system</para><para>2. The System checks the local user-authentication configuration</para><para>3. The System deletes the local user-authentication configuration information</para><para>4. The System returns an acknowledgment to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. An administrator provides the identifier of the authentication system and the login of a specific user</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. Unknown user</para><para>2b. Invalid authentication system identifier</para><para>2c. Unknown local user-authentication config </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U6.3 - Display local user authentication configs</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U6.3 - Display local user authentication configs</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user displays her/his local user-authentication configs</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The user sends a request to list all of her/his local user-authentication configurations</para><para>2. The System returns all local user-authentication systems for a given user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. An administrator sends a request to list all local user-authentication configurations of a specific user</para><para>1b. An administrator sends a request to list all local user-authentication configurations of a specific user-authentication system</para><para>1c. An administrator sends a request to list all local user-authentication configurations defined in VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA1 - Create new user account</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA1 - Create new user account</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator creates a new user account in the System (database)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user does not have an account on VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The user account is created in an active state</para><para>- The account's password must be changed at the first connection</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides the new user's last name, first name, email address and specifies whether the user has standard or admin rights</para><para>2. The System creates the new user account and initializes the password with a randomly-generated string (temporary password)</para><para>3. The System sends an email to the user containing the temporary password and the user login</para><para>4. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>3a. Invalid email address</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>This use case defines behaviour(s) that is/are not defined in the project initial requirements.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA1.1 - Update user account</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA1.1 - Update user account</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator updates the user account (database)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has an account on VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The user account is updated</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides the user's information changes (firstname, lastname, email, privilege) </para><para>2. The System updates the user account information</para><para>3. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1.a Invalid login or login unknown</para><para>1.b The provided parameters are invalid</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>The user identifier is an information that cannot be modified due to integrity constraints.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA1.2 - Delete user account</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA1.2 - Delete user account</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator deletes a user account</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has an account on VISHNU</para><para>- There is no job or file transfer running for the user</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The user account is no longer in the System</para><para>- System does not contain any information related to the user</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides a user's login</para><para>2. The System deletes the user account along with all the information (configuration, history) related to it.</para><para>3. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid login (unknown or inactive)</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA1.3 - Lock user account</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA1.3 - Lock user account</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator locks a user account to remove access to the account without deleting all account information</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The user has an account on VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The user account is locked</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides a user's login</para><para>2. The System changes the status of the user's account to a status where the user cannot connect or send any request to VISHNU. The requests sent before this change and that are still running will not be cancelled.</para><para>3. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid login (unknown or inactive)</para><para>2a. User status is already set to locked</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA2 - Reset user password</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA2 - Reset user password</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator resets a user password</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The password of the user is temporary and must be changed at the first connection by the user</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides a user's login</para><para>2. The System resets the user's password using a randomly-generated string</para><para>3. The System sends an email to the user containing the new temporary password</para><para>4. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid login (unknown or inactive)</para><para>3a. Invalid email address</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>If the user has one or several active sessions when Admin requests the password reset then the sessions are not affected. Only new sessions will require the new password for authentification.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA3 - Save configuration</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA3 - Save configuration</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator saves the configuration of the system</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para> </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The configuration is saved on a file</para><para>- A log information is created</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator requests to save the configuration in a file</para><para>2. The System creates a configuration file containing: the list  of users, the list of local users configs, the list of machines according to the local users configs,  the list of local users authentication configs and the list of user-authentication systems according to the local users authentication configs</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. File creation problems</para><para>2b. VISHNU System crashed</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA4 - Restore configuration</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA4 - Restore configuration</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator restores a saved configuration</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- All users are disconnected from VISHNU</para><para>- The configuration file was saved using the &quot;save configuration&quot; feature.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The System is operational on all the machines that are both properly configured in the saved configuration and where the VISHNU processes are running.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator opens a session as the Root user</para><para>2. The administrator checks that there is no other user/admin connected to VISHNU</para><para>3. The administrator loads the configuration file</para><para>4. The System replaces the current configuration with the loaded configuration.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If the Root user already has an open session, the System cannot open a second session with the Root user</para><para>3a. If the configuration file cannot be loaded, the System provides an error message. The System configuration is reset to a basic configuration with only the Root user configured.</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>To avoid failure during this critical operation, the reasons to go for exception 3a should be reduced as much as possible. Therefore inconsistencies between the saved configuration and the real infrastructure will not be considered as blocking for this operation.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA5.1 - Display sessions</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA5.1 - Display sessions</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator displays all past and present sessions stored in the database.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request to list all sessions (active and/or closed) that have an open timestamp within an interval provided by the user (start and finish date)</para><para>2. The System returns the list of sessions that match the search criteria and provides detailed information about these sessions (user id, open and close timestamp, client machine id)</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA5.2 - Display users</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA5.2 - Display users</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator displays the description of all users registered in the database</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request to list all users</para><para>2. The System returns all users with the following information for each user: id, firstname, lasname, login, status, email and password state.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The administrator sends a request containing the login of a specific user to list information about him/her.</para><para>1b. The administrator sends a request containing the identifier of a specific user-authentication system to list all users of this user-authentication system.</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The login is unknown</para><para>1b. The user is not an administrator</para><para>1c. The user-authentication system is unknown</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA5.3 - Display local users configs</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA5.3 - Display local users configs</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator displays the local user configurations for all users registered in the database</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request to list all local users configurations</para><para>2. The System returns all the local users configs for all users </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The administrator sends a request containing the identifier of a machine for listing all local users configurations on a specific machine</para><para>1b. The administrator sends a request containing the login of one user for listing all local users configurations of a specific user</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a1. unknonwn machine</para><para>1b1. unknonwn login</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA6.1 Add a machine</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA6.1 Add a machine</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator registers a new machine in VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>A new machine is added in VISHNU System</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator adds a new machine on VISHNU by giving:</para><para>  - The machine name</para><para>  - The machine state (private or accessible to users)</para><para>  - The public IP adress</para><para>  - A structure describing the machine state</para><para>  - A structure describing the network</para><para>2. The machine is added on VISHNU and the System returns the machine id.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The machine name already exists</para><para>1b. A machine with the same public adress already exists</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA6.2 Remove a machine</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA6.2 Remove a machine</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator removes a machine from the list of active machines</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The machine is registered in the System and active</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The machine is inactive therefore cannot be used for any VISHNU request</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides the machine id</para><para>2. The System checks that there is no running command on the machine</para><para>3. The System set the status of the machine to inactive</para><para>4. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The machine id is unknown</para><para>2a. Some commands are currently running on the machine</para><para>3a. The machine is already in inactive state</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA6.3 Display machines</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA6.3 Display machines</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator displays the machines registered in the database</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request to list all machines in the database</para><para>2. The System returns all machines in the database </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The administrator sends a request containing the identifier of a machine to list a specific machine</para><para>1b. The administrator sends a request containing the login of a user to list the machine used by this user</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a1. The machine is unknown</para><para>1b1. The login is unknown</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA6.4 Update machines</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA6.4 Update machines</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator updates a machine description in the database</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The database has one more description for the machine or the existing one has been replaced</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request to add a machine description of a machine, giving the id of the machine, its description and the language the description is in.</para><para>2. The System updates the database adding the machine description</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>2.a The machine already has a description in this language, the description is replaced by the new one</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a1. The machine is unknown</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA7 - Configure default option value</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA7 - Configure default option value</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator configures the default value of an option</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The default value of the option is configured and is applied to all new user requests that do not specify the value of the option. Running commands are not affected by this change.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator sends a request for modifying the value of an option to the System</para><para>2. The System checks the option name and registers the new default value for the option</para><para>3. System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. VISHNU infrastructure is unreachable or unavailable</para><para>2a. Invalid option name</para><para>2b. Invalid option value</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA8 - Create a new user authentication system</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA8 - Create a new user authentication system</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator creates a new user-authentication system in  VISHNU (database)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>The user-authentication system has not been already defined in VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The user-authentication system is created</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides all the parameters required to connect to the user-authentication system: name, host address, connection login, connection password, type of authentication system.</para><para>2. The System creates the user-authentification system in the database and associates it to an identifier.</para><para>3. The System returns an acknowledgment to the administrator.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The user-authentication system already exists</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA8.1 - Update a user authentication system</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA8.1 - Update a user authentication system</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator updates a user-authentication system in  VISHNU (database)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>The user-authentication system is defined in VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The authentication system is updated </para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides the user-authentication system's information changes (host address, connection login, connection password, status, type of authentication system)</para><para>2. The system updates the user-authentication system's information</para><para>3. The System returns an acknowledgment to the</para><para>administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid user-authentification system identifier</para><para>1b. The provided parameters are invalid</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>UA8.2 - Delete a user authentication system</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>UA8.2 - Delete a user authentication system</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator deletes a user-authentication system</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>The user-authentication system is defined in VISHNU</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The user-authentication system is no longer in the system</para><para>- System does not contain any information related to the  corresponding authentication system such as local user-authentication configs associated</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The administrator provides the user authentification system identifier</para><para>2. The System deletes the user-authentification system along with all the information related to it.</para><para>3. The System returns an acknowledgment to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid user-authentification system identifier</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title>Data dictionary</title>
      <para><itemizedlist>
          <listitem>
            <para><emphasis role="bold">Command</emphasis>: Represents all user requests sent either using the command-line interface or one of the VISHNU APIs.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Configuration</emphasis>: The configuration contains all information about the users and machines registered in the database. It does not contain chronological information about the users or the infrastructure (logs, metrics values)</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Inactivity delay</emphasis>: The inactivity delay is the delay in seconds during which no commands are launched within one session.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Local user config</emphasis>: The local user configuration is an object that belongs to a user account and that contains information about the unix account of the user on a specific machine (login, ssh key path, home directory).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Local user-authentification config</emphasis>: The local user-authentication config corresponds to the mapping of an account on a user authentication system in VISHNU.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Manual closure</emphasis>: The Manual closure means that the user uses a command for closing a session.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Option</emphasis>: The option is a parameter of the user account that is not mandatory for user creation. A default value for each option is defined by the administrator. This features can be used by all VISHNU modules (not only UMS). This feature is used in particular to specify which technology is used for a set of VISHNU services (e.g. to use a specific transfer method for file transfers).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Password state</emphasis>: Records the current state of the password of a user: either 'temporary' if the password must be changed next time the user connects to the System, or 'valid' if the password is in a normal state.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Root user</emphasis>: Special user that is pre-configured in the VISHNU system and that has administrator privileges. This user cannot be deleted from the system.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Session</emphasis>: A session is the context in which VISHNU commands are executed (ex: job submission, file transfers). It is created following authentifcation of a user and lasts until it is closed either manually or automatically.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Session Key</emphasis>: The session key is a encrypted string generated by the System for a session. It is registered in an environment variable
in order to avoid systematic authentification</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Session closure policy</emphasis>: This is an option which represents the way to close the session. There are two possible values to this option: &quot;Close on timeout&quot; which means that the session will be closed after an inactivity delay, and &quot;Close on disconnect&quot; which means that the session will be closed when the user disconnects from the terminal used to connect to VISHNU.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Session identifier</emphasis>: The session identifier (or session id) is an identifier of a session easy to manipulate by a user compare to the session key</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">User account </emphasis>: The user account is an object that contains a VISHNU user information.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">User authentification system</emphasis>: A user-authentication system is an information system declared in VISHNU in order to extend the UMS database authentication. One example of such a user-authentication system would be an LDAP directory.
It is important to notice that a user authentication can be achieved using the UMS database only, a user-authentication system only, or a combination of the UMS database and a user-authentication systems (with support for different priorities).
</para>
          </listitem>
        </itemizedlist></para>
    </section>
  </chapter>
  <chapter annotations="TMS/specs/TMS.asta#UCDIAG+UCDESC+DICT(TMS Analyse/DATA_DICTIONARY)">
    <title>Use cases for Tasks Management Service (TMS)</title>
    <section>
      <title>Use case diagrams
</title>
      <section>
        <title>UC TMS Overview</title>
        <figure>
          <title>UC TMS Overview</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC TMS Overview.png" align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
    </section>
    <section>
      <title>Use case descriptions
</title>
      <section>
        <title>T1 - Asynchronous command on a machine</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T1 - Asynchronous command on a machine</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User starts an asynchronous command on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- User has an active open session</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The command is in active state until completed</para><para>- The system log has been updated and contains the request parameters</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User sends the request</para><para>2. The System checks that the session key is valid</para><para>3. If the request contains the machine id the System checks that machine id is valid and machine is available</para><para>4. If command parameters contain a file the System verifies that the file is available and readable</para><para>5. The System processes the request</para><para>6. The System returns information to the user</para><para>7. The System records request information (time, user, machine, request parameters) in the system log</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>5a. T1.1</para><para>5b. T1.2</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The TMS server is unavailable</para><para>   - The system returns an error message that informs the user.</para><para>2a. The session key is invalid</para><para>   - The system returns an error message that informs the user.</para><para>3a. The name of the given machine is unknown</para><para>    -The system returns an error message that informs the user.</para><para>4a. The path to a file parameter is invalid</para><para>   - The system returns an error message that informs user. </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>T1.2 Automatic Submit Job</para><para>T1.1 - Submit a job </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T1.1 - Submit a job </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T1.1 - Submit a job </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User submits a job on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>    </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The job is submitted on the specified machine</para><para>- The job state and id are recorded on the system's log</para><para>- The job id is sent to the user</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The System checks that request parameters contain:</para><para>  - job script path</para><para>  - job options</para><para>2. The TMS server on the given machine is contacted</para><para>3. The job is submitted by the TMS server to the batch scheduler</para><para>4. The id of the submitted job is returned to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid options or script</para><para>4a. The batch scheduler server is unavailable</para><para>4b. The batch scheduler server rejects the request</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T1 - Asynchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T1.2 Automatic Submit Job</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T1.2 Automatic Submit Job</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User asks to submit a job automatically on the best  machine (the used criterion is the minimum number of waiting jobs  or minimum running jobs or minimum total jobs)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>  - The machine id is equal to autom</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The job is submitted on the best machine (the used criterion is the minimum number of waiting jobs or minimum running jobs or minimum total jobs)</para><para>- The job state and id are recorded on the system's log</para><para>- The job id is sent to the user</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The System checks that request parameters contain:</para><para>  - job script path</para><para>  - job options</para><para>2. The TMS server on the best machine is contacted</para><para>3. The job is submitted by the TMS server to the batch scheduler</para><para>4. The id of the submitted job is returned to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. Invalid options or script</para><para>4a. The batch scheduler server is unavailable</para><para>4b. The batch scheduler server rejects the request</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T1 - Asynchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2 - Synchronous command on a machine</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User executes a synchronous command on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- User has an active open session</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- Request is in completed state</para><para>- The system log has been updated and contains the request parameters</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The User sends the request with parameters including session key and machine id</para><para>2. The System checks that the session key is valid</para><para>3. If the request contains the machine id the System checks that the machine id is valid and machine is available</para><para>4. If command parameters contain a file the System verifies that the file is available and readable</para><para>5. The System processes the request</para><para>6. The System returns information containing the results of the request</para><para>7. The System records request information (time, user, machine, request parameters) in the system log</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>5a. T2.1</para><para>5b. T2.2</para><para>5c. T2.3</para><para>5d. T2.4</para><para>5e. T2.5</para><para>5f.  T2.6</para><para>5g. T2.7</para><para>5h. T2.8</para><para>5i. TA1</para><para>5j. TA2</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The TMS server is unavailable</para><para>   - The system returns an error message that informs the user.</para><para>2a. The session key is not valid</para><para>   - The system returns an error message that informs the user.</para><para>3a. The name of the given machine is unknown</para><para>    -The system returns an error message that informs the user.</para><para>4a. The path to a file parameter is invalid</para><para>   - The system returns an error message that informs user. </para><para>   - The user revises the path</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>T2.1 - Get job information</para><para>T2.2 - Cancel a job</para><para>T2.3 - List job queues</para><para>T2.4 - List jobs</para><para>T2.5 - Get jobs progression</para><para>T2.6 - Get one job outputs </para><para>T2.7 - Get all completed jobs outputs </para><para>T2.8 List Jobs on all machines</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.1 - Get job information</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.1 - Get job information</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User gets information about a job on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para> 1. The Systems checks the job id </para><para> 2. The TMS server on the given machine is contacted</para><para> 3. The TMS server asks job information to the batch scheduler server</para><para> 4. The User receives job information</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The job id is invalid</para><para>3a. The batch scheduler server is unavailable</para><para>3b. The batch scheduler server rejects the request</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.2 - Cancel a job</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.2 - Cancel a job</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user cancels a job on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>    </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The job is canceled on the specified machine</para><para>- The job state and id are removed to the system's log</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The System checks the job id</para><para>2. If the User has no admin privilege, the System checks that the User is the submitter of the job</para><para>3. The System cancels the job</para><para>4. The System returns a confirmation to the User</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The job id is invalid</para><para>  - The System returns an error message</para><para>2a. The User is not the submitter of the job</para><para>  - The System returns an error message</para><para>3a. The batch scheduler server is unavailable</para><para>  - The System returns an error message</para><para>3b. The batch scheduler server rejects the request</para><para>  - The System returns an error message</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.3 - List job queues</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.3 - List job queues</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User lists all queues or classes of a specific batch scheduler </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para> 1. The User sends the request with parameters that include the machine id</para><para> 2. The System obtains queues or classes information from the batch scheduler server running on the machine identified by the machine id</para><para> 3. The System returns the list of all queues to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. The batch scheduler server is unavailable</para><para>2b. The batch scheduler server rejects the request</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.4 - List jobs</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.4 - List jobs</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User lists all jobs submitted on a given machine matching some search criteria</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>    </para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para> 1. The User sends the request containing the machine id and the following optional search criteria: job id, number of CPUs required for the job, date of submission (from/to), job submitter, status, priority, queue, outputPath and errorPath.</para><para> 2. The System obtains jobs information from the batch scheduler server (depends on the underlying batch scheduler software)</para><para> 3. The System returns jobs information that match the search criteria to the User</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. The batch scheduler server is unavailable</para><para>2b. The batch scheduler server rejects the request</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.5 - Get jobs progression</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.5 - Get jobs progression</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User gets jobs progression (execution percent) status on a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The User sends the request containing the machine id</para><para>2. The System computes the job progression for all jobs submitted by the User running on the machine (job progression = 100 * (current_time - run_time) / job_walltime )</para><para>3. The System sends the results to the User</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. The User provides a job id in the request (optional parameter)</para><para>2a. The System computes the job progression for the job corresponding to the job id</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2b. The TMS server is unavailable</para><para>    - The system returns an error message that informs the user.</para><para>2c. The provided job id is unknown on the machine</para><para>   - The system returns an error message that informs the user.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>This use case defines behaviour(s) that is/are not defined in the </para><para>project initial requirements.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.6 - Get one job outputs </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.6 - Get one job outputs </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>Output files of a given job are downloaded on the client host</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The job is removed from the Batch Scheduler's internal database.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The User sends the request containing the job id</para><para>2. The System checks the job status</para><para>3. The System downloads the job results if the job is completed</para><para>4. The System returns the path for each downloaded file</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. The TMS server is unavailable</para><para>2b. The batch scheduler is unavailable</para><para>2c. The job status is not 'completed'</para><para>     - The System returns a message that informs the user</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>This use case defines behaviour(s) that is/are not defined in the </para><para>project initial requirements.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.7 - Get all completed jobs outputs </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.7 - Get all completed jobs outputs </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>Output files of a user's completed jobs on a given machine are downloaded</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- All the jobs submitted by the User on the machine are completed</para><para>- All the jobs submitted by the User on the machine are removed from the Batch Scheduler's internal database.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The User sends the request containing the machine id</para><para>2. The System registers the request</para><para>3. The System checks the running jobs submitted by the User on the machine</para><para>4. The System sends the job outputs for all completed jobs to the client host</para><para>6. The User request is completed</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a The TMS server is unavailable</para><para>2b The underlying batch scheduler is unavailable</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
              <row>
                <entry><para>Notes</para></entry>
                <entry><para>This use case defines behaviour(s) that is/are not defined in the </para><para>project initial requirements.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>T2.8 List Jobs on all machines</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>T2.8 List Jobs on all machines</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>User lists all jobs submitted on all machines matching some search criteria</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>-The machine id is equal to all</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para> 1. The User sends the request containing  the following optional search criteria: job id, number of CPUs required for the job, date of submission (from/to), job submitter, status, priority, queue, outputPath and errorPath.</para><para> 2. The System obtains jobs information from the batch scheduler server (depends on the underlying batch scheduler software)</para><para> 3. The System returns jobs information that match the search criteria to the User</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2a. The batch scheduler server is unavailable</para><para>2b. The batch scheduler server rejects the request</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>T2 - Synchronous command on a machine</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>TA3 - Launch TMS Server</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>TA3 - Launch TMS Server</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator launches the VISHNU TMS server on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The Vishnu server software (TMS Module and dependencies) is installed on the machine</para><para>- The machine is configured in the Vishnu system database</para><para>- The batch scheduler processes are up and running on the same machine</para><para>- The network connection between the machine and the Vishnu database server is up and running</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The TMS server is up and running</para><para>- A server log has been created</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The Admin connects to the machine as vishnu user</para><para>2. The Admin updates the Vishnu configuration if necessary (database server hostname and credentials, SysferaDS configuration, Batch scheduler configuration)</para><para>3. The Admin launches the Vishnu TMS Server executable</para><para>4. The System checks the connections to its peers within the Vishnu platform</para><para>5. The System retrieves the list of active jobs (not completed jobs) that were launched on the same machine</para><para>6. The System checks that all the active jobs (from previous step) are still running on the batch scheduler, and eventually updates the job status (for ex. from waiting to running, or from running to finished)</para><para>7. The System returns a status message to the administrator</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>4a. A connection to a Vishnu peer is down. System returns an error message and stops</para><para>6a. The batch scheduler does not recognize some job ids. In this case the System updates the job status to completed.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>TA4 - Stop TMS Server</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>TA4 - Stop TMS Server</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator stops the VISHNU TMS server on a given machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The TMS Server is up and running on the given machine</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The TMS Server is down</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. The Admin sends a request to stop the TMS Server and provides the machine id</para><para>2. The System updates the status of all active user requests (non-completed jobs)</para><para>3. The System stops all internal processes on the machine</para><para>4. The System returns an information message to the Admin</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title>Data dictionary</title>
      <para><itemizedlist>
          <listitem>
            <para><emphasis role="bold">Batch Scheduler</emphasis>: A batch scheduler is  a distributed resource manager that enables to allocate at best  the resources to the jobs on a machine according to user needs (the needs are specified by the user by batch directives (batch options) in file or command line).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Job</emphasis>: A job is a sequence of instructions (included batch scheduler directives) written to be launched  by a specified batch scheduler.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Job id</emphasis>: A job id allows to identifie the job in the batch scheduler system.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Job path</emphasis>: A jobPath is the path to the file (script) containing the instructions (batch directives or job characteristics, job execution command) of the job.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Job state</emphasis>: A job state allows to know the progression of the job. It may  have the following state : RUNNING, WAITING, COMPLETED, QUEUED, CANCELED, FAILED</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Job walltime</emphasis>: The maximum duration of a job as defined in the job submission parameters</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Queue or Class</emphasis>:  A queue or class associates the resource limits (CPU wallclock time, CPU memory) and execution priorities of the jobs.</para>
          </listitem>
        </itemizedlist></para>
    </section>
  </chapter>
  <chapter annotations="IMS/specs/IMS.asta#UCDIAG+UCDESC+DICT(IMS Analyse/DATA_DICTIONARY)">
    <title>Use cases for Information Management Service (IMS)</title>
    <section>
      <title>Use case diagrams
</title>
      <section>
        <title>UC IMS Global functionalities</title>
        <para>Global use case presenting all the IMS use case</para>
        <figure>
          <title>UC IMS Global functionalities</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC IMS Global functionalities.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC IMS Consult</title>
        <para>User consult use case</para>
        <figure>
          <title>UC IMS Consult</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC IMS Consult.png" align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC IMS Replay</title>
        <para>A user can replay its old commands of a session</para>
        <figure>
          <title>UC IMS Replay</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC IMS Replay.png" align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC IMS Platform management</title>
        <para>All the use case of the administrator concerning the platform management</para>
        <figure>
          <title>UC IMS Platform management</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC IMS Platform management.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC IMS Stop Restart</title>
        <para>The administrator use cases concerning the stop and restart of the platform</para>
        <figure>
          <title>UC IMS Stop Restart</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC IMS Stop_Restart.png" align="center"
                  scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
    </section>
    <section>
      <title>Use case descriptions
</title>
      <section>
        <title>I1. Get the update frequency</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>I1. Get the update frequency</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user gets how often the IMS database tables are updated</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The user calls the function to know how often the IMS database tables are automatically updated</para><para>2) The System returns the value in second</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>2 -> There is a problem with the database, the system returns a DATABASE_ERROR</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>I2 Get metric data</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>I2 Get metric data</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user gets data concerning the evolution of a metrics on a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The user calls to get the metrics data on a machine identified by a machine id, for a metric type, from start time up to end time. The metrics are within {number of cpu, percentage of cpu used, total diskSpace, free diskSpace, total RAM, free RAM}</para><para>2) The System returns the results by groups (metric,value, time).</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The machine id is invalid, an INVALID_PARAMETER error is returned</para><para>2 -> There is a problem with the database, the system returns a DATABASE_ERROR</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>I3. Export and replay commands</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>I3. Export and replay commands</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user exports and replays a sequence of commands made during a session.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>All the System commands submitted during a session have been re-executed keeping the same order they had when they were originally launched.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1a) The user calls to export the history, in shell format, of a session identified by an id.</para><para>2a) The System provides a shell script containing all the commands of the session with the same parameters as provided initially by the user (including file paths, numbers, strings, options)</para><para>3a) The user executes the shell script in a shell</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The session id is invalid, an INVALID_PARAMETER exception is raised.</para><para>3 -> A command in the execution fails, the error of the command is returned</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>I4. Get data on the infrastructure</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>I4. Get data on the infrastructure</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user gets current System information about the machines</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The user calls to get a current data about a machine identified by an ID. The data is within {use of cpu, number of cpu, total diskSpace, free diskSpace, total RAM, free RAM}.</para><para>2) The System returns the value of the data. In the use of cpu case, the value is in percentage.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>The machine id is invalid, an INVALID_PARAMETER exception is raised</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>I5. Get system info</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>I5. Get system info</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>To get information on the system</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The user calls to get the information about a machine given the id of the machine</para><para>2) The System gets the technical description of the machine (memory max, ram rax) from the database</para><para>3) The System returns these data to the user</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1b) The machine id is invalid: an INVALID_PARAMETER error is returned</para><para>2b) The database is unavailable, a DATABASE_ERROR is returned</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>U1.3 Execute synchronous request</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA1. Get the running processes</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA1. Get the running processes</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The admin gets the list of the running Vishnu processes on a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The admin calls to get the list of the processes on a machine referenced by a machine id</para><para>2) The System returns a list of Vishnu processes</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> machineId is invalid, an INVALID_PARAMETER is return.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA2. Define a system load threshold</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA2. Define a system load threshold</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator defines a system load threshold for a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The system load threshold is added to the System database</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1a) The administrator calls to define the limit size of the diskSpace to use with a machine id, a threshold value and an admin id (admin responsible for the threshold)</para><para>2a) The System updates the database</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1b) The administrator calls to define the limit of RAM available to he user with a machine id, a threshold value and an admin id (admin responsible for the threshold)</para><para>2b) The System updates the database</para><para>------------------------</para><para>1c) The administrator calls to define the use of CPU threshold on a machine with a machine id, a treshold value and an admin id (admin responsible for the threshold)</para><para>2c) The System updates the database</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1* -> The admin ID is invalid, the database is not updated and an INVALID_PARAMETER error is returned</para><para>2* -> The modification of the database fails, a DATABASE_ERROR is returned.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA2.1 Get a system load threshold</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA2.1 Get a system load threshold</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The admin wants to get the thresholds on a machine</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The admin calls to get the defined limit on a machine identified by an id. These thresholds are within {free diskSpace,  free RAM, percentage of CPU used}</para><para>2) The System returns the value.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The machine id is invalid, the user gets an INVALID_PARAMETER error returned</para><para>2 -> There is a problem with the database request, a DATABASE_ERROR is returned</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA3. Define the identifiers</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA3. Define the identifiers</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator defines the format of the automatic identifiers for the System objects.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>A new format will be used to create the new identifiers</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The administrator has a list of variables to define the identifiers shape. He has a method by kind of object (an object is either a user or a machine or a task or a file transfer).</para><para>Available variables are :</para><para>  YEAR: the last two digits, (e.g. 10 for 2010)</para><para>  MONTH: Numerical value of the month (from 1 to 12)</para><para>  DAY: Day number, from 1 to 31</para><para>  TYPE: The object kind</para><para>  SITE: The place for machine/users</para><para>  NAME: Username or machine name</para><para>  CPT: A counter automatically increased (each kind of object has its counter).</para><para>2) He calls the function to redefine the format with some of the previous parameters in a string. A variable must be preceded by a '$' symbol. For example, &quot;$TYPE$DAY$MONTH$YEAR$CPT&quot;</para><para>3) The System database is updated, the System does not check if the given format creates unique identifiers. If the same identifier is created, it will corrupt the database (the key will not be unique)</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>2 -> An invalid variable is given, an INVALID_PARAMETER is returned and the old format is still used</para><para>3 -> The update fails, a DATABASE_ERROR is returned</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA4.1 Hard load shedding </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA4.1 Hard load shedding </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>Abruptly stops the processes running on a machine (the waiting actions are cancelled and the running ones are stopped). The processes cannot be automatically restarted.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>Processes are running on the System</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The whole machine is flushed and no job is running on it</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The admin launches the hard load shedding command on a machine identified by an id.</para><para>2) The System flushes all the waiting action.</para><para>3) The System stops all the running processes on this machine. These processes cannot be restarted.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The id of the machine is invalid, an INVALID_PARAMETER is returned</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA4.2 Soft load shedding</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA4.2 Soft load shedding</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The admin purges all the waiting actions and stops the running ones. The stopped actions can be restarted later.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>Processes are running on the VISHNU system</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>No jobs are waiting to run or are running</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The admin calls the soft load shedding command on a machine identified by an id.</para><para>2) The System flushes the waiting jobs and stops the running ones. They are stored and can be restarted later </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The machine id is invalid, an INVALID_PARAMETER error is returned</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA5. Set system info</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA5. Set system info</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>Updates the data in the system concerning a machine (e.g., if the machine has some added memory diskSpace, some added memory)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The description of the machine in the database is updated</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) An admin calls to update the data concerning a machine identified by an id giving a new diskSpace size or a new memory size.</para><para>2) The System updates the database</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The machine id is invalid, an INVALID_PARAMETER error is returned</para><para>2 -> There is an error with the database, a DATABASE_ERROR error is returned</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA6. Set the update frequency</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA6. Set the update frequency</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The administrator sets the update frequency</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The System updates the IMS database at the new frequency</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The administrator calls to set the update frequency in seconds</para><para>2) The System updates its database update frequency value</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>The database is is not reachable. A DATABASE_ERROR is returned.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA7. Notification of limit overflow</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA7. Notification of limit overflow</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The admin is notified a limit overflow</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>A machine on the System has a limit overflow</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) The System gets the email adress of the admin to contact, using a config file to send the e-mail</para><para>2) The System sends a mail to the admin concerning the overflow. The mail contains the name of the machine and the concerned threshold.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1 -> The system fails getting the admin e-mail, a DATABASE_ERROR error is returned</para><para>2 -> Sending the mail fails, a MAIL_ERROR error is returned.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA8. Restart the System</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA8. Restart the System</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>Restart all the servers, agents, and daemons of the System. The running actions are restarted.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>The System platform needs to be restarted</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The System is running with the same servers, agents and daemons as defined in the deployement file. The interrupted actions that can be restarted are restarted from the beginning.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) An admin detects a problem</para><para>2) An admin calls to restart the System with a deployement file</para><para>3) The System saves the current actions</para><para>4) The System restarts components following the deployement file guidance and restarts the stopped actions from the beginning</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>4-> Fail to relaunch a component (server, daemon, agent), an UNREACHABLE_COMPONENT error is returned.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>IA9. Restart</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>IA9. Restart</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>A component is restarted</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>A component of the platform is down</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The component is up and running again</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1) An admin detects that a component has stopped for unknown reasons (a component = server, daemon, agent)</para><para>2) The admin calls the System to relaunch the component with its name, the machine to relaunch it and the configuration file to use</para><para>3) The System relauches the component</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>3-> Fail to restart the component, an UNREACHABLE_COMPONENT error is returned.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>U1.3 Execute synchronous request</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>U1.3 Execute synchronous request</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>The user submits a synchronous request to the System. c.f. the UMS use case description (U1.3)</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User, Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>I5. Get system info</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title>Data dictionary</title>
      <para><itemizedlist>
          <listitem>
            <para><emphasis role="bold">Actions</emphasis>: A generic naming to design both jobs and file transfers.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Agent</emphasis>: A component of the VISHNU hierarchy.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">CPU</emphasis>: Central Processing Unit.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Daemon</emphasis>: Daemon running on the machines.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">DiskSpace</emphasis>: File system memory (not volatile).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">IMS</emphasis>: Information Management System.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Infrastructure</emphasis>: Contains all the machines directly under the System supervision.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Live measure</emphasis>: Measure regularly updated.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Memory</emphasis>: RAM (Random Access Memory, volatile).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Objects</emphasis>: An object is an abstraction of what can be manipulated by the System (user, machine, task, file transfer).</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Process</emphasis>: Process of the system.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">SeD</emphasis>: A component of the VISHNU hierarchy executing jobs for the clients.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Task</emphasis>: Job submited via the TMS module.</para>
          </listitem>
        </itemizedlist></para>
    </section>
  </chapter>
  <chapter annotations="FMS/specs/FMS.asta#UCDIAG+UCDESC+DICT(FMS Analyse/DATA_DICTIONARY)">
    <title>Use cases for File Management Service (FMS)</title>
    <section>
      <title>Use case diagrams
</title>
      <section>
        <title>UC FMS simple command use cases</title>
        <figure>
          <title>UC FMS simple command use cases</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC FMS simple command use cases.png"
                  align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
      <section>
        <title>UC FMS transfer command use cases</title>
        <figure>
          <title>UC FMS transfer command use cases</title>
          <mediaobject>
            <imageobject>
              <imagedata fileref="images/png/UC FMS transfer command use cases.png"
                  align="center" scale="40"/>
            </imageobject>
          </mediaobject>
        </figure>
      </section>
    </section>
    <section>
      <title>Use case descriptions
</title>
      <section>
        <title>F1- Execute simple command on a remote host</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to execute a command on a remote host. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- User has an active open session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The command is performed succesfully  and the potential results are sent back to User.</para><para>- The log System  has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User enters the command by specifying the parameters, the session key  and the involved host id. </para><para>2. The System checks that the session key is valid.</para><para>3. The System checks that the host id is valid and  the machine is available.  </para><para>4. The System performs the command and send back the results to User .</para><para>5. The System records request information (time, User, machine, request parameters).</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. The given parameters are invalid for this command.</para><para>2a. The specified session key is invalid. </para><para>3a.  The specified host is unknown. </para><para>3b. The specified host is unavailable.</para><para>4a. The command fails and an error message is displayed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F1.CH2- Change group owner of files</para><para>F1.CH1- Change access rights of files</para><para>F1.CR2- Create new directories</para><para>F1.DE2-  Delete directories</para><para>F1.DE1- Delete files</para><para>F1.DI3- Display contents of files</para><para>F1.DI1- Display Head of files</para><para>F1.DI4- Display contents of directories</para><para>F1.DI2- Display tail of files</para><para>F1.DI5- Get information about remote files</para><para>F1.CR1- Create new files</para><para>F1.DE1- Delete files</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.CH1- Change access rights of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.CH1- Change access rights of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to change access rights of a given remote file. It is the equivalent of the &quot;chmod&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The new access permissions of the specified file is set.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the change access rights command with the file, the new access rights to set, the involved host.</para><para>2. The System sets the new access rights to the file. </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, an error message  is returned.</para><para>1b. If a file is unknown, an error message is displayed on the standard output of the client System.</para><para>1c. If User does not have execute permission in a parent    directory or if User is not the file owner or Admin,  a permission denied message is displayed on the standard output of the client System..</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.CH2- Change group owner of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.CH2- Change group owner of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to change the group owner of  a named remote file.  It is the equivalent of the &quot;chgrp&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The new group owner of the specified file is set.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the change group owner command with the file, the new group to set, the involved host.</para><para>2. The  System sets the new group owner to the file. </para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If a file is unknown, a message is printed out on the standard output of the client System.</para><para>1c. If User does not have execute permission in a parent    directory or if User is not the file owner or Admin, a permission denied message is displayed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.CR1- Create new files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.CR1- Create new files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to  create  new file in a given host. It is the equivalent of the &quot;touch&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The new file is created in the specified host and is owned by User and his group.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the create file command with the path of file to create, the involved host.</para><para>2. The System creates the new file with the specified path.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If a specified file already exists, a message is printed out on the standard output of the client System.</para><para>1c. If User does not  have execute or write permission in a parent directory, a message is also printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.CR2- Create new directories</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.CR2- Create new directories</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to  create a new directory in a named host. It is the equivalent of the &quot;mkdir&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The new directory is created in the specified host and is owned by User and his group.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the create directory command with the path of directory to create, the involved host.</para><para>2. The System creates the new directory with the specified path.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the a specified directory already exists, a message is printed out on the standard output of the client System.</para><para>1c. If User does not have read or write permission in a parent directory, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.DE1- Delete files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.DE1- Delete files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to remove a given remote file. It is the equivalent of the &quot;rm&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The specified file is removed from the host.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the delete file command with the path of the file to delete, the involved host.</para><para>2. The System deletes the specified file from the host.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the specified path is not a file or if the file is unknown, a message is  printed out on the standard output of the client System.</para><para>1c. If User does not  have execute or write permission in the parent directory, a message is also printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.DE2-  Delete directories</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.DE2-  Delete directories</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to remove a given directory (and its content) located on a remote host. It is the equivalent of the &quot;rm -r&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The specified directory is removed from the given host.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the delete directory command with the path of directory to delete, the involved host.</para><para>2. The System deletes the specified directory from the host.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the specified path is not a directory or a directory is unknown, a message is printed on the standard output of the client System.</para><para>1c. If User does not  have execute or  write permission in the parent directory,or if the specified directory contains a file which can not be removed, a permission denied message is also printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.DI1- Display Head of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.DI1- Display Head of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This command allows User to print the first few  lines of a given remote file.  It is the equivalent of the &quot;head&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The first lines of the specified file are printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the display command with the path of the file</para><para> to display, the involved host.</para><para>2. The System displays the first lines of the specified file on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the file is unknown, a message is printed out on the standard output of the client System.</para><para>1c. If User does not  have execute permission write in the parent directory or read permission on the file, a message is also printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.DI2- Display tail of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.DI2- Display tail of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This command allows User to print the last few  lines of a named  remote file. It is the equivalent of the &quot;tail&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The last lines of the specified file are printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the display command with the path of the file to display, the involved host.</para><para>2. The System displays the last lines of the specified file on the  standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the file is unknown, a message is printed on the standard output of the client System.</para><para>1.c  If User does not  have execute permission in the parent directory or read permission on the file, a permission denied message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.DI3- Display contents of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.DI3- Display contents of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to print the content of a given file</para><para>located on a remote host.  It is the equivalent of the &quot;cat&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The named file is printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the display command with the path of the file to display, the involved host.</para><para>2. The  System prints the specified file on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the file is unknown, a message is printed on the standard output of the client System.</para><para>1c. If User does not have execute  permission in the parent directory or read permission on the file, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.DI4- Display contents of directories</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.DI4- Display contents of directories</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to list the files contained in a given directory located on a remote host. It is the equivalent of the &quot;ls&quot; bash command. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>The  content of the specified directory is printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the display command with the path of the directory to list, the involved host.</para><para>2. The System displays the content of the specified directory on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry><para>1a. If no directory is given , the content of current directory is displayed on the standard output of the client System.</para><para>1b.If a file is given, some information about the file (like the access permissions, the owner, the size, etc...) is printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If the directory is unknown, a message is printed out on the standard output of the client System.</para><para>1b. If User does not  have execute or read permission in the parent directory, a message is also printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F1.DI5- Get information about remote files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F1.DI5- Get information about remote files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to get information  about a named  remote file (the path, the owner, the group, the access permissions, the owner numeric identifier, the group numeric identifier, the size, the last access time, the last modification time, the last inode change time ). It is equivalent to  &quot;stat&quot; bash command.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>Some informations about the given file are printed out on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the get information  command with the file,  the involved host.</para><para>2. The System prints out the information about the specified file on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the file is unknown, a message is printed out on the standard output of the client System.</para><para>1.c  If User does not  have execute permission in the parent directory, a permission denied message is also printed out on the standard output of the client.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F1- Execute simple command on a remote host</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.CA1- Cancel  files tranfers</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.CA1- Cancel  files tranfers</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to cancel all asynchronous file transfers he submitted. He can optionally specify either</para><para>- a file transfer identifier to cancel  that file transfer.</para><para>- or a machine identifier to cancel  all file transfers he submitted from that machine.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- All file transfers submitted by User are cancelled. If a search criteria is provided, only file transfers matching that criteria are cancelled.</para><para>- The log System has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits a cancel file transfer command by specifying the session key. with optionally a search criteria (either a file transfer id,  or a machine id).</para><para>2. The System cancels all file transfers he submitted. If a search criteria is provided, the System cancels only the file transfers matching that criteria.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key  is invalid, a message is printed out on the standard output of the client System.</para><para>1c. If a tranfer id is invalid or if User did not submit a named file tranfer,a message is printed out on the standard output of the client System.</para><para>1d.  If the specified host id is invalid or if no file tranfer was submitted by User from that host, a message is printed out on the standard output of the client System.</para><para>1e. If the command fails, a message is printed on the standard output of the client System. </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.CA2- Cancel all users file transfers</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.CA2- Cancel all users file transfers</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows Admin to cancel all  current asynchronous file transfers submitted. He can  an optional search criteria among : </para><para>- a host identifier to cancel  all file transfers submitted from that host </para><para>- or an user identifier to cancel  all file transfers submitted by that user.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin, Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>Admin has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- All file transfers submitted are cancelled. If a search criteria is provided, only the file transfers matching that criteria are cancelled.</para><para>- The log System has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. Admin submits  the cancel file transfer command by specifying a session key, with optionally a search criteria (either a host id, or a user id).</para><para>2. The System cancels all  file transfers submitted. If a search criteria is provided, The System cancels only the file transfer matching that criteria.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b.  If the specified session key  is invalid , a message is printed out on the standard output of the client System.</para><para>1c.  If the specified host id is invalid or there is no file tranfer submitted from that host, a message is printed out on the standard output of the client System.</para><para>1d.  If the specified user id is invalid or there is no file tranfer submitted by that user, a message is printed out on the standard output of the client System.</para><para>1e. If the command fails, a message is printed on the standard output of the client System. </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.CP1- Execute a synchronous copy of files </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.CP1- Execute a synchronous copy of files </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to copy a file (or directory)  between two hosts.</para><para> It is the equivalent of the &quot;cp&quot; bash command. The four cases of transfer are covered by this use case :</para><para>- inside the same host which can be local or remote,</para><para>- from local host to remote host, </para><para>- from remote host to local host,</para><para>- from remote host to another remote host.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has an open active VISHNU session on the client.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The file transfer is fully  accomplished and a copy of the source file (or directory) is now on the destination host.</para><para>- The log System  has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the file tranfer command with the path of the source file (or directory) to copy (including the host), the path of destination (including the host) and the session key.</para><para>2.The System copies the given source file (or directory) to the specified destination.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed on the standard output of the client System.</para><para>1c. If the source file (or directory) or a host is unknown, a message is printed on the standard output of the client System. </para><para>1d. If the destination path is invalid, a message is printed on standard output of the client System.</para><para>1e. If the source path is a directory and a destination path is a file, a message is printed out on the standard output of the client System.</para><para>1f. If the source path is the same than the destination path,</para><para>a message is returned.</para><para>1g. If</para><para>- User does not  have execute permission in the source or destination file parent,</para><para>- or he does not have read permission on the source file,</para><para>- or  he does not have write permission in the destination parent directory,</para><para>a message is printed out on the standard output of the client System.</para><para>2a. If  a host is unreachable during a file transfer, the file transfer is cancelled and will restart when the connexion will be restored. </para><para>2b. If the transfer file fails, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F2.MV1- Execute a synchronous move of files</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.CP2- Execute an asynchronous copy of files </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.CP2- Execute an asynchronous copy of files </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to copy files (or directory)  between two hosts  and submit another command without waiting the end of file transfer. </para><para>The four cases of transfer are covered this use case :</para><para>- inside the same host which can be local or remote</para><para>- from local host to remote host</para><para>- from remote host to local host</para><para>- from remote host to another remote host. </para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has an active open session on the client</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The file transfer is fully  accomplished and a copy of the source file (or directory) is now on the destination host.</para><para>- The log System  has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the file tranfer command with the path of the source file (or directory) to copy (including the host), the path of destination (including the host) and the session key.</para><para>2. The System starts the transfer of the given source file to the specified destination and sends back to User a transfer id.</para><para>3. When the transfer file ends, the log System is updated.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed on the standard output of the client System.</para><para>1c. If the source file (or directory)  or a host is unknown , a message is printed on the standard output of the client System. </para><para>1d. If the destination path is invalid, a message is printed on standard output of the client System.</para><para>1e. If the source path is a directory and the destination path is a file, a message is printed out on the standard output of the client System.</para><para>1f. If the source path is the same than the destination path,</para><para>a message is print out on the standard output of the client System. </para><para>1g. If</para><para>- User does not  have execute permission in the source or destination file parent,</para><para>- or he does not have read permission on the source file,</para><para>- or  he does not have write permission in the destination parent directory,</para><para>a message is printed out on the standard output of the client System.</para><para>2a. If  a host is unreachable during a file transfer, the file transfer is cancelled and will restart when the connexion will be restored. </para><para>2b. If the transfer file fails, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F2.MV2- Execute an asynchronous move of files</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.LS1- List file transfer status</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.LS1- List file transfer status</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to list all  file transfer status he submitted. He can optionally specify either</para><para>- a file transfer identifier to get the status of that file transfer.</para><para>- or a machine identifier to get the status of all file transfer he submitted from that machine.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User, User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The status of all file transfers User submitted are displayed on the standard output of client System. If a search criteria is provided, only the status of the file transfer matching that criteria are listed.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits a list file transfer status command by specifying a session key, with optionally a search criteria (either a file transfer id,  or a machine id).</para><para>2. The System displays  the status of all file transfers User submitted. If a search criteria is provided, the System displays only the status of the  file transfers matching that criteria.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b.  If the specified session key  is invalid , a message is printed out on the standard output of the client System.</para><para>1c.  If the specified machine id is invalid , a message is printed out on the standard output of the client System.</para><para>1d.  If the specified file transfer id is invalid , a message is printed out on the standard output of the client System.</para><para>1d. If no transfer was submitted by User from the specified machine or if the command fails, a message is printed out on the standard output of the client System. </para></entry>
              </row>
              <row>
                <entry><para>Extensions</para></entry>
                <entry><para>F2.LS2- List all users file transfer status</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.LS2- List all users file transfer status</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.LS2- List all users file transfer status</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows Admin to list file transfer status. He can specify an optional search criteria among : </para><para>- a host identifier to list the status of all file transfers submitted from that host </para><para>- or an user identifier to list the status of all file transfers submitted by that user.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin, Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>Admin has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The status of all file transfers submitted  host are displayed on the standard output. If a search criteria is provided, only the file transfer matching that criteria are listed.</para><para>- The log System has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. Admin submits a list file transfer status command a session key, with optionally a search criteria (either a host id, or a user id).</para><para>2. The System displays the status of all  file transfers on the standard output of client System. If a search criteria is provided, The System displays only the status of the file transfers matching that criteria.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b.  If the specified session key  is invalid , a message is printed out on the standard output of the client System.</para><para>1c.  If the specified machine id is invalid , a message is printed out on the standard output of the client System.</para><para>1c.  If the specified user id is invalid , a message is printed out on the standard output of the client System.</para><para>1d. If no transfer was submitted  from the specified machine, a message is printed out on the standard output of the client System.</para><para>1e. If no transfer was submitted by the specified user or if the command fails, a message is printed out on the standard output of the client System.  </para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F2.LS1- List file transfer status</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.LT1- List all file transfer  </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.LT1- List all file transfer  </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to list all file transfers he submitted. User can optionally  specify either</para><para>- a machine id to list all file transfers he submitted  from that machine</para><para>- or a status to list all file transfers matching that status.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- All  file transfers User submitted are listed on the standard output of client System. If a search criteria is provided, only the file transfers matching that criteria are listed.</para><para>- The log System has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits a list file transfer command by specifying a session key with optionally a search criteria (either a host id,  or a specific status).</para><para>2. The System displays all  file transfers User submitted on the standard output of client System. If a search criteria is provided, the System displays only the file transfer matching that criteria.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b.  If the specified session key  is invalid , a message is printed out on the standard output of the client System.</para><para>1c.  If the specified machine id is invalid , a message is printed out on the standard output of the client System.</para><para>1d.  If the specified status is invalid , a message is printed out on the standard output of the client System.</para><para>1e. If no transfer was submitted  from the specified machine, a message is printed out on the standard output of the client System.</para><para>1f. If the command fails, a message is printed out on the standard output of the client System. t System. </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.LT2- List all users file transfer  </title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.LT2- List all users file transfer  </para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows Admin to list all  file transfers. Admin can specify an optional search criteria among:</para><para>- host identifier: to list all file transfers submitted from that host</para><para>- user identifier: to list all file transfers submitted by that user</para><para>- status: to list all file transfer matching that status.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin, Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- All  file transfers are listed on the standard output of client System. If a search criteria is provided, only the file transfers matching that criteria are listed.</para><para>- The log System has been updated and contains request parameters. </para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. Admin submits a list file transfer  command by  specifying a session key with optionally a search criteria (either a host id, or a user id, or a specific status).</para><para>2. The System displays all  file transfers on the standard output of client System. If a search criteria is provided, The System displays only the file transfer matching that criteria.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b.  If the specified session key  is invalid , a message is printed out on the standard output of the client System.</para><para>1c.  If the specified machine id is invalid , a message is printed out on the standard output of the client System.</para><para>1d.  If the specified user id is invalid , a message is printed out on the standard output of the client System.</para><para>1d.  If the specified status is invalid , a message is printed out on the standard output of the client System.</para><para>1e. If no transfer was submitted  from the specified machine, or by the specified user, a message is printed out on the standard output of the client System.</para><para>1e. If the command fails, a message is printed out on the standard output of the client System. t System. </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.MV1- Execute a synchronous move of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.MV1- Execute a synchronous move of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to copy a file  (directory) from a host to another host. Furthermore, the source file  (directory) is removed from the source host.</para><para>The four cases of transfer are covered this use case :</para><para>- inside the same host which can be local or remote</para><para>- from local host to remote host</para><para>- from remote host to local host</para><para>- and from remote host to another remote host.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The file transfer is fully accomplished.</para><para>- A copy of the source file (directory) is now on the destination host,</para><para>- and the source file (directory) is removed from the source host.</para><para>- The log System  has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the tranfer file  command with the path of the source files (or directoty) to copy (including the host), the path of destination (including the host) and the session key.</para><para>2. The System makes a copy of  the given source file (directory) to the specified destination and removes the source file (directory) from the source host.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed on the standard output of the client System.</para><para>1c. If the source file (or directory) or the host is unknown, a message is printed on the standard output of the client System. </para><para>1d. If the destination path is invalid, a message is printed on standard output of the client System.</para><para>1e. If the source path is a directory and the destination path is a file, a message is printed out on the standard output of the client System.</para><para>1f. If</para><para>- User does not  have execute permission in the source or destination file parent,</para><para>- or he does not have read permission on the source file,</para><para>- or  he does not have write permission in the destination parent directory,</para><para>a message is printed out on the standard output of the client System.</para><para>2a. If  a host is unreachable during a file transfer, the file transfer is cancelled and will restart when the connexion will be restored. </para><para>2b. If the transfer file fails, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F2.CP1- Execute a synchronous copy of files </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F2.MV2- Execute an asynchronous move of files</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F2.MV2- Execute an asynchronous move of files</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows User to move file (or directory) from host to another host and submit another command without waiting the end of file transfer. Furthermore, the source file (or directory) is removed from the source host.</para><para>The four cases of transfer are covered this use case :</para><para>- inside the same host which can be local or remote</para><para>- from local host to remote host</para><para>- from remote host to local host</para><para>- and from remote host to another remote host.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>User</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>User has at least an open active session.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The file transfer is in completed status.</para><para>- The source file (or directory) is removed from the source hosts.</para><para>- The System log has been updated and contains request parameters.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1. User submits the file tranfer command with the path of the source file (or directory) to copy (including the host), the path of destination (including the host) and the session key.</para><para>2. The System starts the transfer of the given source file (or directory) to the specified destination and sends back to User a transfer id.</para><para>3. At the end of a transfer, the log System is updated.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>1a. If there are missing parameters, a message that contains the way to use the command, is displayed on the standard output of the client System.</para><para>1b. If the given session key is invalid, a message is printed on the standard output of the client System.</para><para>1c. If the source file (or directory) or the host is unknown , a message is printed on the standard output of the client System.</para><para> </para><para>1d. If the destination path is invalid, a message is printed on standard output of the client System.</para><para>1e. If the source path is a directory and a destination path is a file, a message is printed out on the standard output of the client System.</para><para> </para><para>1f. If</para><para>- User does not  have execute permission in the source or destination file parent,</para><para>- or he does not have read permission on the source file,</para><para>- or  he does not have write permission in the destination parent directory,</para><para>a message is printed out on the standard output of the client System.</para><para>2a. If  a host is unreachable during a file transfer, the file transfer is cancelled and will restart when the connexion will be restored. </para><para>2b. If the transfer file fails, a message is also printed on the standard output of the client System.</para></entry>
              </row>
              <row>
                <entry><para>Extension of</para></entry>
                <entry><para>F2.CP2- Execute an asynchronous copy of files </para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F3. Launch FMS server</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F3. Launch FMS server</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows Admin to launch the VISHNU FMS server on a given host.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The VISHNU server software (FMS Module and dependencies) is installed on the host</para><para>- The host is configured in the VISHNU System database</para><para>- The network connection between the host and the VISHNU database server is up and running.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The FMS server is up and running.</para><para>- A server log has been created.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1.  Admin logs in the host as VISHNU user</para><para>2.  Admin updates the VISHNU configuration if necessary (database server hostname and credentials, SysferaDS configuration )</para><para>3.  Admin launches the VISHNU FMS Server executable</para><para>4. The System checks the connections to its peers within the VISHNU platform.</para><para>5. The System retrieves the list of active file transfer (not completed file transfer) that were launched from or to the same host.</para><para>6. The System checks that all the active file transfer (from previous step) are still running, and eventually updates the file transfer status (for ex. from failed to in progress).</para><para>7. The System returns a status message to Admin.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry><para>4a. A connection to a VISHNU peer is down. System returns an error message and stops.</para><para>6a. If a source file or destination is unreachable. In this case the System updates the file transfer status to failed.</para></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
      <section>
        <title>F4. Stop FMS server</title>
        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><para>Title</para></entry>
                <entry><para>F4. Stop FMS server</para></entry>
              </row>
              <row>
                <entry><para>Summary</para></entry>
                <entry><para>This use case allows Admin to stop the VISHNU FMS server on a given host.</para></entry>
              </row>
              <row>
                <entry><para>Actors</para></entry>
                <entry><para>Admin</para></entry>
              </row>
              <row>
                <entry><para>Precondition</para></entry>
                <entry><para>- The FMS Server is up and running on the given host.</para></entry>
              </row>
              <row>
                <entry><para>Postcondition</para></entry>
                <entry><para>- The FMS Server is down.</para></entry>
              </row>
              <row>
                <entry><para>Base sequence</para></entry>
                <entry><para>1.  Admin sends a request to stop the FMS Server and provides the host identifier.</para><para>2. The System updates the status of all on-going file transfer requests.</para><para>3. The System stops all internal processes on the host.</para><para>4. The System returns an information message to Admin.</para></entry>
              </row>
              <row>
                <entry><para>Branch sequence</para></entry>
                <entry/>
              </row>
              <row>
                <entry><para>Exception sequence</para></entry>
                <entry/>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>
    </section>
    <section>
      <title>Data dictionary</title>
      <para><itemizedlist>
          <listitem>
            <para><emphasis role="bold">Host</emphasis>:  Computer connected to other computers or terminals to which it provides data or computing services via a network.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Inode</emphasis></para>
            <itemizedlist>
              <listitem>
                <para>An inode is a data structure on a filesystem on Linux and other Unix-like operating systems that stores all the information about a file except its name and its actual data.</para>
              </listitem>
              <listitem>
                <para>When a file is created, it is assigned both a name and an inode number, which is an integer that is unique within the filesystem. </para>
              </listitem>
              <listitem>
                <para> An inode contains all information describing a file. </para>
              </listitem>
              <listitem>
                <para>This  includes (1) the size of the file (in bytes) and its physical location (i.e., the addresses of the blocks of storage containing the file's data on a HDD), </para>
              </listitem>
              <listitem>
                <para>(2) the file's owner and group, (3) the file's access permissions,</para>
              </listitem>
              <listitem>
                <para> (4) timestamps telling when the inode was created, last modified and last accessed and (5) a reference count telling how many hard links point to the inode. </para>
              </listitem>
            </itemizedlist>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Path</emphasis>: String of characters denoting the complete location of a file or folder (directory) in the host's data filing system.</para>
          </listitem>
          <listitem>
            <para><emphasis role="bold">Permissions</emphasis>: The set of rights (read, write, execute) that are related to a file for a given user on a Unix filesystem.</para>
          </listitem>
        </itemizedlist></para>
    </section>
  </chapter>
</book>